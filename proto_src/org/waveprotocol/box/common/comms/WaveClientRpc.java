// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/waveprotocol/box/common/comms/waveclient-rpc.proto

package org.waveprotocol.box.common.comms;

public final class WaveClientRpc {
  private WaveClientRpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ProtocolAuthenticateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string token = 1;
    /**
     * <code>required string token = 1;</code>
     */
    boolean hasToken();
    /**
     * <code>required string token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>required string token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();
  }
  /**
   * Protobuf type {@code waveserver.ProtocolAuthenticate}
   *
   * <pre>
   * A workaround for clients which do not support sending cookies over a websocket
   * connection. See: http://code.google.com/p/wave-protocol/issues/detail?id=119
   * </pre>
   */
  public static final class ProtocolAuthenticate extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolAuthenticateOrBuilder {
    // Use ProtocolAuthenticate.newBuilder() to construct.
    private ProtocolAuthenticate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtocolAuthenticate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtocolAuthenticate defaultInstance;
    public static ProtocolAuthenticate getDefaultInstance() {
      return defaultInstance;
    }

    public ProtocolAuthenticate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolAuthenticate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              token_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtocolAuthenticate> PARSER =
        new com.google.protobuf.AbstractParser<ProtocolAuthenticate>() {
      public ProtocolAuthenticate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolAuthenticate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolAuthenticate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.Object token_;
    /**
     * <code>required string token = 1;</code>
     */
    public boolean hasToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          token_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      token_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasToken()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTokenBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTokenBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.ProtocolAuthenticate}
     *
     * <pre>
     * A workaround for clients which do not support sending cookies over a websocket
     * connection. See: http://code.google.com/p/wave-protocol/issues/detail?id=119
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticate_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate result = new org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.getDefaultInstance()) return this;
        if (other.hasToken()) {
          bitField0_ |= 0x00000001;
          token_ = other.token_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasToken()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string token = 1;
      private java.lang.Object token_ = "";
      /**
       * <code>required string token = 1;</code>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string token = 1;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string token = 1;</code>
       */
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>required string token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolAuthenticate)
    }

    static {
      defaultInstance = new ProtocolAuthenticate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolAuthenticate)
  }

  public interface ProtocolAuthenticationResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code waveserver.ProtocolAuthenticationResult}
   *
   * <pre>
   * RPCs require a return type, although in this case no return data is desired.
   * We don't want to return anything here because clients which implement
   * websockets correctly (and thus don't use ProtocolAuthenticate) cannot
   * recieve the authentication related information.
   * If the client's authentication is not valid, the connection will be closed.
   * </pre>
   */
  public static final class ProtocolAuthenticationResult extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolAuthenticationResultOrBuilder {
    // Use ProtocolAuthenticationResult.newBuilder() to construct.
    private ProtocolAuthenticationResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtocolAuthenticationResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtocolAuthenticationResult defaultInstance;
    public static ProtocolAuthenticationResult getDefaultInstance() {
      return defaultInstance;
    }

    public ProtocolAuthenticationResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolAuthenticationResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticationResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtocolAuthenticationResult> PARSER =
        new com.google.protobuf.AbstractParser<ProtocolAuthenticationResult>() {
      public ProtocolAuthenticationResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolAuthenticationResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolAuthenticationResult> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.ProtocolAuthenticationResult}
     *
     * <pre>
     * RPCs require a return type, although in this case no return data is desired.
     * We don't want to return anything here because clients which implement
     * websockets correctly (and thus don't use ProtocolAuthenticate) cannot
     * recieve the authentication related information.
     * If the client's authentication is not valid, the connection will be closed.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticationResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticationResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolAuthenticationResult_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult result = new org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolAuthenticationResult)
    }

    static {
      defaultInstance = new ProtocolAuthenticationResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolAuthenticationResult)
  }

  public interface ProtocolOpenRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string participant_id = 1;
    /**
     * <code>required string participant_id = 1;</code>
     *
     * <pre>
     * User making the request.
     * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
     * </pre>
     */
    boolean hasParticipantId();
    /**
     * <code>required string participant_id = 1;</code>
     *
     * <pre>
     * User making the request.
     * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
     * </pre>
     */
    java.lang.String getParticipantId();
    /**
     * <code>required string participant_id = 1;</code>
     *
     * <pre>
     * User making the request.
     * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
     * </pre>
     */
    com.google.protobuf.ByteString
        getParticipantIdBytes();

    // required string wave_id = 2;
    /**
     * <code>required string wave_id = 2;</code>
     *
     * <pre>
     * Wave id to open.
     * </pre>
     */
    boolean hasWaveId();
    /**
     * <code>required string wave_id = 2;</code>
     *
     * <pre>
     * Wave id to open.
     * </pre>
     */
    java.lang.String getWaveId();
    /**
     * <code>required string wave_id = 2;</code>
     *
     * <pre>
     * Wave id to open.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveIdBytes();

    // repeated string wavelet_id_prefix = 3;
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    java.util.List<java.lang.String>
    getWaveletIdPrefixList();
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    int getWaveletIdPrefixCount();
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    java.lang.String getWaveletIdPrefix(int index);
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletIdPrefixBytes(int index);

    // repeated .waveserver.WaveletVersion known_wavelet = 4;
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion> 
        getKnownWaveletList();
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion getKnownWavelet(int index);
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    int getKnownWaveletCount();
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder> 
        getKnownWaveletOrBuilderList();
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code waveserver.ProtocolOpenRequest}
   *
   * <pre>
   **
   * A request to open a wave view.
   * </pre>
   */
  public static final class ProtocolOpenRequest extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolOpenRequestOrBuilder {
    // Use ProtocolOpenRequest.newBuilder() to construct.
    private ProtocolOpenRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtocolOpenRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtocolOpenRequest defaultInstance;
    public static ProtocolOpenRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ProtocolOpenRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolOpenRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              participantId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              waveId_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                waveletIdPrefix_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              waveletIdPrefix_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                knownWavelet_ = new java.util.ArrayList<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion>();
                mutable_bitField0_ |= 0x00000008;
              }
              knownWavelet_.add(input.readMessage(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          waveletIdPrefix_ = new com.google.protobuf.UnmodifiableLazyStringList(waveletIdPrefix_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          knownWavelet_ = java.util.Collections.unmodifiableList(knownWavelet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtocolOpenRequest> PARSER =
        new com.google.protobuf.AbstractParser<ProtocolOpenRequest>() {
      public ProtocolOpenRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolOpenRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolOpenRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string participant_id = 1;
    public static final int PARTICIPANT_ID_FIELD_NUMBER = 1;
    private java.lang.Object participantId_;
    /**
     * <code>required string participant_id = 1;</code>
     *
     * <pre>
     * User making the request.
     * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
     * </pre>
     */
    public boolean hasParticipantId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string participant_id = 1;</code>
     *
     * <pre>
     * User making the request.
     * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
     * </pre>
     */
    public java.lang.String getParticipantId() {
      java.lang.Object ref = participantId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          participantId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string participant_id = 1;</code>
     *
     * <pre>
     * User making the request.
     * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParticipantIdBytes() {
      java.lang.Object ref = participantId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        participantId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string wave_id = 2;
    public static final int WAVE_ID_FIELD_NUMBER = 2;
    private java.lang.Object waveId_;
    /**
     * <code>required string wave_id = 2;</code>
     *
     * <pre>
     * Wave id to open.
     * </pre>
     */
    public boolean hasWaveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string wave_id = 2;</code>
     *
     * <pre>
     * Wave id to open.
     * </pre>
     */
    public java.lang.String getWaveId() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wave_id = 2;</code>
     *
     * <pre>
     * Wave id to open.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveIdBytes() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string wavelet_id_prefix = 3;
    public static final int WAVELET_ID_PREFIX_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList waveletIdPrefix_;
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getWaveletIdPrefixList() {
      return waveletIdPrefix_;
    }
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    public int getWaveletIdPrefixCount() {
      return waveletIdPrefix_.size();
    }
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    public java.lang.String getWaveletIdPrefix(int index) {
      return waveletIdPrefix_.get(index);
    }
    /**
     * <code>repeated string wavelet_id_prefix = 3;</code>
     *
     * <pre>
     * Wavelet id prefixes by which to filter the view, empty means no filter.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletIdPrefixBytes(int index) {
      return waveletIdPrefix_.getByteString(index);
    }

    // repeated .waveserver.WaveletVersion known_wavelet = 4;
    public static final int KNOWN_WAVELET_FIELD_NUMBER = 4;
    private java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion> knownWavelet_;
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion> getKnownWaveletList() {
      return knownWavelet_;
    }
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder> 
        getKnownWaveletOrBuilderList() {
      return knownWavelet_;
    }
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    public int getKnownWaveletCount() {
      return knownWavelet_.size();
    }
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion getKnownWavelet(int index) {
      return knownWavelet_.get(index);
    }
    /**
     * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
     *
     * <pre>
     * Known wavelet versions for resynchronization.
     * </pre>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
        int index) {
      return knownWavelet_.get(index);
    }

    private void initFields() {
      participantId_ = "";
      waveId_ = "";
      waveletIdPrefix_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      knownWavelet_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasParticipantId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWaveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getKnownWaveletCount(); i++) {
        if (!getKnownWavelet(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getParticipantIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getWaveIdBytes());
      }
      for (int i = 0; i < waveletIdPrefix_.size(); i++) {
        output.writeBytes(3, waveletIdPrefix_.getByteString(i));
      }
      for (int i = 0; i < knownWavelet_.size(); i++) {
        output.writeMessage(4, knownWavelet_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getParticipantIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getWaveIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < waveletIdPrefix_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(waveletIdPrefix_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getWaveletIdPrefixList().size();
      }
      for (int i = 0; i < knownWavelet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, knownWavelet_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.ProtocolOpenRequest}
     *
     * <pre>
     **
     * A request to open a wave view.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getKnownWaveletFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        participantId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        waveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        waveletIdPrefix_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (knownWaveletBuilder_ == null) {
          knownWavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          knownWaveletBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest result = new org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.participantId_ = participantId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.waveId_ = waveId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          waveletIdPrefix_ = new com.google.protobuf.UnmodifiableLazyStringList(
              waveletIdPrefix_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.waveletIdPrefix_ = waveletIdPrefix_;
        if (knownWaveletBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            knownWavelet_ = java.util.Collections.unmodifiableList(knownWavelet_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.knownWavelet_ = knownWavelet_;
        } else {
          result.knownWavelet_ = knownWaveletBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance()) return this;
        if (other.hasParticipantId()) {
          bitField0_ |= 0x00000001;
          participantId_ = other.participantId_;
          onChanged();
        }
        if (other.hasWaveId()) {
          bitField0_ |= 0x00000002;
          waveId_ = other.waveId_;
          onChanged();
        }
        if (!other.waveletIdPrefix_.isEmpty()) {
          if (waveletIdPrefix_.isEmpty()) {
            waveletIdPrefix_ = other.waveletIdPrefix_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureWaveletIdPrefixIsMutable();
            waveletIdPrefix_.addAll(other.waveletIdPrefix_);
          }
          onChanged();
        }
        if (knownWaveletBuilder_ == null) {
          if (!other.knownWavelet_.isEmpty()) {
            if (knownWavelet_.isEmpty()) {
              knownWavelet_ = other.knownWavelet_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureKnownWaveletIsMutable();
              knownWavelet_.addAll(other.knownWavelet_);
            }
            onChanged();
          }
        } else {
          if (!other.knownWavelet_.isEmpty()) {
            if (knownWaveletBuilder_.isEmpty()) {
              knownWaveletBuilder_.dispose();
              knownWaveletBuilder_ = null;
              knownWavelet_ = other.knownWavelet_;
              bitField0_ = (bitField0_ & ~0x00000008);
              knownWaveletBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKnownWaveletFieldBuilder() : null;
            } else {
              knownWaveletBuilder_.addAllMessages(other.knownWavelet_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParticipantId()) {
          
          return false;
        }
        if (!hasWaveId()) {
          
          return false;
        }
        for (int i = 0; i < getKnownWaveletCount(); i++) {
          if (!getKnownWavelet(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string participant_id = 1;
      private java.lang.Object participantId_ = "";
      /**
       * <code>required string participant_id = 1;</code>
       *
       * <pre>
       * User making the request.
       * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
       * </pre>
       */
      public boolean hasParticipantId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string participant_id = 1;</code>
       *
       * <pre>
       * User making the request.
       * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
       * </pre>
       */
      public java.lang.String getParticipantId() {
        java.lang.Object ref = participantId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          participantId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string participant_id = 1;</code>
       *
       * <pre>
       * User making the request.
       * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParticipantIdBytes() {
        java.lang.Object ref = participantId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          participantId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string participant_id = 1;</code>
       *
       * <pre>
       * User making the request.
       * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
       * </pre>
       */
      public Builder setParticipantId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        participantId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string participant_id = 1;</code>
       *
       * <pre>
       * User making the request.
       * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
       * </pre>
       */
      public Builder clearParticipantId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        participantId_ = getDefaultInstance().getParticipantId();
        onChanged();
        return this;
      }
      /**
       * <code>required string participant_id = 1;</code>
       *
       * <pre>
       * User making the request.
       * TODO(anorth): Remove this, replacing it with the implicit logged-in user.
       * </pre>
       */
      public Builder setParticipantIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        participantId_ = value;
        onChanged();
        return this;
      }

      // required string wave_id = 2;
      private java.lang.Object waveId_ = "";
      /**
       * <code>required string wave_id = 2;</code>
       *
       * <pre>
       * Wave id to open.
       * </pre>
       */
      public boolean hasWaveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string wave_id = 2;</code>
       *
       * <pre>
       * Wave id to open.
       * </pre>
       */
      public java.lang.String getWaveId() {
        java.lang.Object ref = waveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wave_id = 2;</code>
       *
       * <pre>
       * Wave id to open.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveIdBytes() {
        java.lang.Object ref = waveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wave_id = 2;</code>
       *
       * <pre>
       * Wave id to open.
       * </pre>
       */
      public Builder setWaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        waveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wave_id = 2;</code>
       *
       * <pre>
       * Wave id to open.
       * </pre>
       */
      public Builder clearWaveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        waveId_ = getDefaultInstance().getWaveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string wave_id = 2;</code>
       *
       * <pre>
       * Wave id to open.
       * </pre>
       */
      public Builder setWaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        waveId_ = value;
        onChanged();
        return this;
      }

      // repeated string wavelet_id_prefix = 3;
      private com.google.protobuf.LazyStringList waveletIdPrefix_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureWaveletIdPrefixIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          waveletIdPrefix_ = new com.google.protobuf.LazyStringArrayList(waveletIdPrefix_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getWaveletIdPrefixList() {
        return java.util.Collections.unmodifiableList(waveletIdPrefix_);
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public int getWaveletIdPrefixCount() {
        return waveletIdPrefix_.size();
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public java.lang.String getWaveletIdPrefix(int index) {
        return waveletIdPrefix_.get(index);
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdPrefixBytes(int index) {
        return waveletIdPrefix_.getByteString(index);
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public Builder setWaveletIdPrefix(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWaveletIdPrefixIsMutable();
        waveletIdPrefix_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public Builder addWaveletIdPrefix(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWaveletIdPrefixIsMutable();
        waveletIdPrefix_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public Builder addAllWaveletIdPrefix(
          java.lang.Iterable<java.lang.String> values) {
        ensureWaveletIdPrefixIsMutable();
        super.addAll(values, waveletIdPrefix_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public Builder clearWaveletIdPrefix() {
        waveletIdPrefix_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string wavelet_id_prefix = 3;</code>
       *
       * <pre>
       * Wavelet id prefixes by which to filter the view, empty means no filter.
       * </pre>
       */
      public Builder addWaveletIdPrefixBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWaveletIdPrefixIsMutable();
        waveletIdPrefix_.add(value);
        onChanged();
        return this;
      }

      // repeated .waveserver.WaveletVersion known_wavelet = 4;
      private java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion> knownWavelet_ =
        java.util.Collections.emptyList();
      private void ensureKnownWaveletIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          knownWavelet_ = new java.util.ArrayList<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion>(knownWavelet_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder> knownWaveletBuilder_;

      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion> getKnownWaveletList() {
        if (knownWaveletBuilder_ == null) {
          return java.util.Collections.unmodifiableList(knownWavelet_);
        } else {
          return knownWaveletBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public int getKnownWaveletCount() {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.size();
        } else {
          return knownWaveletBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion getKnownWavelet(int index) {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.get(index);
        } else {
          return knownWaveletBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder setKnownWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.set(index, value);
          onChanged();
        } else {
          knownWaveletBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder setKnownWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.set(index, builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder addKnownWavelet(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(value);
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder addKnownWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(index, value);
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder addKnownWavelet(
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder addKnownWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(index, builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder addAllKnownWavelet(
          java.lang.Iterable<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion> values) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          super.addAll(values, knownWavelet_);
          onChanged();
        } else {
          knownWaveletBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder clearKnownWavelet() {
        if (knownWaveletBuilder_ == null) {
          knownWavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          knownWaveletBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public Builder removeKnownWavelet(int index) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.remove(index);
          onChanged();
        } else {
          knownWaveletBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder getKnownWaveletBuilder(
          int index) {
        return getKnownWaveletFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
          int index) {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.get(index);  } else {
          return knownWaveletBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder> 
           getKnownWaveletOrBuilderList() {
        if (knownWaveletBuilder_ != null) {
          return knownWaveletBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(knownWavelet_);
        }
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder addKnownWaveletBuilder() {
        return getKnownWaveletFieldBuilder().addBuilder(
            org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder addKnownWaveletBuilder(
          int index) {
        return getKnownWaveletFieldBuilder().addBuilder(
            index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .waveserver.WaveletVersion known_wavelet = 4;</code>
       *
       * <pre>
       * Known wavelet versions for resynchronization.
       * </pre>
       */
      public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder> 
           getKnownWaveletBuilderList() {
        return getKnownWaveletFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder> 
          getKnownWaveletFieldBuilder() {
        if (knownWaveletBuilder_ == null) {
          knownWaveletBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder>(
                  knownWavelet_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          knownWavelet_ = null;
        }
        return knownWaveletBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolOpenRequest)
    }

    static {
      defaultInstance = new ProtocolOpenRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolOpenRequest)
  }

  public interface WaveletVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string wavelet_id = 1;
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    boolean hasWaveletId();
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // required .federation.ProtocolHashedVersion hashed_version = 2;
    /**
     * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
     */
    boolean hasHashedVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionOrBuilder();
  }
  /**
   * Protobuf type {@code waveserver.WaveletVersion}
   *
   * <pre>
   * A pair of (wavelet id, wavelet version)
   * </pre>
   */
  public static final class WaveletVersion extends
      com.google.protobuf.GeneratedMessage
      implements WaveletVersionOrBuilder {
    // Use WaveletVersion.newBuilder() to construct.
    private WaveletVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletVersion defaultInstance;
    public static WaveletVersion getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletId_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = hashedVersion_.toBuilder();
              }
              hashedVersion_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hashedVersion_);
                hashedVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.class, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletVersion> PARSER =
        new com.google.protobuf.AbstractParser<WaveletVersion>() {
      public WaveletVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string wavelet_id = 1;
    public static final int WAVELET_ID_FIELD_NUMBER = 1;
    private java.lang.Object waveletId_;
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolHashedVersion hashed_version = 2;
    public static final int HASHED_VERSION_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersion_;
    /**
     * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
     */
    public boolean hasHashedVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersion() {
      return hashedVersion_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionOrBuilder() {
      return hashedVersion_;
    }

    private void initFields() {
      waveletId_ = "";
      hashedVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHashedVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHashedVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, hashedVersion_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, hashedVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.WaveletVersion}
     *
     * <pre>
     * A pair of (wavelet id, wavelet version)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.class, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHashedVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (hashedVersionBuilder_ == null) {
          hashedVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          hashedVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletVersion_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion result = new org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletId_ = waveletId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (hashedVersionBuilder_ == null) {
          result.hashedVersion_ = hashedVersion_;
        } else {
          result.hashedVersion_ = hashedVersionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000001;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (other.hasHashedVersion()) {
          mergeHashedVersion(other.getHashedVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasHashedVersion()) {
          
          return false;
        }
        if (!getHashedVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.WaveletVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string wavelet_id = 1;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolHashedVersion hashed_version = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> hashedVersionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public boolean hasHashedVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersion() {
        if (hashedVersionBuilder_ == null) {
          return hashedVersion_;
        } else {
          return hashedVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public Builder setHashedVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (hashedVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hashedVersion_ = value;
          onChanged();
        } else {
          hashedVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public Builder setHashedVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (hashedVersionBuilder_ == null) {
          hashedVersion_ = builderForValue.build();
          onChanged();
        } else {
          hashedVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public Builder mergeHashedVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (hashedVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              hashedVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            hashedVersion_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(hashedVersion_).mergeFrom(value).buildPartial();
          } else {
            hashedVersion_ = value;
          }
          onChanged();
        } else {
          hashedVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public Builder clearHashedVersion() {
        if (hashedVersionBuilder_ == null) {
          hashedVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          hashedVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getHashedVersionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHashedVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionOrBuilder() {
        if (hashedVersionBuilder_ != null) {
          return hashedVersionBuilder_.getMessageOrBuilder();
        } else {
          return hashedVersion_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion hashed_version = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getHashedVersionFieldBuilder() {
        if (hashedVersionBuilder_ == null) {
          hashedVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  hashedVersion_,
                  getParentForChildren(),
                  isClean());
          hashedVersion_ = null;
        }
        return hashedVersionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.WaveletVersion)
    }

    static {
      defaultInstance = new WaveletVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.WaveletVersion)
  }

  public interface DocumentSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string document_id = 1;
    /**
     * <code>required string document_id = 1;</code>
     */
    boolean hasDocumentId();
    /**
     * <code>required string document_id = 1;</code>
     */
    java.lang.String getDocumentId();
    /**
     * <code>required string document_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDocumentIdBytes();

    // required .federation.ProtocolDocumentOperation document_operation = 2;
    /**
     * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
     *
     * <pre>
     * This is a document operation that takes the document from zero to its current state.
     * </pre>
     */
    boolean hasDocumentOperation();
    /**
     * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
     *
     * <pre>
     * This is a document operation that takes the document from zero to its current state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation();
    /**
     * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
     *
     * <pre>
     * This is a document operation that takes the document from zero to its current state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDocumentOperationOrBuilder();

    // required string author = 3;
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     * ** Metadata
     * The participant who submitted the first operation to the document
     * </pre>
     */
    boolean hasAuthor();
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     * ** Metadata
     * The participant who submitted the first operation to the document
     * </pre>
     */
    java.lang.String getAuthor();
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     * ** Metadata
     * The participant who submitted the first operation to the document
     * </pre>
     */
    com.google.protobuf.ByteString
        getAuthorBytes();

    // repeated string contributor = 4;
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    java.util.List<java.lang.String>
    getContributorList();
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    int getContributorCount();
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    java.lang.String getContributor(int index);
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    com.google.protobuf.ByteString
        getContributorBytes(int index);

    // required int64 last_modified_version = 5;
    /**
     * <code>required int64 last_modified_version = 5;</code>
     *
     * <pre>
     * The wavelet version when the document was last modified
     * </pre>
     */
    boolean hasLastModifiedVersion();
    /**
     * <code>required int64 last_modified_version = 5;</code>
     *
     * <pre>
     * The wavelet version when the document was last modified
     * </pre>
     */
    long getLastModifiedVersion();

    // required int64 last_modified_time = 6;
    /**
     * <code>required int64 last_modified_time = 6;</code>
     */
    boolean hasLastModifiedTime();
    /**
     * <code>required int64 last_modified_time = 6;</code>
     */
    long getLastModifiedTime();
  }
  /**
   * Protobuf type {@code waveserver.DocumentSnapshot}
   *
   * <pre>
   * A document and associated metadata
   * </pre>
   */
  public static final class DocumentSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements DocumentSnapshotOrBuilder {
    // Use DocumentSnapshot.newBuilder() to construct.
    private DocumentSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DocumentSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DocumentSnapshot defaultInstance;
    public static DocumentSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public DocumentSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DocumentSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              documentId_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = documentOperation_.toBuilder();
              }
              documentOperation_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(documentOperation_);
                documentOperation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              author_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                contributor_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              contributor_.add(input.readBytes());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              lastModifiedVersion_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              lastModifiedTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          contributor_ = new com.google.protobuf.UnmodifiableLazyStringList(contributor_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_DocumentSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_DocumentSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.class, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<DocumentSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<DocumentSnapshot>() {
      public DocumentSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DocumentSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string document_id = 1;
    public static final int DOCUMENT_ID_FIELD_NUMBER = 1;
    private java.lang.Object documentId_;
    /**
     * <code>required string document_id = 1;</code>
     */
    public boolean hasDocumentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string document_id = 1;</code>
     */
    public java.lang.String getDocumentId() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          documentId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string document_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDocumentIdBytes() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        documentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolDocumentOperation document_operation = 2;
    public static final int DOCUMENT_OPERATION_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation documentOperation_;
    /**
     * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
     *
     * <pre>
     * This is a document operation that takes the document from zero to its current state.
     * </pre>
     */
    public boolean hasDocumentOperation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
     *
     * <pre>
     * This is a document operation that takes the document from zero to its current state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation() {
      return documentOperation_;
    }
    /**
     * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
     *
     * <pre>
     * This is a document operation that takes the document from zero to its current state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDocumentOperationOrBuilder() {
      return documentOperation_;
    }

    // required string author = 3;
    public static final int AUTHOR_FIELD_NUMBER = 3;
    private java.lang.Object author_;
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     * ** Metadata
     * The participant who submitted the first operation to the document
     * </pre>
     */
    public boolean hasAuthor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     * ** Metadata
     * The participant who submitted the first operation to the document
     * </pre>
     */
    public java.lang.String getAuthor() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          author_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     * ** Metadata
     * The participant who submitted the first operation to the document
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAuthorBytes() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        author_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string contributor = 4;
    public static final int CONTRIBUTOR_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList contributor_;
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    public java.util.List<java.lang.String>
        getContributorList() {
      return contributor_;
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    public int getContributorCount() {
      return contributor_.size();
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    public java.lang.String getContributor(int index) {
      return contributor_.get(index);
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContributorBytes(int index) {
      return contributor_.getByteString(index);
    }

    // required int64 last_modified_version = 5;
    public static final int LAST_MODIFIED_VERSION_FIELD_NUMBER = 5;
    private long lastModifiedVersion_;
    /**
     * <code>required int64 last_modified_version = 5;</code>
     *
     * <pre>
     * The wavelet version when the document was last modified
     * </pre>
     */
    public boolean hasLastModifiedVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 last_modified_version = 5;</code>
     *
     * <pre>
     * The wavelet version when the document was last modified
     * </pre>
     */
    public long getLastModifiedVersion() {
      return lastModifiedVersion_;
    }

    // required int64 last_modified_time = 6;
    public static final int LAST_MODIFIED_TIME_FIELD_NUMBER = 6;
    private long lastModifiedTime_;
    /**
     * <code>required int64 last_modified_time = 6;</code>
     */
    public boolean hasLastModifiedTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 last_modified_time = 6;</code>
     */
    public long getLastModifiedTime() {
      return lastModifiedTime_;
    }

    private void initFields() {
      documentId_ = "";
      documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      author_ = "";
      contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      lastModifiedVersion_ = 0L;
      lastModifiedTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDocumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDocumentOperation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAuthor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDocumentOperation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDocumentIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, documentOperation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAuthorBytes());
      }
      for (int i = 0; i < contributor_.size(); i++) {
        output.writeBytes(4, contributor_.getByteString(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, lastModifiedVersion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, lastModifiedTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDocumentIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, documentOperation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAuthorBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < contributor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(contributor_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getContributorList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastModifiedVersion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, lastModifiedTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.DocumentSnapshot}
     *
     * <pre>
     * A document and associated metadata
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_DocumentSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_DocumentSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.class, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDocumentOperationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        documentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (documentOperationBuilder_ == null) {
          documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
        } else {
          documentOperationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        author_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        lastModifiedVersion_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        lastModifiedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_DocumentSnapshot_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot result = new org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.documentId_ = documentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (documentOperationBuilder_ == null) {
          result.documentOperation_ = documentOperation_;
        } else {
          result.documentOperation_ = documentOperationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.author_ = author_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          contributor_ = new com.google.protobuf.UnmodifiableLazyStringList(
              contributor_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.contributor_ = contributor_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastModifiedVersion_ = lastModifiedVersion_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastModifiedTime_ = lastModifiedTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.getDefaultInstance()) return this;
        if (other.hasDocumentId()) {
          bitField0_ |= 0x00000001;
          documentId_ = other.documentId_;
          onChanged();
        }
        if (other.hasDocumentOperation()) {
          mergeDocumentOperation(other.getDocumentOperation());
        }
        if (other.hasAuthor()) {
          bitField0_ |= 0x00000004;
          author_ = other.author_;
          onChanged();
        }
        if (!other.contributor_.isEmpty()) {
          if (contributor_.isEmpty()) {
            contributor_ = other.contributor_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureContributorIsMutable();
            contributor_.addAll(other.contributor_);
          }
          onChanged();
        }
        if (other.hasLastModifiedVersion()) {
          setLastModifiedVersion(other.getLastModifiedVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDocumentId()) {
          
          return false;
        }
        if (!hasDocumentOperation()) {
          
          return false;
        }
        if (!hasAuthor()) {
          
          return false;
        }
        if (!hasLastModifiedVersion()) {
          
          return false;
        }
        if (!hasLastModifiedTime()) {
          
          return false;
        }
        if (!getDocumentOperation().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string document_id = 1;
      private java.lang.Object documentId_ = "";
      /**
       * <code>required string document_id = 1;</code>
       */
      public boolean hasDocumentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public java.lang.String getDocumentId() {
        java.lang.Object ref = documentId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          documentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDocumentIdBytes() {
        java.lang.Object ref = documentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          documentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder setDocumentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder clearDocumentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        documentId_ = getDefaultInstance().getDocumentId();
        onChanged();
        return this;
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder setDocumentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolDocumentOperation document_operation = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> documentOperationBuilder_;
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public boolean hasDocumentOperation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation() {
        if (documentOperationBuilder_ == null) {
          return documentOperation_;
        } else {
          return documentOperationBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public Builder setDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (documentOperationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          documentOperation_ = value;
          onChanged();
        } else {
          documentOperationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public Builder setDocumentOperation(
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder builderForValue) {
        if (documentOperationBuilder_ == null) {
          documentOperation_ = builderForValue.build();
          onChanged();
        } else {
          documentOperationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public Builder mergeDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (documentOperationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              documentOperation_ != org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance()) {
            documentOperation_ =
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.newBuilder(documentOperation_).mergeFrom(value).buildPartial();
          } else {
            documentOperation_ = value;
          }
          onChanged();
        } else {
          documentOperationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public Builder clearDocumentOperation() {
        if (documentOperationBuilder_ == null) {
          documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
          onChanged();
        } else {
          documentOperationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder getDocumentOperationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDocumentOperationFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDocumentOperationOrBuilder() {
        if (documentOperationBuilder_ != null) {
          return documentOperationBuilder_.getMessageOrBuilder();
        } else {
          return documentOperation_;
        }
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation document_operation = 2;</code>
       *
       * <pre>
       * This is a document operation that takes the document from zero to its current state.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> 
          getDocumentOperationFieldBuilder() {
        if (documentOperationBuilder_ == null) {
          documentOperationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder>(
                  documentOperation_,
                  getParentForChildren(),
                  isClean());
          documentOperation_ = null;
        }
        return documentOperationBuilder_;
      }

      // required string author = 3;
      private java.lang.Object author_ = "";
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       * ** Metadata
       * The participant who submitted the first operation to the document
       * </pre>
       */
      public boolean hasAuthor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       * ** Metadata
       * The participant who submitted the first operation to the document
       * </pre>
       */
      public java.lang.String getAuthor() {
        java.lang.Object ref = author_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          author_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       * ** Metadata
       * The participant who submitted the first operation to the document
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAuthorBytes() {
        java.lang.Object ref = author_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          author_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       * ** Metadata
       * The participant who submitted the first operation to the document
       * </pre>
       */
      public Builder setAuthor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        author_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       * ** Metadata
       * The participant who submitted the first operation to the document
       * </pre>
       */
      public Builder clearAuthor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        author_ = getDefaultInstance().getAuthor();
        onChanged();
        return this;
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       * ** Metadata
       * The participant who submitted the first operation to the document
       * </pre>
       */
      public Builder setAuthorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        author_ = value;
        onChanged();
        return this;
      }

      // repeated string contributor = 4;
      private com.google.protobuf.LazyStringList contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureContributorIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          contributor_ = new com.google.protobuf.LazyStringArrayList(contributor_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public java.util.List<java.lang.String>
          getContributorList() {
        return java.util.Collections.unmodifiableList(contributor_);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public int getContributorCount() {
        return contributor_.size();
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public java.lang.String getContributor(int index) {
        return contributor_.get(index);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContributorBytes(int index) {
        return contributor_.getByteString(index);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public Builder setContributor(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public Builder addContributor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public Builder addAllContributor(
          java.lang.Iterable<java.lang.String> values) {
        ensureContributorIsMutable();
        super.addAll(values, contributor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public Builder clearContributor() {
        contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document
       * </pre>
       */
      public Builder addContributorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.add(value);
        onChanged();
        return this;
      }

      // required int64 last_modified_version = 5;
      private long lastModifiedVersion_ ;
      /**
       * <code>required int64 last_modified_version = 5;</code>
       *
       * <pre>
       * The wavelet version when the document was last modified
       * </pre>
       */
      public boolean hasLastModifiedVersion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 last_modified_version = 5;</code>
       *
       * <pre>
       * The wavelet version when the document was last modified
       * </pre>
       */
      public long getLastModifiedVersion() {
        return lastModifiedVersion_;
      }
      /**
       * <code>required int64 last_modified_version = 5;</code>
       *
       * <pre>
       * The wavelet version when the document was last modified
       * </pre>
       */
      public Builder setLastModifiedVersion(long value) {
        bitField0_ |= 0x00000010;
        lastModifiedVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 last_modified_version = 5;</code>
       *
       * <pre>
       * The wavelet version when the document was last modified
       * </pre>
       */
      public Builder clearLastModifiedVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastModifiedVersion_ = 0L;
        onChanged();
        return this;
      }

      // required int64 last_modified_time = 6;
      private long lastModifiedTime_ ;
      /**
       * <code>required int64 last_modified_time = 6;</code>
       */
      public boolean hasLastModifiedTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 last_modified_time = 6;</code>
       */
      public long getLastModifiedTime() {
        return lastModifiedTime_;
      }
      /**
       * <code>required int64 last_modified_time = 6;</code>
       */
      public Builder setLastModifiedTime(long value) {
        bitField0_ |= 0x00000020;
        lastModifiedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 last_modified_time = 6;</code>
       */
      public Builder clearLastModifiedTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lastModifiedTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.DocumentSnapshot)
    }

    static {
      defaultInstance = new DocumentSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.DocumentSnapshot)
  }

  public interface WaveletSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string wavelet_id = 1;
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    boolean hasWaveletId();
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // repeated string participant_id = 2;
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    java.util.List<java.lang.String>
    getParticipantIdList();
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    int getParticipantIdCount();
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    java.lang.String getParticipantId(int index);
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    com.google.protobuf.ByteString
        getParticipantIdBytes(int index);

    // repeated .waveserver.DocumentSnapshot document = 3;
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot> 
        getDocumentList();
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot getDocument(int index);
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    int getDocumentCount();
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder> 
        getDocumentOrBuilderList();
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder getDocumentOrBuilder(
        int index);

    // required .federation.ProtocolHashedVersion version = 4;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     * ** Metadata
     * The current version of the wavelet
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     * ** Metadata
     * The current version of the wavelet
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     * ** Metadata
     * The current version of the wavelet
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder();

    // required int64 last_modified_time = 5;
    /**
     * <code>required int64 last_modified_time = 5;</code>
     *
     * <pre>
     * The participant that created the wavelet
     * </pre>
     */
    boolean hasLastModifiedTime();
    /**
     * <code>required int64 last_modified_time = 5;</code>
     *
     * <pre>
     * The participant that created the wavelet
     * </pre>
     */
    long getLastModifiedTime();

    // required string creator = 6;
    /**
     * <code>required string creator = 6;</code>
     */
    boolean hasCreator();
    /**
     * <code>required string creator = 6;</code>
     */
    java.lang.String getCreator();
    /**
     * <code>required string creator = 6;</code>
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    // required int64 creation_time = 7;
    /**
     * <code>required int64 creation_time = 7;</code>
     */
    boolean hasCreationTime();
    /**
     * <code>required int64 creation_time = 7;</code>
     */
    long getCreationTime();
  }
  /**
   * Protobuf type {@code waveserver.WaveletSnapshot}
   *
   * <pre>
   * A wavelet and associated metadata.
   * </pre>
   */
  public static final class WaveletSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements WaveletSnapshotOrBuilder {
    // Use WaveletSnapshot.newBuilder() to construct.
    private WaveletSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletSnapshot defaultInstance;
    public static WaveletSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                participantId_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              participantId_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                document_ = new java.util.ArrayList<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot>();
                mutable_bitField0_ |= 0x00000004;
              }
              document_.add(input.readMessage(org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              lastModifiedTime_ = input.readInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              creator_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              creationTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          participantId_ = new com.google.protobuf.UnmodifiableLazyStringList(participantId_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          document_ = java.util.Collections.unmodifiableList(document_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.class, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<WaveletSnapshot>() {
      public WaveletSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string wavelet_id = 1;
    public static final int WAVELET_ID_FIELD_NUMBER = 1;
    private java.lang.Object waveletId_;
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wavelet_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string participant_id = 2;
    public static final int PARTICIPANT_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList participantId_;
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getParticipantIdList() {
      return participantId_;
    }
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    public int getParticipantIdCount() {
      return participantId_.size();
    }
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    public java.lang.String getParticipantId(int index) {
      return participantId_.get(index);
    }
    /**
     * <code>repeated string participant_id = 2;</code>
     *
     * <pre>
     * The list of participants of this wavelet.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParticipantIdBytes(int index) {
      return participantId_.getByteString(index);
    }

    // repeated .waveserver.DocumentSnapshot document = 3;
    public static final int DOCUMENT_FIELD_NUMBER = 3;
    private java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot> document_;
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot> getDocumentList() {
      return document_;
    }
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder> 
        getDocumentOrBuilderList() {
      return document_;
    }
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public int getDocumentCount() {
      return document_.size();
    }
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot getDocument(int index) {
      return document_.get(index);
    }
    /**
     * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder getDocumentOrBuilder(
        int index) {
      return document_.get(index);
    }

    // required .federation.ProtocolHashedVersion version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     * ** Metadata
     * The current version of the wavelet
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     * ** Metadata
     * The current version of the wavelet
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
      return version_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     * ** Metadata
     * The current version of the wavelet
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
      return version_;
    }

    // required int64 last_modified_time = 5;
    public static final int LAST_MODIFIED_TIME_FIELD_NUMBER = 5;
    private long lastModifiedTime_;
    /**
     * <code>required int64 last_modified_time = 5;</code>
     *
     * <pre>
     * The participant that created the wavelet
     * </pre>
     */
    public boolean hasLastModifiedTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 last_modified_time = 5;</code>
     *
     * <pre>
     * The participant that created the wavelet
     * </pre>
     */
    public long getLastModifiedTime() {
      return lastModifiedTime_;
    }

    // required string creator = 6;
    public static final int CREATOR_FIELD_NUMBER = 6;
    private java.lang.Object creator_;
    /**
     * <code>required string creator = 6;</code>
     */
    public boolean hasCreator() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string creator = 6;</code>
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          creator_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string creator = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 creation_time = 7;
    public static final int CREATION_TIME_FIELD_NUMBER = 7;
    private long creationTime_;
    /**
     * <code>required int64 creation_time = 7;</code>
     */
    public boolean hasCreationTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 creation_time = 7;</code>
     */
    public long getCreationTime() {
      return creationTime_;
    }

    private void initFields() {
      waveletId_ = "";
      participantId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      document_ = java.util.Collections.emptyList();
      version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      lastModifiedTime_ = 0L;
      creator_ = "";
      creationTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreator()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreationTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDocumentCount(); i++) {
        if (!getDocument(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletIdBytes());
      }
      for (int i = 0; i < participantId_.size(); i++) {
        output.writeBytes(2, participantId_.getByteString(i));
      }
      for (int i = 0; i < document_.size(); i++) {
        output.writeMessage(3, document_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(7, creationTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < participantId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(participantId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getParticipantIdList().size();
      }
      for (int i = 0; i < document_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, document_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, creationTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.WaveletSnapshot}
     *
     * <pre>
     * A wavelet and associated metadata.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.class, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDocumentFieldBuilder();
          getVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        participantId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (documentBuilder_ == null) {
          document_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          documentBuilder_.clear();
        }
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        lastModifiedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        creator_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        creationTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveletSnapshot_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot result = new org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletId_ = waveletId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          participantId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              participantId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.participantId_ = participantId_;
        if (documentBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            document_ = java.util.Collections.unmodifiableList(document_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.document_ = document_;
        } else {
          result.document_ = documentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastModifiedTime_ = lastModifiedTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.creator_ = creator_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.creationTime_ = creationTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000001;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (!other.participantId_.isEmpty()) {
          if (participantId_.isEmpty()) {
            participantId_ = other.participantId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParticipantIdIsMutable();
            participantId_.addAll(other.participantId_);
          }
          onChanged();
        }
        if (documentBuilder_ == null) {
          if (!other.document_.isEmpty()) {
            if (document_.isEmpty()) {
              document_ = other.document_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDocumentIsMutable();
              document_.addAll(other.document_);
            }
            onChanged();
          }
        } else {
          if (!other.document_.isEmpty()) {
            if (documentBuilder_.isEmpty()) {
              documentBuilder_.dispose();
              documentBuilder_ = null;
              document_ = other.document_;
              bitField0_ = (bitField0_ & ~0x00000004);
              documentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDocumentFieldBuilder() : null;
            } else {
              documentBuilder_.addAllMessages(other.document_);
            }
          }
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        if (other.hasCreator()) {
          bitField0_ |= 0x00000020;
          creator_ = other.creator_;
          onChanged();
        }
        if (other.hasCreationTime()) {
          setCreationTime(other.getCreationTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasLastModifiedTime()) {
          
          return false;
        }
        if (!hasCreator()) {
          
          return false;
        }
        if (!hasCreationTime()) {
          
          return false;
        }
        for (int i = 0; i < getDocumentCount(); i++) {
          if (!getDocument(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string wavelet_id = 1;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_id = 1;</code>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // repeated string participant_id = 2;
      private com.google.protobuf.LazyStringList participantId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureParticipantIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          participantId_ = new com.google.protobuf.LazyStringArrayList(participantId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getParticipantIdList() {
        return java.util.Collections.unmodifiableList(participantId_);
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public int getParticipantIdCount() {
        return participantId_.size();
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public java.lang.String getParticipantId(int index) {
        return participantId_.get(index);
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParticipantIdBytes(int index) {
        return participantId_.getByteString(index);
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public Builder setParticipantId(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIdIsMutable();
        participantId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public Builder addParticipantId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIdIsMutable();
        participantId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public Builder addAllParticipantId(
          java.lang.Iterable<java.lang.String> values) {
        ensureParticipantIdIsMutable();
        super.addAll(values, participantId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public Builder clearParticipantId() {
        participantId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant_id = 2;</code>
       *
       * <pre>
       * The list of participants of this wavelet.
       * </pre>
       */
      public Builder addParticipantIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIdIsMutable();
        participantId_.add(value);
        onChanged();
        return this;
      }

      // repeated .waveserver.DocumentSnapshot document = 3;
      private java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot> document_ =
        java.util.Collections.emptyList();
      private void ensureDocumentIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          document_ = new java.util.ArrayList<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot>(document_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder> documentBuilder_;

      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot> getDocumentList() {
        if (documentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(document_);
        } else {
          return documentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public int getDocumentCount() {
        if (documentBuilder_ == null) {
          return document_.size();
        } else {
          return documentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot getDocument(int index) {
        if (documentBuilder_ == null) {
          return document_.get(index);
        } else {
          return documentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder setDocument(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.set(index, value);
          onChanged();
        } else {
          documentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder setDocument(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.set(index, builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.add(value);
          onChanged();
        } else {
          documentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.add(index, value);
          onChanged();
        } else {
          documentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.add(builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.add(index, builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addAllDocument(
          java.lang.Iterable<? extends org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot> values) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          super.addAll(values, document_);
          onChanged();
        } else {
          documentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder clearDocument() {
        if (documentBuilder_ == null) {
          document_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          documentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder removeDocument(int index) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.remove(index);
          onChanged();
        } else {
          documentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder getDocumentBuilder(
          int index) {
        return getDocumentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder getDocumentOrBuilder(
          int index) {
        if (documentBuilder_ == null) {
          return document_.get(index);  } else {
          return documentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder> 
           getDocumentOrBuilderList() {
        if (documentBuilder_ != null) {
          return documentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(document_);
        }
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder addDocumentBuilder() {
        return getDocumentFieldBuilder().addBuilder(
            org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder addDocumentBuilder(
          int index) {
        return getDocumentFieldBuilder().addBuilder(
            index, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .waveserver.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder> 
           getDocumentBuilderList() {
        return getDocumentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder> 
          getDocumentFieldBuilder() {
        if (documentBuilder_ == null) {
          documentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.DocumentSnapshotOrBuilder>(
                  document_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        return documentBuilder_;
      }

      // required .federation.ProtocolHashedVersion version = 4;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> versionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
        if (versionBuilder_ == null) {
          return version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public Builder setVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public Builder mergeVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              version_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            version_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getVersionBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       * ** Metadata
       * The current version of the wavelet
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // required int64 last_modified_time = 5;
      private long lastModifiedTime_ ;
      /**
       * <code>required int64 last_modified_time = 5;</code>
       *
       * <pre>
       * The participant that created the wavelet
       * </pre>
       */
      public boolean hasLastModifiedTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 last_modified_time = 5;</code>
       *
       * <pre>
       * The participant that created the wavelet
       * </pre>
       */
      public long getLastModifiedTime() {
        return lastModifiedTime_;
      }
      /**
       * <code>required int64 last_modified_time = 5;</code>
       *
       * <pre>
       * The participant that created the wavelet
       * </pre>
       */
      public Builder setLastModifiedTime(long value) {
        bitField0_ |= 0x00000010;
        lastModifiedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 last_modified_time = 5;</code>
       *
       * <pre>
       * The participant that created the wavelet
       * </pre>
       */
      public Builder clearLastModifiedTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastModifiedTime_ = 0L;
        onChanged();
        return this;
      }

      // required string creator = 6;
      private java.lang.Object creator_ = "";
      /**
       * <code>required string creator = 6;</code>
       */
      public boolean hasCreator() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string creator = 6;</code>
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string creator = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string creator = 6;</code>
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        creator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string creator = 6;</code>
       */
      public Builder clearCreator() {
        bitField0_ = (bitField0_ & ~0x00000020);
        creator_ = getDefaultInstance().getCreator();
        onChanged();
        return this;
      }
      /**
       * <code>required string creator = 6;</code>
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        creator_ = value;
        onChanged();
        return this;
      }

      // required int64 creation_time = 7;
      private long creationTime_ ;
      /**
       * <code>required int64 creation_time = 7;</code>
       */
      public boolean hasCreationTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 creation_time = 7;</code>
       */
      public long getCreationTime() {
        return creationTime_;
      }
      /**
       * <code>required int64 creation_time = 7;</code>
       */
      public Builder setCreationTime(long value) {
        bitField0_ |= 0x00000040;
        creationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 creation_time = 7;</code>
       */
      public Builder clearCreationTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        creationTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.WaveletSnapshot)
    }

    static {
      defaultInstance = new WaveletSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.WaveletSnapshot)
  }

  public interface WaveViewSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string wave_id = 1;
    /**
     * <code>required string wave_id = 1;</code>
     */
    boolean hasWaveId();
    /**
     * <code>required string wave_id = 1;</code>
     */
    java.lang.String getWaveId();
    /**
     * <code>required string wave_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getWaveIdBytes();

    // repeated .waveserver.WaveletSnapshot wavelet = 2;
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot> 
        getWaveletList();
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getWavelet(int index);
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    int getWaveletCount();
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> 
        getWaveletOrBuilderList();
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder getWaveletOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code waveserver.WaveViewSnapshot}
   *
   * <pre>
   * A snapshot of a user's view of a wave.
   * Contains snapshots of all the wavelets visible to a user
   * </pre>
   */
  public static final class WaveViewSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements WaveViewSnapshotOrBuilder {
    // Use WaveViewSnapshot.newBuilder() to construct.
    private WaveViewSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveViewSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveViewSnapshot defaultInstance;
    public static WaveViewSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public WaveViewSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveViewSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                wavelet_ = new java.util.ArrayList<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot>();
                mutable_bitField0_ |= 0x00000002;
              }
              wavelet_.add(input.readMessage(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          wavelet_ = java.util.Collections.unmodifiableList(wavelet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveViewSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveViewSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.class, org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveViewSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<WaveViewSnapshot>() {
      public WaveViewSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveViewSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveViewSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string wave_id = 1;
    public static final int WAVE_ID_FIELD_NUMBER = 1;
    private java.lang.Object waveId_;
    /**
     * <code>required string wave_id = 1;</code>
     */
    public boolean hasWaveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string wave_id = 1;</code>
     */
    public java.lang.String getWaveId() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wave_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWaveIdBytes() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .waveserver.WaveletSnapshot wavelet = 2;
    public static final int WAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot> wavelet_;
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot> getWaveletList() {
      return wavelet_;
    }
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    public java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> 
        getWaveletOrBuilderList() {
      return wavelet_;
    }
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    public int getWaveletCount() {
      return wavelet_.size();
    }
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getWavelet(int index) {
      return wavelet_.get(index);
    }
    /**
     * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder getWaveletOrBuilder(
        int index) {
      return wavelet_.get(index);
    }

    private void initFields() {
      waveId_ = "";
      wavelet_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getWaveletCount(); i++) {
        if (!getWavelet(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveIdBytes());
      }
      for (int i = 0; i < wavelet_.size(); i++) {
        output.writeMessage(2, wavelet_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveIdBytes());
      }
      for (int i = 0; i < wavelet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, wavelet_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.WaveViewSnapshot}
     *
     * <pre>
     * A snapshot of a user's view of a wave.
     * Contains snapshots of all the wavelets visible to a user
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveViewSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveViewSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.class, org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWaveletFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (waveletBuilder_ == null) {
          wavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          waveletBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_WaveViewSnapshot_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot result = new org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveId_ = waveId_;
        if (waveletBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            wavelet_ = java.util.Collections.unmodifiableList(wavelet_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.wavelet_ = wavelet_;
        } else {
          result.wavelet_ = waveletBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          bitField0_ |= 0x00000001;
          waveId_ = other.waveId_;
          onChanged();
        }
        if (waveletBuilder_ == null) {
          if (!other.wavelet_.isEmpty()) {
            if (wavelet_.isEmpty()) {
              wavelet_ = other.wavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWaveletIsMutable();
              wavelet_.addAll(other.wavelet_);
            }
            onChanged();
          }
        } else {
          if (!other.wavelet_.isEmpty()) {
            if (waveletBuilder_.isEmpty()) {
              waveletBuilder_.dispose();
              waveletBuilder_ = null;
              wavelet_ = other.wavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
              waveletBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWaveletFieldBuilder() : null;
            } else {
              waveletBuilder_.addAllMessages(other.wavelet_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveId()) {
          
          return false;
        }
        for (int i = 0; i < getWaveletCount(); i++) {
          if (!getWavelet(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.WaveViewSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string wave_id = 1;
      private java.lang.Object waveId_ = "";
      /**
       * <code>required string wave_id = 1;</code>
       */
      public boolean hasWaveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string wave_id = 1;</code>
       */
      public java.lang.String getWaveId() {
        java.lang.Object ref = waveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wave_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWaveIdBytes() {
        java.lang.Object ref = waveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wave_id = 1;</code>
       */
      public Builder setWaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wave_id = 1;</code>
       */
      public Builder clearWaveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveId_ = getDefaultInstance().getWaveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string wave_id = 1;</code>
       */
      public Builder setWaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }

      // repeated .waveserver.WaveletSnapshot wavelet = 2;
      private java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot> wavelet_ =
        java.util.Collections.emptyList();
      private void ensureWaveletIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          wavelet_ = new java.util.ArrayList<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot>(wavelet_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> waveletBuilder_;

      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot> getWaveletList() {
        if (waveletBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wavelet_);
        } else {
          return waveletBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public int getWaveletCount() {
        if (waveletBuilder_ == null) {
          return wavelet_.size();
        } else {
          return waveletBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getWavelet(int index) {
        if (waveletBuilder_ == null) {
          return wavelet_.get(index);
        } else {
          return waveletBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder setWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.set(index, value);
          onChanged();
        } else {
          waveletBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder setWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.set(index, builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder addWavelet(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.add(value);
          onChanged();
        } else {
          waveletBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder addWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.add(index, value);
          onChanged();
        } else {
          waveletBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder addWavelet(
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.add(builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder addWavelet(
          int index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.add(index, builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder addAllWavelet(
          java.lang.Iterable<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot> values) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          super.addAll(values, wavelet_);
          onChanged();
        } else {
          waveletBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder clearWavelet() {
        if (waveletBuilder_ == null) {
          wavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          waveletBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public Builder removeWavelet(int index) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.remove(index);
          onChanged();
        } else {
          waveletBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder getWaveletBuilder(
          int index) {
        return getWaveletFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder getWaveletOrBuilder(
          int index) {
        if (waveletBuilder_ == null) {
          return wavelet_.get(index);  } else {
          return waveletBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public java.util.List<? extends org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> 
           getWaveletOrBuilderList() {
        if (waveletBuilder_ != null) {
          return waveletBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wavelet_);
        }
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder addWaveletBuilder() {
        return getWaveletFieldBuilder().addBuilder(
            org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder addWaveletBuilder(
          int index) {
        return getWaveletFieldBuilder().addBuilder(
            index, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .waveserver.WaveletSnapshot wavelet = 2;</code>
       */
      public java.util.List<org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder> 
           getWaveletBuilderList() {
        return getWaveletFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> 
          getWaveletFieldBuilder() {
        if (waveletBuilder_ == null) {
          waveletBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder>(
                  wavelet_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          wavelet_ = null;
        }
        return waveletBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.WaveViewSnapshot)
    }

    static {
      defaultInstance = new WaveViewSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.WaveViewSnapshot)
  }

  public interface ProtocolWaveletUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string wavelet_name = 1;
    /**
     * <code>required string wavelet_name = 1;</code>
     *
     * <pre>
     * Specifies the wavelet name in the URI netpath notation.
     * Set only if there are deltas
     * TODO(anorth) make optional for channel id, marker updates
     * </pre>
     */
    boolean hasWaveletName();
    /**
     * <code>required string wavelet_name = 1;</code>
     *
     * <pre>
     * Specifies the wavelet name in the URI netpath notation.
     * Set only if there are deltas
     * TODO(anorth) make optional for channel id, marker updates
     * </pre>
     */
    java.lang.String getWaveletName();
    /**
     * <code>required string wavelet_name = 1;</code>
     *
     * <pre>
     * Specifies the wavelet name in the URI netpath notation.
     * Set only if there are deltas
     * TODO(anorth) make optional for channel id, marker updates
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletNameBytes();

    // repeated .federation.ProtocolWaveletDelta applied_delta = 2;
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> 
        getAppliedDeltaList();
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getAppliedDelta(int index);
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    int getAppliedDeltaCount();
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
        getAppliedDeltaOrBuilderList();
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getAppliedDeltaOrBuilder(
        int index);

    // optional .federation.ProtocolHashedVersion commit_notice = 3;
    /**
     * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
     *
     * <pre>
     * Indicates that the host server has committed the wavelet to disk at the
     * given version. Mandatory for snapshots.
     * </pre>
     */
    boolean hasCommitNotice();
    /**
     * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
     *
     * <pre>
     * Indicates that the host server has committed the wavelet to disk at the
     * given version. Mandatory for snapshots.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitNotice();
    /**
     * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
     *
     * <pre>
     * Indicates that the host server has committed the wavelet to disk at the
     * given version. Mandatory for snapshots.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getCommitNoticeOrBuilder();

    // optional .federation.ProtocolHashedVersion resulting_version = 4;
    /**
     * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
     *
     * <pre>
     * Resulting version of the wavelet after all deltas have been applied
     * May only be missing if there are no appliedDeltas
     * If snapshot is set, this is the version number of the snapshot, and is
     * mandatory.
     * </pre>
     */
    boolean hasResultingVersion();
    /**
     * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
     *
     * <pre>
     * Resulting version of the wavelet after all deltas have been applied
     * May only be missing if there are no appliedDeltas
     * If snapshot is set, this is the version number of the snapshot, and is
     * mandatory.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion();
    /**
     * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
     *
     * <pre>
     * Resulting version of the wavelet after all deltas have been applied
     * May only be missing if there are no appliedDeltas
     * If snapshot is set, this is the version number of the snapshot, and is
     * mandatory.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getResultingVersionOrBuilder();

    // optional .waveserver.WaveletSnapshot snapshot = 5;
    /**
     * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
     *
     * <pre>
     * An optional snapshot of the wavelet
     * </pre>
     */
    boolean hasSnapshot();
    /**
     * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
     *
     * <pre>
     * An optional snapshot of the wavelet
     * </pre>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getSnapshot();
    /**
     * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
     *
     * <pre>
     * An optional snapshot of the wavelet
     * </pre>
     */
    org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder getSnapshotOrBuilder();

    // optional bool marker = 6 [default = false];
    /**
     * <code>optional bool marker = 6 [default = false];</code>
     *
     * <pre>
     * View open marker, signifies all current snapshots have been sent.
     * </pre>
     */
    boolean hasMarker();
    /**
     * <code>optional bool marker = 6 [default = false];</code>
     *
     * <pre>
     * View open marker, signifies all current snapshots have been sent.
     * </pre>
     */
    boolean getMarker();

    // optional string channel_id = 7;
    /**
     * <code>optional string channel_id = 7;</code>
     *
     * <pre>
     * Channel id, set only in the first update to a client.
     * The client includes it in submits.
     * </pre>
     */
    boolean hasChannelId();
    /**
     * <code>optional string channel_id = 7;</code>
     *
     * <pre>
     * Channel id, set only in the first update to a client.
     * The client includes it in submits.
     * </pre>
     */
    java.lang.String getChannelId();
    /**
     * <code>optional string channel_id = 7;</code>
     *
     * <pre>
     * Channel id, set only in the first update to a client.
     * The client includes it in submits.
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();
  }
  /**
   * Protobuf type {@code waveserver.ProtocolWaveletUpdate}
   *
   * <pre>
   **
   * Update message for a wave view.
   * Contains either:
   * - a channel id (only)
   * - a marker (only)
   * - a wavelet name, snapshot, version, and commit version
   * - a wavelet name, deltas, version
   * Must contain either one or more applied deltas or a commit notice.
   *
   * TODO(anorth): rename to reflect that this is a view update, not wavelet
   * </pre>
   */
  public static final class ProtocolWaveletUpdate extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolWaveletUpdateOrBuilder {
    // Use ProtocolWaveletUpdate.newBuilder() to construct.
    private ProtocolWaveletUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtocolWaveletUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtocolWaveletUpdate defaultInstance;
    public static ProtocolWaveletUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public ProtocolWaveletUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolWaveletUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletName_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                appliedDelta_ = new java.util.ArrayList<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta>();
                mutable_bitField0_ |= 0x00000002;
              }
              appliedDelta_.add(input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = commitNotice_.toBuilder();
              }
              commitNotice_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(commitNotice_);
                commitNotice_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = resultingVersion_.toBuilder();
              }
              resultingVersion_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resultingVersion_);
                resultingVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = snapshot_.toBuilder();
              }
              snapshot_ = input.readMessage(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(snapshot_);
                snapshot_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              marker_ = input.readBool();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              channelId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          appliedDelta_ = java.util.Collections.unmodifiableList(appliedDelta_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtocolWaveletUpdate> PARSER =
        new com.google.protobuf.AbstractParser<ProtocolWaveletUpdate>() {
      public ProtocolWaveletUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolWaveletUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolWaveletUpdate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string wavelet_name = 1;
    public static final int WAVELET_NAME_FIELD_NUMBER = 1;
    private java.lang.Object waveletName_;
    /**
     * <code>required string wavelet_name = 1;</code>
     *
     * <pre>
     * Specifies the wavelet name in the URI netpath notation.
     * Set only if there are deltas
     * TODO(anorth) make optional for channel id, marker updates
     * </pre>
     */
    public boolean hasWaveletName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string wavelet_name = 1;</code>
     *
     * <pre>
     * Specifies the wavelet name in the URI netpath notation.
     * Set only if there are deltas
     * TODO(anorth) make optional for channel id, marker updates
     * </pre>
     */
    public java.lang.String getWaveletName() {
      java.lang.Object ref = waveletName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wavelet_name = 1;</code>
     *
     * <pre>
     * Specifies the wavelet name in the URI netpath notation.
     * Set only if there are deltas
     * TODO(anorth) make optional for channel id, marker updates
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletNameBytes() {
      java.lang.Object ref = waveletName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .federation.ProtocolWaveletDelta applied_delta = 2;
    public static final int APPLIED_DELTA_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> appliedDelta_;
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    public java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> getAppliedDeltaList() {
      return appliedDelta_;
    }
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
        getAppliedDeltaOrBuilderList() {
      return appliedDelta_;
    }
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    public int getAppliedDeltaCount() {
      return appliedDelta_.size();
    }
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getAppliedDelta(int index) {
      return appliedDelta_.get(index);
    }
    /**
     * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
     *
     * <pre>
     * Zero or more deltas for this wavelet, streamed in order.
     * If snapshot is set, there should be zero deltas.
     * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getAppliedDeltaOrBuilder(
        int index) {
      return appliedDelta_.get(index);
    }

    // optional .federation.ProtocolHashedVersion commit_notice = 3;
    public static final int COMMIT_NOTICE_FIELD_NUMBER = 3;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion commitNotice_;
    /**
     * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
     *
     * <pre>
     * Indicates that the host server has committed the wavelet to disk at the
     * given version. Mandatory for snapshots.
     * </pre>
     */
    public boolean hasCommitNotice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
     *
     * <pre>
     * Indicates that the host server has committed the wavelet to disk at the
     * given version. Mandatory for snapshots.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitNotice() {
      return commitNotice_;
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
     *
     * <pre>
     * Indicates that the host server has committed the wavelet to disk at the
     * given version. Mandatory for snapshots.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getCommitNoticeOrBuilder() {
      return commitNotice_;
    }

    // optional .federation.ProtocolHashedVersion resulting_version = 4;
    public static final int RESULTING_VERSION_FIELD_NUMBER = 4;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion resultingVersion_;
    /**
     * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
     *
     * <pre>
     * Resulting version of the wavelet after all deltas have been applied
     * May only be missing if there are no appliedDeltas
     * If snapshot is set, this is the version number of the snapshot, and is
     * mandatory.
     * </pre>
     */
    public boolean hasResultingVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
     *
     * <pre>
     * Resulting version of the wavelet after all deltas have been applied
     * May only be missing if there are no appliedDeltas
     * If snapshot is set, this is the version number of the snapshot, and is
     * mandatory.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() {
      return resultingVersion_;
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
     *
     * <pre>
     * Resulting version of the wavelet after all deltas have been applied
     * May only be missing if there are no appliedDeltas
     * If snapshot is set, this is the version number of the snapshot, and is
     * mandatory.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getResultingVersionOrBuilder() {
      return resultingVersion_;
    }

    // optional .waveserver.WaveletSnapshot snapshot = 5;
    public static final int SNAPSHOT_FIELD_NUMBER = 5;
    private org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot snapshot_;
    /**
     * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
     *
     * <pre>
     * An optional snapshot of the wavelet
     * </pre>
     */
    public boolean hasSnapshot() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
     *
     * <pre>
     * An optional snapshot of the wavelet
     * </pre>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getSnapshot() {
      return snapshot_;
    }
    /**
     * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
     *
     * <pre>
     * An optional snapshot of the wavelet
     * </pre>
     */
    public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder getSnapshotOrBuilder() {
      return snapshot_;
    }

    // optional bool marker = 6 [default = false];
    public static final int MARKER_FIELD_NUMBER = 6;
    private boolean marker_;
    /**
     * <code>optional bool marker = 6 [default = false];</code>
     *
     * <pre>
     * View open marker, signifies all current snapshots have been sent.
     * </pre>
     */
    public boolean hasMarker() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool marker = 6 [default = false];</code>
     *
     * <pre>
     * View open marker, signifies all current snapshots have been sent.
     * </pre>
     */
    public boolean getMarker() {
      return marker_;
    }

    // optional string channel_id = 7;
    public static final int CHANNEL_ID_FIELD_NUMBER = 7;
    private java.lang.Object channelId_;
    /**
     * <code>optional string channel_id = 7;</code>
     *
     * <pre>
     * Channel id, set only in the first update to a client.
     * The client includes it in submits.
     * </pre>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string channel_id = 7;</code>
     *
     * <pre>
     * Channel id, set only in the first update to a client.
     * The client includes it in submits.
     * </pre>
     */
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_id = 7;</code>
     *
     * <pre>
     * Channel id, set only in the first update to a client.
     * The client includes it in submits.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      waveletName_ = "";
      appliedDelta_ = java.util.Collections.emptyList();
      commitNotice_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      snapshot_ = org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance();
      marker_ = false;
      channelId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAppliedDeltaCount(); i++) {
        if (!getAppliedDelta(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCommitNotice()) {
        if (!getCommitNotice().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasResultingVersion()) {
        if (!getResultingVersion().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSnapshot()) {
        if (!getSnapshot().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletNameBytes());
      }
      for (int i = 0; i < appliedDelta_.size(); i++) {
        output.writeMessage(2, appliedDelta_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, commitNotice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, resultingVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, snapshot_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, marker_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getChannelIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletNameBytes());
      }
      for (int i = 0; i < appliedDelta_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, appliedDelta_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, commitNotice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, resultingVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, snapshot_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, marker_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getChannelIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.ProtocolWaveletUpdate}
     *
     * <pre>
     **
     * Update message for a wave view.
     * Contains either:
     * - a channel id (only)
     * - a marker (only)
     * - a wavelet name, snapshot, version, and commit version
     * - a wavelet name, deltas, version
     * Must contain either one or more applied deltas or a commit notice.
     *
     * TODO(anorth): rename to reflect that this is a view update, not wavelet
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppliedDeltaFieldBuilder();
          getCommitNoticeFieldBuilder();
          getResultingVersionFieldBuilder();
          getSnapshotFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (appliedDeltaBuilder_ == null) {
          appliedDelta_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          appliedDeltaBuilder_.clear();
        }
        if (commitNoticeBuilder_ == null) {
          commitNotice_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          commitNoticeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (resultingVersionBuilder_ == null) {
          resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          resultingVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (snapshotBuilder_ == null) {
          snapshot_ = org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance();
        } else {
          snapshotBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        marker_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        channelId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate result = new org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletName_ = waveletName_;
        if (appliedDeltaBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            appliedDelta_ = java.util.Collections.unmodifiableList(appliedDelta_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.appliedDelta_ = appliedDelta_;
        } else {
          result.appliedDelta_ = appliedDeltaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (commitNoticeBuilder_ == null) {
          result.commitNotice_ = commitNotice_;
        } else {
          result.commitNotice_ = commitNoticeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (resultingVersionBuilder_ == null) {
          result.resultingVersion_ = resultingVersion_;
        } else {
          result.resultingVersion_ = resultingVersionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (snapshotBuilder_ == null) {
          result.snapshot_ = snapshot_;
        } else {
          result.snapshot_ = snapshotBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.marker_ = marker_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.channelId_ = channelId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance()) return this;
        if (other.hasWaveletName()) {
          bitField0_ |= 0x00000001;
          waveletName_ = other.waveletName_;
          onChanged();
        }
        if (appliedDeltaBuilder_ == null) {
          if (!other.appliedDelta_.isEmpty()) {
            if (appliedDelta_.isEmpty()) {
              appliedDelta_ = other.appliedDelta_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAppliedDeltaIsMutable();
              appliedDelta_.addAll(other.appliedDelta_);
            }
            onChanged();
          }
        } else {
          if (!other.appliedDelta_.isEmpty()) {
            if (appliedDeltaBuilder_.isEmpty()) {
              appliedDeltaBuilder_.dispose();
              appliedDeltaBuilder_ = null;
              appliedDelta_ = other.appliedDelta_;
              bitField0_ = (bitField0_ & ~0x00000002);
              appliedDeltaBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAppliedDeltaFieldBuilder() : null;
            } else {
              appliedDeltaBuilder_.addAllMessages(other.appliedDelta_);
            }
          }
        }
        if (other.hasCommitNotice()) {
          mergeCommitNotice(other.getCommitNotice());
        }
        if (other.hasResultingVersion()) {
          mergeResultingVersion(other.getResultingVersion());
        }
        if (other.hasSnapshot()) {
          mergeSnapshot(other.getSnapshot());
        }
        if (other.hasMarker()) {
          setMarker(other.getMarker());
        }
        if (other.hasChannelId()) {
          bitField0_ |= 0x00000040;
          channelId_ = other.channelId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletName()) {
          
          return false;
        }
        for (int i = 0; i < getAppliedDeltaCount(); i++) {
          if (!getAppliedDelta(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasCommitNotice()) {
          if (!getCommitNotice().isInitialized()) {
            
            return false;
          }
        }
        if (hasResultingVersion()) {
          if (!getResultingVersion().isInitialized()) {
            
            return false;
          }
        }
        if (hasSnapshot()) {
          if (!getSnapshot().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string wavelet_name = 1;
      private java.lang.Object waveletName_ = "";
      /**
       * <code>required string wavelet_name = 1;</code>
       *
       * <pre>
       * Specifies the wavelet name in the URI netpath notation.
       * Set only if there are deltas
       * TODO(anorth) make optional for channel id, marker updates
       * </pre>
       */
      public boolean hasWaveletName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       *
       * <pre>
       * Specifies the wavelet name in the URI netpath notation.
       * Set only if there are deltas
       * TODO(anorth) make optional for channel id, marker updates
       * </pre>
       */
      public java.lang.String getWaveletName() {
        java.lang.Object ref = waveletName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       *
       * <pre>
       * Specifies the wavelet name in the URI netpath notation.
       * Set only if there are deltas
       * TODO(anorth) make optional for channel id, marker updates
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletNameBytes() {
        java.lang.Object ref = waveletName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       *
       * <pre>
       * Specifies the wavelet name in the URI netpath notation.
       * Set only if there are deltas
       * TODO(anorth) make optional for channel id, marker updates
       * </pre>
       */
      public Builder setWaveletName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       *
       * <pre>
       * Specifies the wavelet name in the URI netpath notation.
       * Set only if there are deltas
       * TODO(anorth) make optional for channel id, marker updates
       * </pre>
       */
      public Builder clearWaveletName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletName_ = getDefaultInstance().getWaveletName();
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       *
       * <pre>
       * Specifies the wavelet name in the URI netpath notation.
       * Set only if there are deltas
       * TODO(anorth) make optional for channel id, marker updates
       * </pre>
       */
      public Builder setWaveletNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletName_ = value;
        onChanged();
        return this;
      }

      // repeated .federation.ProtocolWaveletDelta applied_delta = 2;
      private java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> appliedDelta_ =
        java.util.Collections.emptyList();
      private void ensureAppliedDeltaIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          appliedDelta_ = new java.util.ArrayList<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta>(appliedDelta_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> appliedDeltaBuilder_;

      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> getAppliedDeltaList() {
        if (appliedDeltaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(appliedDelta_);
        } else {
          return appliedDeltaBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public int getAppliedDeltaCount() {
        if (appliedDeltaBuilder_ == null) {
          return appliedDelta_.size();
        } else {
          return appliedDeltaBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getAppliedDelta(int index) {
        if (appliedDeltaBuilder_ == null) {
          return appliedDelta_.get(index);
        } else {
          return appliedDeltaBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder setAppliedDelta(
          int index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (appliedDeltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppliedDeltaIsMutable();
          appliedDelta_.set(index, value);
          onChanged();
        } else {
          appliedDeltaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder setAppliedDelta(
          int index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (appliedDeltaBuilder_ == null) {
          ensureAppliedDeltaIsMutable();
          appliedDelta_.set(index, builderForValue.build());
          onChanged();
        } else {
          appliedDeltaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder addAppliedDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (appliedDeltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppliedDeltaIsMutable();
          appliedDelta_.add(value);
          onChanged();
        } else {
          appliedDeltaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder addAppliedDelta(
          int index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (appliedDeltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppliedDeltaIsMutable();
          appliedDelta_.add(index, value);
          onChanged();
        } else {
          appliedDeltaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder addAppliedDelta(
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (appliedDeltaBuilder_ == null) {
          ensureAppliedDeltaIsMutable();
          appliedDelta_.add(builderForValue.build());
          onChanged();
        } else {
          appliedDeltaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder addAppliedDelta(
          int index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (appliedDeltaBuilder_ == null) {
          ensureAppliedDeltaIsMutable();
          appliedDelta_.add(index, builderForValue.build());
          onChanged();
        } else {
          appliedDeltaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder addAllAppliedDelta(
          java.lang.Iterable<? extends org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> values) {
        if (appliedDeltaBuilder_ == null) {
          ensureAppliedDeltaIsMutable();
          super.addAll(values, appliedDelta_);
          onChanged();
        } else {
          appliedDeltaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder clearAppliedDelta() {
        if (appliedDeltaBuilder_ == null) {
          appliedDelta_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          appliedDeltaBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public Builder removeAppliedDelta(int index) {
        if (appliedDeltaBuilder_ == null) {
          ensureAppliedDeltaIsMutable();
          appliedDelta_.remove(index);
          onChanged();
        } else {
          appliedDeltaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder getAppliedDeltaBuilder(
          int index) {
        return getAppliedDeltaFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getAppliedDeltaOrBuilder(
          int index) {
        if (appliedDeltaBuilder_ == null) {
          return appliedDelta_.get(index);  } else {
          return appliedDeltaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
           getAppliedDeltaOrBuilderList() {
        if (appliedDeltaBuilder_ != null) {
          return appliedDeltaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(appliedDelta_);
        }
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder addAppliedDeltaBuilder() {
        return getAppliedDeltaFieldBuilder().addBuilder(
            org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance());
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder addAppliedDeltaBuilder(
          int index) {
        return getAppliedDeltaFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance());
      }
      /**
       * <code>repeated .federation.ProtocolWaveletDelta applied_delta = 2;</code>
       *
       * <pre>
       * Zero or more deltas for this wavelet, streamed in order.
       * If snapshot is set, there should be zero deltas.
       * TODO(soren): consider using this in the snapshot case for uncommitted deltas.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder> 
           getAppliedDeltaBuilderList() {
        return getAppliedDeltaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
          getAppliedDeltaFieldBuilder() {
        if (appliedDeltaBuilder_ == null) {
          appliedDeltaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder>(
                  appliedDelta_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          appliedDelta_ = null;
        }
        return appliedDeltaBuilder_;
      }

      // optional .federation.ProtocolHashedVersion commit_notice = 3;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion commitNotice_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> commitNoticeBuilder_;
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public boolean hasCommitNotice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitNotice() {
        if (commitNoticeBuilder_ == null) {
          return commitNotice_;
        } else {
          return commitNoticeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public Builder setCommitNotice(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (commitNoticeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          commitNotice_ = value;
          onChanged();
        } else {
          commitNoticeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public Builder setCommitNotice(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (commitNoticeBuilder_ == null) {
          commitNotice_ = builderForValue.build();
          onChanged();
        } else {
          commitNoticeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public Builder mergeCommitNotice(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (commitNoticeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              commitNotice_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            commitNotice_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(commitNotice_).mergeFrom(value).buildPartial();
          } else {
            commitNotice_ = value;
          }
          onChanged();
        } else {
          commitNoticeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public Builder clearCommitNotice() {
        if (commitNoticeBuilder_ == null) {
          commitNotice_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          commitNoticeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getCommitNoticeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCommitNoticeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getCommitNoticeOrBuilder() {
        if (commitNoticeBuilder_ != null) {
          return commitNoticeBuilder_.getMessageOrBuilder();
        } else {
          return commitNotice_;
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commit_notice = 3;</code>
       *
       * <pre>
       * Indicates that the host server has committed the wavelet to disk at the
       * given version. Mandatory for snapshots.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getCommitNoticeFieldBuilder() {
        if (commitNoticeBuilder_ == null) {
          commitNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  commitNotice_,
                  getParentForChildren(),
                  isClean());
          commitNotice_ = null;
        }
        return commitNoticeBuilder_;
      }

      // optional .federation.ProtocolHashedVersion resulting_version = 4;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> resultingVersionBuilder_;
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public boolean hasResultingVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() {
        if (resultingVersionBuilder_ == null) {
          return resultingVersion_;
        } else {
          return resultingVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public Builder setResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (resultingVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resultingVersion_ = value;
          onChanged();
        } else {
          resultingVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public Builder setResultingVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (resultingVersionBuilder_ == null) {
          resultingVersion_ = builderForValue.build();
          onChanged();
        } else {
          resultingVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public Builder mergeResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (resultingVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              resultingVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            resultingVersion_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(resultingVersion_).mergeFrom(value).buildPartial();
          } else {
            resultingVersion_ = value;
          }
          onChanged();
        } else {
          resultingVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public Builder clearResultingVersion() {
        if (resultingVersionBuilder_ == null) {
          resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          resultingVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getResultingVersionBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getResultingVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getResultingVersionOrBuilder() {
        if (resultingVersionBuilder_ != null) {
          return resultingVersionBuilder_.getMessageOrBuilder();
        } else {
          return resultingVersion_;
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion resulting_version = 4;</code>
       *
       * <pre>
       * Resulting version of the wavelet after all deltas have been applied
       * May only be missing if there are no appliedDeltas
       * If snapshot is set, this is the version number of the snapshot, and is
       * mandatory.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getResultingVersionFieldBuilder() {
        if (resultingVersionBuilder_ == null) {
          resultingVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  resultingVersion_,
                  getParentForChildren(),
                  isClean());
          resultingVersion_ = null;
        }
        return resultingVersionBuilder_;
      }

      // optional .waveserver.WaveletSnapshot snapshot = 5;
      private org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot snapshot_ = org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> snapshotBuilder_;
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public boolean hasSnapshot() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot getSnapshot() {
        if (snapshotBuilder_ == null) {
          return snapshot_;
        } else {
          return snapshotBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public Builder setSnapshot(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot value) {
        if (snapshotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          snapshot_ = value;
          onChanged();
        } else {
          snapshotBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public Builder setSnapshot(
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder builderForValue) {
        if (snapshotBuilder_ == null) {
          snapshot_ = builderForValue.build();
          onChanged();
        } else {
          snapshotBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public Builder mergeSnapshot(org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot value) {
        if (snapshotBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              snapshot_ != org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance()) {
            snapshot_ =
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.newBuilder(snapshot_).mergeFrom(value).buildPartial();
          } else {
            snapshot_ = value;
          }
          onChanged();
        } else {
          snapshotBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public Builder clearSnapshot() {
        if (snapshotBuilder_ == null) {
          snapshot_ = org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.getDefaultInstance();
          onChanged();
        } else {
          snapshotBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder getSnapshotBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSnapshotFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      public org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder getSnapshotOrBuilder() {
        if (snapshotBuilder_ != null) {
          return snapshotBuilder_.getMessageOrBuilder();
        } else {
          return snapshot_;
        }
      }
      /**
       * <code>optional .waveserver.WaveletSnapshot snapshot = 5;</code>
       *
       * <pre>
       * An optional snapshot of the wavelet
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder> 
          getSnapshotFieldBuilder() {
        if (snapshotBuilder_ == null) {
          snapshotBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshot.Builder, org.waveprotocol.box.common.comms.WaveClientRpc.WaveletSnapshotOrBuilder>(
                  snapshot_,
                  getParentForChildren(),
                  isClean());
          snapshot_ = null;
        }
        return snapshotBuilder_;
      }

      // optional bool marker = 6 [default = false];
      private boolean marker_ ;
      /**
       * <code>optional bool marker = 6 [default = false];</code>
       *
       * <pre>
       * View open marker, signifies all current snapshots have been sent.
       * </pre>
       */
      public boolean hasMarker() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool marker = 6 [default = false];</code>
       *
       * <pre>
       * View open marker, signifies all current snapshots have been sent.
       * </pre>
       */
      public boolean getMarker() {
        return marker_;
      }
      /**
       * <code>optional bool marker = 6 [default = false];</code>
       *
       * <pre>
       * View open marker, signifies all current snapshots have been sent.
       * </pre>
       */
      public Builder setMarker(boolean value) {
        bitField0_ |= 0x00000020;
        marker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool marker = 6 [default = false];</code>
       *
       * <pre>
       * View open marker, signifies all current snapshots have been sent.
       * </pre>
       */
      public Builder clearMarker() {
        bitField0_ = (bitField0_ & ~0x00000020);
        marker_ = false;
        onChanged();
        return this;
      }

      // optional string channel_id = 7;
      private java.lang.Object channelId_ = "";
      /**
       * <code>optional string channel_id = 7;</code>
       *
       * <pre>
       * Channel id, set only in the first update to a client.
       * The client includes it in submits.
       * </pre>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string channel_id = 7;</code>
       *
       * <pre>
       * Channel id, set only in the first update to a client.
       * The client includes it in submits.
       * </pre>
       */
      public java.lang.String getChannelId() {
        java.lang.Object ref = channelId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_id = 7;</code>
       *
       * <pre>
       * Channel id, set only in the first update to a client.
       * The client includes it in submits.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        java.lang.Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_id = 7;</code>
       *
       * <pre>
       * Channel id, set only in the first update to a client.
       * The client includes it in submits.
       * </pre>
       */
      public Builder setChannelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_id = 7;</code>
       *
       * <pre>
       * Channel id, set only in the first update to a client.
       * The client includes it in submits.
       * </pre>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channelId_ = getDefaultInstance().getChannelId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_id = 7;</code>
       *
       * <pre>
       * Channel id, set only in the first update to a client.
       * The client includes it in submits.
       * </pre>
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channelId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolWaveletUpdate)
    }

    static {
      defaultInstance = new ProtocolWaveletUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolWaveletUpdate)
  }

  public interface ProtocolSubmitRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string wavelet_name = 1;
    /**
     * <code>required string wavelet_name = 1;</code>
     */
    boolean hasWaveletName();
    /**
     * <code>required string wavelet_name = 1;</code>
     */
    java.lang.String getWaveletName();
    /**
     * <code>required string wavelet_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getWaveletNameBytes();

    // required .federation.ProtocolWaveletDelta delta = 2;
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
     */
    boolean hasDelta();
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta();
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder();

    // optional string channel_id = 3;
    /**
     * <code>optional string channel_id = 3;</code>
     */
    boolean hasChannelId();
    /**
     * <code>optional string channel_id = 3;</code>
     */
    java.lang.String getChannelId();
    /**
     * <code>optional string channel_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();
  }
  /**
   * Protobuf type {@code waveserver.ProtocolSubmitRequest}
   *
   * <pre>
   **
   * The client requests that the given delta be applied to the wavelet.
   * </pre>
   */
  public static final class ProtocolSubmitRequest extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolSubmitRequestOrBuilder {
    // Use ProtocolSubmitRequest.newBuilder() to construct.
    private ProtocolSubmitRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtocolSubmitRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtocolSubmitRequest defaultInstance;
    public static ProtocolSubmitRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ProtocolSubmitRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolSubmitRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletName_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = delta_.toBuilder();
              }
              delta_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(delta_);
                delta_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              channelId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtocolSubmitRequest> PARSER =
        new com.google.protobuf.AbstractParser<ProtocolSubmitRequest>() {
      public ProtocolSubmitRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolSubmitRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolSubmitRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string wavelet_name = 1;
    public static final int WAVELET_NAME_FIELD_NUMBER = 1;
    private java.lang.Object waveletName_;
    /**
     * <code>required string wavelet_name = 1;</code>
     */
    public boolean hasWaveletName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string wavelet_name = 1;</code>
     */
    public java.lang.String getWaveletName() {
      java.lang.Object ref = waveletName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wavelet_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWaveletNameBytes() {
      java.lang.Object ref = waveletName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolWaveletDelta delta = 2;
    public static final int DELTA_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_;
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
      return delta_;
    }
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder() {
      return delta_;
    }

    // optional string channel_id = 3;
    public static final int CHANNEL_ID_FIELD_NUMBER = 3;
    private java.lang.Object channelId_;
    /**
     * <code>optional string channel_id = 3;</code>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string channel_id = 3;</code>
     */
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      waveletName_ = "";
      delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      channelId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDelta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDelta().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, delta_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getChannelIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, delta_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getChannelIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.ProtocolSubmitRequest}
     *
     * <pre>
     **
     * The client requests that the given delta be applied to the wavelet.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeltaFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        channelId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest result = new org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletName_ = waveletName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (deltaBuilder_ == null) {
          result.delta_ = delta_;
        } else {
          result.delta_ = deltaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelId_ = channelId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance()) return this;
        if (other.hasWaveletName()) {
          bitField0_ |= 0x00000001;
          waveletName_ = other.waveletName_;
          onChanged();
        }
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasChannelId()) {
          bitField0_ |= 0x00000004;
          channelId_ = other.channelId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletName()) {
          
          return false;
        }
        if (!hasDelta()) {
          
          return false;
        }
        if (!getDelta().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string wavelet_name = 1;
      private java.lang.Object waveletName_ = "";
      /**
       * <code>required string wavelet_name = 1;</code>
       */
      public boolean hasWaveletName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       */
      public java.lang.String getWaveletName() {
        java.lang.Object ref = waveletName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWaveletNameBytes() {
        java.lang.Object ref = waveletName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       */
      public Builder setWaveletName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       */
      public Builder clearWaveletName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletName_ = getDefaultInstance().getWaveletName();
        onChanged();
        return this;
      }
      /**
       * <code>required string wavelet_name = 1;</code>
       */
      public Builder setWaveletNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletName_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolWaveletDelta delta = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> deltaBuilder_;
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
        if (deltaBuilder_ == null) {
          return delta_;
        } else {
          return deltaBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (deltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          delta_ = value;
          onChanged();
        } else {
          deltaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public Builder setDelta(
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (deltaBuilder_ == null) {
          delta_ = builderForValue.build();
          onChanged();
        } else {
          deltaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public Builder mergeDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (deltaBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              delta_ != org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance()) {
            delta_ =
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder(delta_).mergeFrom(value).buildPartial();
          } else {
            delta_ = value;
          }
          onChanged();
        } else {
          deltaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public Builder clearDelta() {
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
          onChanged();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder getDeltaBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDeltaFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder() {
        if (deltaBuilder_ != null) {
          return deltaBuilder_.getMessageOrBuilder();
        } else {
          return delta_;
        }
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
          getDeltaFieldBuilder() {
        if (deltaBuilder_ == null) {
          deltaBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder>(
                  delta_,
                  getParentForChildren(),
                  isClean());
          delta_ = null;
        }
        return deltaBuilder_;
      }

      // optional string channel_id = 3;
      private java.lang.Object channelId_ = "";
      /**
       * <code>optional string channel_id = 3;</code>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string channel_id = 3;</code>
       */
      public java.lang.String getChannelId() {
        java.lang.Object ref = channelId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        java.lang.Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_id = 3;</code>
       */
      public Builder setChannelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_id = 3;</code>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelId_ = getDefaultInstance().getChannelId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_id = 3;</code>
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channelId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolSubmitRequest)
    }

    static {
      defaultInstance = new ProtocolSubmitRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolSubmitRequest)
  }

  public interface ProtocolSubmitResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 operations_applied = 1;
    /**
     * <code>required int32 operations_applied = 1;</code>
     */
    boolean hasOperationsApplied();
    /**
     * <code>required int32 operations_applied = 1;</code>
     */
    int getOperationsApplied();

    // optional string error_message = 2;
    /**
     * <code>optional string error_message = 2;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string error_message = 2;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string error_message = 2;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;
    /**
     * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
     */
    boolean hasHashedVersionAfterApplication();
    /**
     * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication();
    /**
     * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionAfterApplicationOrBuilder();
  }
  /**
   * Protobuf type {@code waveserver.ProtocolSubmitResponse}
   *
   * <pre>
   **
   * The result of submitting the delta to the server. If an error occurs
   * errorMessage will be present, otherwise hashedVersionAfterApplication will be
   * present. operationsApplied will report the actual number of operations
   * successfully applied to the wavelet by the server.
   * </pre>
   */
  public static final class ProtocolSubmitResponse extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolSubmitResponseOrBuilder {
    // Use ProtocolSubmitResponse.newBuilder() to construct.
    private ProtocolSubmitResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtocolSubmitResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtocolSubmitResponse defaultInstance;
    public static ProtocolSubmitResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ProtocolSubmitResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolSubmitResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              operationsApplied_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              errorMessage_ = input.readBytes();
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = hashedVersionAfterApplication_.toBuilder();
              }
              hashedVersionAfterApplication_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hashedVersionAfterApplication_);
                hashedVersionAfterApplication_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtocolSubmitResponse> PARSER =
        new com.google.protobuf.AbstractParser<ProtocolSubmitResponse>() {
      public ProtocolSubmitResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolSubmitResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolSubmitResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 operations_applied = 1;
    public static final int OPERATIONS_APPLIED_FIELD_NUMBER = 1;
    private int operationsApplied_;
    /**
     * <code>required int32 operations_applied = 1;</code>
     */
    public boolean hasOperationsApplied() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 operations_applied = 1;</code>
     */
    public int getOperationsApplied() {
      return operationsApplied_;
    }

    // optional string error_message = 2;
    public static final int ERROR_MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string error_message = 2;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string error_message = 2;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string error_message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;
    public static final int HASHED_VERSION_AFTER_APPLICATION_FIELD_NUMBER = 3;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersionAfterApplication_;
    /**
     * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
     */
    public boolean hasHashedVersionAfterApplication() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() {
      return hashedVersionAfterApplication_;
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionAfterApplicationOrBuilder() {
      return hashedVersionAfterApplication_;
    }

    private void initFields() {
      operationsApplied_ = 0;
      errorMessage_ = "";
      hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasOperationsApplied()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHashedVersionAfterApplication()) {
        if (!getHashedVersionAfterApplication().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, operationsApplied_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, hashedVersionAfterApplication_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, operationsApplied_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, hashedVersionAfterApplication_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code waveserver.ProtocolSubmitResponse}
     *
     * <pre>
     **
     * The result of submitting the delta to the server. If an error occurs
     * errorMessage will be present, otherwise hashedVersionAfterApplication will be
     * present. operationsApplied will report the actual number of operations
     * successfully applied to the wavelet by the server.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.class, org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.Builder.class);
      }

      // Construct using org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHashedVersionAfterApplicationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        operationsApplied_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          hashedVersionAfterApplicationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_descriptor;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse getDefaultInstanceForType() {
        return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance();
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse build() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse buildPartial() {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse result = new org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.operationsApplied_ = operationsApplied_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (hashedVersionAfterApplicationBuilder_ == null) {
          result.hashedVersionAfterApplication_ = hashedVersionAfterApplication_;
        } else {
          result.hashedVersionAfterApplication_ = hashedVersionAfterApplicationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse) {
          return mergeFrom((org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse other) {
        if (other == org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance()) return this;
        if (other.hasOperationsApplied()) {
          setOperationsApplied(other.getOperationsApplied());
        }
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000002;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasHashedVersionAfterApplication()) {
          mergeHashedVersionAfterApplication(other.getHashedVersionAfterApplication());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOperationsApplied()) {
          
          return false;
        }
        if (hasHashedVersionAfterApplication()) {
          if (!getHashedVersionAfterApplication().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 operations_applied = 1;
      private int operationsApplied_ ;
      /**
       * <code>required int32 operations_applied = 1;</code>
       */
      public boolean hasOperationsApplied() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 operations_applied = 1;</code>
       */
      public int getOperationsApplied() {
        return operationsApplied_;
      }
      /**
       * <code>required int32 operations_applied = 1;</code>
       */
      public Builder setOperationsApplied(int value) {
        bitField0_ |= 0x00000001;
        operationsApplied_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 operations_applied = 1;</code>
       */
      public Builder clearOperationsApplied() {
        bitField0_ = (bitField0_ & ~0x00000001);
        operationsApplied_ = 0;
        onChanged();
        return this;
      }

      // optional string error_message = 2;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string error_message = 2;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string error_message = 2;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string error_message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string error_message = 2;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string error_message = 2;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string error_message = 2;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> hashedVersionAfterApplicationBuilder_;
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public boolean hasHashedVersionAfterApplication() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          return hashedVersionAfterApplication_;
        } else {
          return hashedVersionAfterApplicationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hashedVersionAfterApplication_ = value;
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public Builder setHashedVersionAfterApplication(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplication_ = builderForValue.build();
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public Builder mergeHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              hashedVersionAfterApplication_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            hashedVersionAfterApplication_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(hashedVersionAfterApplication_).mergeFrom(value).buildPartial();
          } else {
            hashedVersionAfterApplication_ = value;
          }
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public Builder clearHashedVersionAfterApplication() {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getHashedVersionAfterApplicationBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHashedVersionAfterApplicationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionAfterApplicationOrBuilder() {
        if (hashedVersionAfterApplicationBuilder_ != null) {
          return hashedVersionAfterApplicationBuilder_.getMessageOrBuilder();
        } else {
          return hashedVersionAfterApplication_;
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getHashedVersionAfterApplicationFieldBuilder() {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplicationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  hashedVersionAfterApplication_,
                  getParentForChildren(),
                  isClean());
          hashedVersionAfterApplication_ = null;
        }
        return hashedVersionAfterApplicationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolSubmitResponse)
    }

    static {
      defaultInstance = new ProtocolSubmitResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolSubmitResponse)
  }

  /**
   * Protobuf service {@code waveserver.ProtocolWaveClientRpc}
   *
   * <pre>
   **
   * Provides streaming wave views.
   *
   * A client requests a possibly filtered view of wavelets in a wave.
   * The response stream contains first a snapshot for each wavelet
   * currently in view, and then deltas for those wavelets. The end of
   * the initial set of snapshots is indicated by a "marker" message.
   * New wavelets may come into view after the marker, resulting in 
   * another snapshot.
   * 
   * The client may indicate that it already has a snapshot for some wavelets
   * by providing one or more known versions and signatures. If one matches
   * the server history the server will not send a snapshot but will instead
   * begin the stream with an empty delta specifying the resynchronization
   * version.
   * 
   * TODO(anorth):
   * - make the first response message a channel id only, then no more
   *   channel ids
   * </pre>
   */
  public static abstract class ProtocolWaveClientRpc
      implements com.google.protobuf.Service {
    protected ProtocolWaveClientRpc() {}

    public interface Interface {
      /**
       * <code>rpc Open(.waveserver.ProtocolOpenRequest) returns (.waveserver.ProtocolWaveletUpdate);</code>
       */
      public abstract void open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate> done);

      /**
       * <code>rpc Submit(.waveserver.ProtocolSubmitRequest) returns (.waveserver.ProtocolSubmitResponse);</code>
       */
      public abstract void submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse> done);

      /**
       * <code>rpc Authenticate(.waveserver.ProtocolAuthenticate) returns (.waveserver.ProtocolAuthenticationResult);</code>
       */
      public abstract void authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate request,
          com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new ProtocolWaveClientRpc() {
        @java.lang.Override
        public  void open(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate> done) {
          impl.open(controller, request, done);
        }

        @java.lang.Override
        public  void submit(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse> done) {
          impl.submit(controller, request, done);
        }

        @java.lang.Override
        public  void authenticate(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate request,
            com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult> done) {
          impl.authenticate(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.open(controller, (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest)request);
            case 1:
              return impl.submit(controller, (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest)request);
            case 2:
              return impl.authenticate(controller, (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance();
            case 1:
              return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance();
            case 2:
              return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance();
            case 1:
              return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance();
            case 2:
              return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc Open(.waveserver.ProtocolOpenRequest) returns (.waveserver.ProtocolWaveletUpdate);</code>
     */
    public abstract void open(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate> done);

    /**
     * <code>rpc Submit(.waveserver.ProtocolSubmitRequest) returns (.waveserver.ProtocolSubmitResponse);</code>
     */
    public abstract void submit(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse> done);

    /**
     * <code>rpc Authenticate(.waveserver.ProtocolAuthenticate) returns (.waveserver.ProtocolAuthenticationResult);</code>
     */
    public abstract void authenticate(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate request,
        com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.waveprotocol.box.common.comms.WaveClientRpc.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.open(controller, (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate>specializeCallback(
              done));
          return;
        case 1:
          this.submit(controller, (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse>specializeCallback(
              done));
          return;
        case 2:
          this.authenticate(controller, (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance();
        case 1:
          return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance();
        case 2:
          return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance();
        case 1:
          return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance();
        case 2:
          return org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveClientRpc implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.class,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance()));
      }

      public  void submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.class,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance()));
      }

      public  void authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate request,
          com.google.protobuf.RpcCallback<org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.class,
            org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest request)
          throws com.google.protobuf.ServiceException;

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest request)
          throws com.google.protobuf.ServiceException;

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolOpenRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance());
      }


      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance());
      }


      public org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticate request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.waveprotocol.box.common.comms.WaveClientRpc.ProtocolAuthenticationResult.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:waveserver.ProtocolWaveClientRpc)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolAuthenticate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolAuthenticate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolAuthenticationResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolAuthenticationResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolOpenRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_WaveletVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_WaveletVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_DocumentSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_DocumentSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_WaveletSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_WaveletSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_WaveViewSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_WaveViewSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolWaveletUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolSubmitRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolSubmitResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6org/waveprotocol/box/common/comms/wave" +
      "client-rpc.proto\022\nwaveserver\032)org/wavepr" +
      "otocol/box/server/rpc/rpc.proto\0326org/wav" +
      "eprotocol/wave/federation/federation.pro" +
      "todevel\"%\n\024ProtocolAuthenticate\022\r\n\005token" +
      "\030\001 \002(\t\"\036\n\034ProtocolAuthenticationResult\"\214" +
      "\001\n\023ProtocolOpenRequest\022\026\n\016participant_id" +
      "\030\001 \002(\t\022\017\n\007wave_id\030\002 \002(\t\022\031\n\021wavelet_id_pr" +
      "efix\030\003 \003(\t\0221\n\rknown_wavelet\030\004 \003(\0132\032.wave" +
      "server.WaveletVersion\"_\n\016WaveletVersion\022",
      "\022\n\nwavelet_id\030\001 \002(\t\0229\n\016hashed_version\030\002 " +
      "\002(\0132!.federation.ProtocolHashedVersion\"\312" +
      "\001\n\020DocumentSnapshot\022\023\n\013document_id\030\001 \002(\t" +
      "\022A\n\022document_operation\030\002 \002(\0132%.federatio" +
      "n.ProtocolDocumentOperation\022\016\n\006author\030\003 " +
      "\002(\t\022\023\n\013contributor\030\004 \003(\t\022\035\n\025last_modifie" +
      "d_version\030\005 \002(\003\022\032\n\022last_modified_time\030\006 " +
      "\002(\003\"\345\001\n\017WaveletSnapshot\022\022\n\nwavelet_id\030\001 " +
      "\002(\t\022\026\n\016participant_id\030\002 \003(\t\022.\n\010document\030" +
      "\003 \003(\0132\034.waveserver.DocumentSnapshot\0222\n\007v",
      "ersion\030\004 \002(\0132!.federation.ProtocolHashed" +
      "Version\022\032\n\022last_modified_time\030\005 \002(\003\022\017\n\007c" +
      "reator\030\006 \002(\t\022\025\n\rcreation_time\030\007 \002(\003\"Q\n\020W" +
      "aveViewSnapshot\022\017\n\007wave_id\030\001 \002(\t\022,\n\007wave" +
      "let\030\002 \003(\0132\033.waveserver.WaveletSnapshot\"\270" +
      "\002\n\025ProtocolWaveletUpdate\022\024\n\014wavelet_name" +
      "\030\001 \002(\t\0227\n\rapplied_delta\030\002 \003(\0132 .federati" +
      "on.ProtocolWaveletDelta\0228\n\rcommit_notice" +
      "\030\003 \001(\0132!.federation.ProtocolHashedVersio" +
      "n\022<\n\021resulting_version\030\004 \001(\0132!.federatio",
      "n.ProtocolHashedVersion\022-\n\010snapshot\030\005 \001(" +
      "\0132\033.waveserver.WaveletSnapshot\022\025\n\006marker" +
      "\030\006 \001(\010:\005false\022\022\n\nchannel_id\030\007 \001(\t\"r\n\025Pro" +
      "tocolSubmitRequest\022\024\n\014wavelet_name\030\001 \002(\t" +
      "\022/\n\005delta\030\002 \002(\0132 .federation.ProtocolWav" +
      "eletDelta\022\022\n\nchannel_id\030\003 \001(\t\"\230\001\n\026Protoc" +
      "olSubmitResponse\022\032\n\022operations_applied\030\001" +
      " \002(\005\022\025\n\rerror_message\030\002 \001(\t\022K\n hashed_ve" +
      "rsion_after_application\030\003 \001(\0132!.federati" +
      "on.ProtocolHashedVersion2\225\002\n\025ProtocolWav",
      "eClientRpc\022O\n\004Open\022\037.waveserver.Protocol" +
      "OpenRequest\032!.waveserver.ProtocolWavelet" +
      "Update\"\003\330>\001\022O\n\006Submit\022!.waveserver.Proto" +
      "colSubmitRequest\032\".waveserver.ProtocolSu" +
      "bmitResponse\022Z\n\014Authenticate\022 .waveserve" +
      "r.ProtocolAuthenticate\032(.waveserver.Prot" +
      "ocolAuthenticationResultB5\n!org.waveprot" +
      "ocol.box.common.commsB\rWaveClientRpc\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_waveserver_ProtocolAuthenticate_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_waveserver_ProtocolAuthenticate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolAuthenticate_descriptor,
              new java.lang.String[] { "Token", });
          internal_static_waveserver_ProtocolAuthenticationResult_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_waveserver_ProtocolAuthenticationResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolAuthenticationResult_descriptor,
              new java.lang.String[] { });
          internal_static_waveserver_ProtocolOpenRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolOpenRequest_descriptor,
              new java.lang.String[] { "ParticipantId", "WaveId", "WaveletIdPrefix", "KnownWavelet", });
          internal_static_waveserver_WaveletVersion_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_waveserver_WaveletVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_WaveletVersion_descriptor,
              new java.lang.String[] { "WaveletId", "HashedVersion", });
          internal_static_waveserver_DocumentSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_waveserver_DocumentSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_DocumentSnapshot_descriptor,
              new java.lang.String[] { "DocumentId", "DocumentOperation", "Author", "Contributor", "LastModifiedVersion", "LastModifiedTime", });
          internal_static_waveserver_WaveletSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_waveserver_WaveletSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_WaveletSnapshot_descriptor,
              new java.lang.String[] { "WaveletId", "ParticipantId", "Document", "Version", "LastModifiedTime", "Creator", "CreationTime", });
          internal_static_waveserver_WaveViewSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_waveserver_WaveViewSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_WaveViewSnapshot_descriptor,
              new java.lang.String[] { "WaveId", "Wavelet", });
          internal_static_waveserver_ProtocolWaveletUpdate_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolWaveletUpdate_descriptor,
              new java.lang.String[] { "WaveletName", "AppliedDelta", "CommitNotice", "ResultingVersion", "Snapshot", "Marker", "ChannelId", });
          internal_static_waveserver_ProtocolSubmitRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolSubmitRequest_descriptor,
              new java.lang.String[] { "WaveletName", "Delta", "ChannelId", });
          internal_static_waveserver_ProtocolSubmitResponse_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolSubmitResponse_descriptor,
              new java.lang.String[] { "OperationsApplied", "ErrorMessage", "HashedVersionAfterApplication", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(org.waveprotocol.box.server.rpc.Rpc.isStreamingRpc);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.waveprotocol.box.server.rpc.Rpc.getDescriptor(),
          org.waveprotocol.wave.federation.Proto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
