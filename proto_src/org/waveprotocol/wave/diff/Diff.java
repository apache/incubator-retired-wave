// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/waveprotocol/wave/diff/diff.proto

package org.waveprotocol.wave.diff;

public final class Diff {
  private Diff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FetchDiffRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveId = 1;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    boolean hasWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    java.lang.String getWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveIdBytes();

    // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> 
        getKnownWaveletList();
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index);
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    int getKnownWaveletCount();
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
        getKnownWaveletOrBuilderList();
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code diff.FetchDiffRequest}
   */
  public static final class FetchDiffRequest extends
      com.google.protobuf.GeneratedMessage
      implements FetchDiffRequestOrBuilder {
    // Use FetchDiffRequest.newBuilder() to construct.
    private FetchDiffRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FetchDiffRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FetchDiffRequest defaultInstance;
    public static FetchDiffRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FetchDiffRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FetchDiffRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>();
                mutable_bitField0_ |= 0x00000002;
              }
              knownWavelet_.add(input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          knownWavelet_ = java.util.Collections.unmodifiableList(knownWavelet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.diff.Diff.FetchDiffRequest.class, org.waveprotocol.wave.diff.Diff.FetchDiffRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FetchDiffRequest> PARSER =
        new com.google.protobuf.AbstractParser<FetchDiffRequest>() {
      public FetchDiffRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FetchDiffRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FetchDiffRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private java.lang.Object waveId_;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    public boolean hasWaveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    public java.lang.String getWaveId() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveIdBytes() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
    public static final int KNOWNWAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> knownWavelet_;
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> getKnownWaveletList() {
      return knownWavelet_;
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
        getKnownWaveletOrBuilderList() {
      return knownWavelet_;
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public int getKnownWaveletCount() {
      return knownWavelet_.size();
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index) {
      return knownWavelet_.get(index);
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
        int index) {
      return knownWavelet_.get(index);
    }

    private void initFields() {
      waveId_ = "";
      knownWavelet_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getKnownWaveletCount(); i++) {
        if (!getKnownWavelet(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveIdBytes());
      }
      for (int i = 0; i < knownWavelet_.size(); i++) {
        output.writeMessage(2, knownWavelet_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveIdBytes());
      }
      for (int i = 0; i < knownWavelet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, knownWavelet_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.diff.Diff.FetchDiffRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code diff.FetchDiffRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.diff.Diff.FetchDiffRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.diff.Diff.FetchDiffRequest.class, org.waveprotocol.wave.diff.Diff.FetchDiffRequest.Builder.class);
      }

      // Construct using org.waveprotocol.wave.diff.Diff.FetchDiffRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getKnownWaveletFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (knownWaveletBuilder_ == null) {
          knownWavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          knownWaveletBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffRequest_descriptor;
      }

      public org.waveprotocol.wave.diff.Diff.FetchDiffRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.diff.Diff.FetchDiffRequest.getDefaultInstance();
      }

      public org.waveprotocol.wave.diff.Diff.FetchDiffRequest build() {
        org.waveprotocol.wave.diff.Diff.FetchDiffRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.diff.Diff.FetchDiffRequest buildPartial() {
        org.waveprotocol.wave.diff.Diff.FetchDiffRequest result = new org.waveprotocol.wave.diff.Diff.FetchDiffRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveId_ = waveId_;
        if (knownWaveletBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            knownWavelet_ = java.util.Collections.unmodifiableList(knownWavelet_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.knownWavelet_ = knownWavelet_;
        } else {
          result.knownWavelet_ = knownWaveletBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.diff.Diff.FetchDiffRequest) {
          return mergeFrom((org.waveprotocol.wave.diff.Diff.FetchDiffRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.diff.Diff.FetchDiffRequest other) {
        if (other == org.waveprotocol.wave.diff.Diff.FetchDiffRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          bitField0_ |= 0x00000001;
          waveId_ = other.waveId_;
          onChanged();
        }
        if (knownWaveletBuilder_ == null) {
          if (!other.knownWavelet_.isEmpty()) {
            if (knownWavelet_.isEmpty()) {
              knownWavelet_ = other.knownWavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureKnownWaveletIsMutable();
              knownWavelet_.addAll(other.knownWavelet_);
            }
            onChanged();
          }
        } else {
          if (!other.knownWavelet_.isEmpty()) {
            if (knownWaveletBuilder_.isEmpty()) {
              knownWaveletBuilder_.dispose();
              knownWaveletBuilder_ = null;
              knownWavelet_ = other.knownWavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
              knownWaveletBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKnownWaveletFieldBuilder() : null;
            } else {
              knownWaveletBuilder_.addAllMessages(other.knownWavelet_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveId()) {
          
          return false;
        }
        for (int i = 0; i < getKnownWaveletCount(); i++) {
          if (!getKnownWavelet(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.diff.Diff.FetchDiffRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.diff.Diff.FetchDiffRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveId = 1;
      private java.lang.Object waveId_ = "";
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public boolean hasWaveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public java.lang.String getWaveId() {
        java.lang.Object ref = waveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveIdBytes() {
        java.lang.Object ref = waveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public Builder setWaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public Builder clearWaveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveId_ = getDefaultInstance().getWaveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public Builder setWaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }

      // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
      private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> knownWavelet_ =
        java.util.Collections.emptyList();
      private void ensureKnownWaveletIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>(knownWavelet_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> knownWaveletBuilder_;

      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> getKnownWaveletList() {
        if (knownWaveletBuilder_ == null) {
          return java.util.Collections.unmodifiableList(knownWavelet_);
        } else {
          return knownWaveletBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public int getKnownWaveletCount() {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.size();
        } else {
          return knownWaveletBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index) {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.get(index);
        } else {
          return knownWaveletBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder setKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.set(index, value);
          onChanged();
        } else {
          knownWaveletBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder setKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.set(index, builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(value);
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(index, value);
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(index, builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addAllKnownWavelet(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> values) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          super.addAll(values, knownWavelet_);
          onChanged();
        } else {
          knownWaveletBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder clearKnownWavelet() {
        if (knownWaveletBuilder_ == null) {
          knownWavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          knownWaveletBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder removeKnownWavelet(int index) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.remove(index);
          onChanged();
        } else {
          knownWaveletBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder getKnownWaveletBuilder(
          int index) {
        return getKnownWaveletFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
          int index) {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.get(index);  } else {
          return knownWaveletBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
           getKnownWaveletOrBuilderList() {
        if (knownWaveletBuilder_ != null) {
          return knownWaveletBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(knownWavelet_);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder addKnownWaveletBuilder() {
        return getKnownWaveletFieldBuilder().addBuilder(
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder addKnownWaveletBuilder(
          int index) {
        return getKnownWaveletFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder> 
           getKnownWaveletBuilderList() {
        return getKnownWaveletFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
          getKnownWaveletFieldBuilder() {
        if (knownWaveletBuilder_ == null) {
          knownWaveletBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder>(
                  knownWavelet_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          knownWavelet_ = null;
        }
        return knownWaveletBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:diff.FetchDiffRequest)
    }

    static {
      defaultInstance = new FetchDiffRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:diff.FetchDiffRequest)
  }

  public interface FetchDiffResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .concurrencycontrol.ResponseStatus status = 1;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder();

    // repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    java.util.List<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff> 
        getWaveletList();
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff getWavelet(int index);
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    int getWaveletCount();
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    java.util.List<? extends org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder> 
        getWaveletOrBuilderList();
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder getWaveletOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code diff.FetchDiffResponse}
   */
  public static final class FetchDiffResponse extends
      com.google.protobuf.GeneratedMessage
      implements FetchDiffResponseOrBuilder {
    // Use FetchDiffResponse.newBuilder() to construct.
    private FetchDiffResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FetchDiffResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FetchDiffResponse defaultInstance;
    public static FetchDiffResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FetchDiffResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FetchDiffResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff>();
                mutable_bitField0_ |= 0x00000002;
              }
              wavelet_.add(input.readMessage(org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          wavelet_ = java.util.Collections.unmodifiableList(wavelet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.diff.Diff.FetchDiffResponse.class, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FetchDiffResponse> PARSER =
        new com.google.protobuf.AbstractParser<FetchDiffResponse>() {
      public FetchDiffResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FetchDiffResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FetchDiffResponse> getParserForType() {
      return PARSER;
    }

    public interface WaveletDiffOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string waveletId = 1;
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      boolean hasWaveletId();
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      java.lang.String getWaveletId();
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      com.google.protobuf.ByteString
          getWaveletIdBytes();

      // optional .diff.WaveletDiffSnapshot snapshot = 2;
      /**
       * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      boolean hasSnapshot();
      /**
       * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot getSnapshot();
      /**
       * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder getSnapshotOrBuilder();
    }
    /**
     * Protobuf type {@code diff.FetchDiffResponse.WaveletDiff}
     */
    public static final class WaveletDiff extends
        com.google.protobuf.GeneratedMessage
        implements WaveletDiffOrBuilder {
      // Use WaveletDiff.newBuilder() to construct.
      private WaveletDiff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private WaveletDiff(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final WaveletDiff defaultInstance;
      public static WaveletDiff getDefaultInstance() {
        return defaultInstance;
      }

      public WaveletDiff getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private WaveletDiff(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                waveletId_ = input.readBytes();
                break;
              }
              case 18: {
                org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = snapshot_.toBuilder();
                }
                snapshot_ = input.readMessage(org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(snapshot_);
                  snapshot_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_WaveletDiff_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_WaveletDiff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.class, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder.class);
      }

      public static com.google.protobuf.Parser<WaveletDiff> PARSER =
          new com.google.protobuf.AbstractParser<WaveletDiff>() {
        public WaveletDiff parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WaveletDiff(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<WaveletDiff> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string waveletId = 1;
      public static final int WAVELETID_FIELD_NUMBER = 1;
      private java.lang.Object waveletId_;
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            waveletId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .diff.WaveletDiffSnapshot snapshot = 2;
      public static final int SNAPSHOT_FIELD_NUMBER = 2;
      private org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot snapshot_;
      /**
       * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      public boolean hasSnapshot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot getSnapshot() {
        return snapshot_;
      }
      /**
       * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder getSnapshotOrBuilder() {
        return snapshot_;
      }

      private void initFields() {
        waveletId_ = "";
        snapshot_ = org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasWaveletId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasSnapshot()) {
          if (!getSnapshot().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getWaveletIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, snapshot_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getWaveletIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, snapshot_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code diff.FetchDiffResponse.WaveletDiff}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_WaveletDiff_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_WaveletDiff_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.class, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder.class);
        }

        // Construct using org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSnapshotFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          waveletId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (snapshotBuilder_ == null) {
            snapshot_ = org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance();
          } else {
            snapshotBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_WaveletDiff_descriptor;
        }

        public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff getDefaultInstanceForType() {
          return org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.getDefaultInstance();
        }

        public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff build() {
          org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff buildPartial() {
          org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff result = new org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.waveletId_ = waveletId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (snapshotBuilder_ == null) {
            result.snapshot_ = snapshot_;
          } else {
            result.snapshot_ = snapshotBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff) {
            return mergeFrom((org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff other) {
          if (other == org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.getDefaultInstance()) return this;
          if (other.hasWaveletId()) {
            bitField0_ |= 0x00000001;
            waveletId_ = other.waveletId_;
            onChanged();
          }
          if (other.hasSnapshot()) {
            mergeSnapshot(other.getSnapshot());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasWaveletId()) {
            
            return false;
          }
          if (hasSnapshot()) {
            if (!getSnapshot().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string waveletId = 1;
        private java.lang.Object waveletId_ = "";
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public boolean hasWaveletId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public java.lang.String getWaveletId() {
          java.lang.Object ref = waveletId_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            waveletId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getWaveletIdBytes() {
          java.lang.Object ref = waveletId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            waveletId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public Builder setWaveletId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          waveletId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public Builder clearWaveletId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          waveletId_ = getDefaultInstance().getWaveletId();
          onChanged();
          return this;
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public Builder setWaveletIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          waveletId_ = value;
          onChanged();
          return this;
        }

        // optional .diff.WaveletDiffSnapshot snapshot = 2;
        private org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot snapshot_ = org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder> snapshotBuilder_;
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public boolean hasSnapshot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot getSnapshot() {
          if (snapshotBuilder_ == null) {
            return snapshot_;
          } else {
            return snapshotBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder setSnapshot(org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot value) {
          if (snapshotBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            snapshot_ = value;
            onChanged();
          } else {
            snapshotBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder setSnapshot(
            org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder builderForValue) {
          if (snapshotBuilder_ == null) {
            snapshot_ = builderForValue.build();
            onChanged();
          } else {
            snapshotBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder mergeSnapshot(org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot value) {
          if (snapshotBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                snapshot_ != org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance()) {
              snapshot_ =
                org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.newBuilder(snapshot_).mergeFrom(value).buildPartial();
            } else {
              snapshot_ = value;
            }
            onChanged();
          } else {
            snapshotBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder clearSnapshot() {
          if (snapshotBuilder_ == null) {
            snapshot_ = org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance();
            onChanged();
          } else {
            snapshotBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder getSnapshotBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getSnapshotFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder getSnapshotOrBuilder() {
          if (snapshotBuilder_ != null) {
            return snapshotBuilder_.getMessageOrBuilder();
          } else {
            return snapshot_;
          }
        }
        /**
         * <code>optional .diff.WaveletDiffSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder> 
            getSnapshotFieldBuilder() {
          if (snapshotBuilder_ == null) {
            snapshotBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder>(
                    snapshot_,
                    getParentForChildren(),
                    isClean());
            snapshot_ = null;
          }
          return snapshotBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:diff.FetchDiffResponse.WaveletDiff)
      }

      static {
        defaultInstance = new WaveletDiff(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:diff.FetchDiffResponse.WaveletDiff)
    }

    private int bitField0_;
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
      return status_;
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
      return status_;
    }

    // repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;
    public static final int WAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff> wavelet_;
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    public java.util.List<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff> getWaveletList() {
      return wavelet_;
    }
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    public java.util.List<? extends org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder> 
        getWaveletOrBuilderList() {
      return wavelet_;
    }
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    public int getWaveletCount() {
      return wavelet_.size();
    }
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff getWavelet(int index) {
      return wavelet_.get(index);
    }
    /**
     * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
     */
    public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder getWaveletOrBuilder(
        int index) {
      return wavelet_.get(index);
    }

    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      wavelet_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStatus().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getWaveletCount(); i++) {
        if (!getWavelet(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, status_);
      }
      for (int i = 0; i < wavelet_.size(); i++) {
        output.writeMessage(2, wavelet_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, status_);
      }
      for (int i = 0; i < wavelet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, wavelet_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.FetchDiffResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.diff.Diff.FetchDiffResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code diff.FetchDiffResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.diff.Diff.FetchDiffResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.diff.Diff.FetchDiffResponse.class, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.Builder.class);
      }

      // Construct using org.waveprotocol.wave.diff.Diff.FetchDiffResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
          getWaveletFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (waveletBuilder_ == null) {
          wavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          waveletBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_FetchDiffResponse_descriptor;
      }

      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.diff.Diff.FetchDiffResponse.getDefaultInstance();
      }

      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse build() {
        org.waveprotocol.wave.diff.Diff.FetchDiffResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse buildPartial() {
        org.waveprotocol.wave.diff.Diff.FetchDiffResponse result = new org.waveprotocol.wave.diff.Diff.FetchDiffResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        if (waveletBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            wavelet_ = java.util.Collections.unmodifiableList(wavelet_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.wavelet_ = wavelet_;
        } else {
          result.wavelet_ = waveletBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.diff.Diff.FetchDiffResponse) {
          return mergeFrom((org.waveprotocol.wave.diff.Diff.FetchDiffResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.diff.Diff.FetchDiffResponse other) {
        if (other == org.waveprotocol.wave.diff.Diff.FetchDiffResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (waveletBuilder_ == null) {
          if (!other.wavelet_.isEmpty()) {
            if (wavelet_.isEmpty()) {
              wavelet_ = other.wavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWaveletIsMutable();
              wavelet_.addAll(other.wavelet_);
            }
            onChanged();
          }
        } else {
          if (!other.wavelet_.isEmpty()) {
            if (waveletBuilder_.isEmpty()) {
              waveletBuilder_.dispose();
              waveletBuilder_ = null;
              wavelet_ = other.wavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
              waveletBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWaveletFieldBuilder() : null;
            } else {
              waveletBuilder_.addAllMessages(other.wavelet_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!getStatus().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getWaveletCount(); i++) {
          if (!getWavelet(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.diff.Diff.FetchDiffResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.diff.Diff.FetchDiffResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .concurrencycontrol.ResponseStatus status = 1;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> statusBuilder_;
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
            status_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_;
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder>(
                  status_,
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;
      private java.util.List<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff> wavelet_ =
        java.util.Collections.emptyList();
      private void ensureWaveletIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff>(wavelet_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder> waveletBuilder_;

      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public java.util.List<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff> getWaveletList() {
        if (waveletBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wavelet_);
        } else {
          return waveletBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public int getWaveletCount() {
        if (waveletBuilder_ == null) {
          return wavelet_.size();
        } else {
          return waveletBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff getWavelet(int index) {
        if (waveletBuilder_ == null) {
          return wavelet_.get(index);
        } else {
          return waveletBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder setWavelet(
          int index, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.set(index, value);
          onChanged();
        } else {
          waveletBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder setWavelet(
          int index, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.set(index, builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder addWavelet(org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.add(value);
          onChanged();
        } else {
          waveletBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder addWavelet(
          int index, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.add(index, value);
          onChanged();
        } else {
          waveletBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder addWavelet(
          org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.add(builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder addWavelet(
          int index, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.add(index, builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder addAllWavelet(
          java.lang.Iterable<? extends org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff> values) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          super.addAll(values, wavelet_);
          onChanged();
        } else {
          waveletBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder clearWavelet() {
        if (waveletBuilder_ == null) {
          wavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          waveletBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public Builder removeWavelet(int index) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.remove(index);
          onChanged();
        } else {
          waveletBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder getWaveletBuilder(
          int index) {
        return getWaveletFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder getWaveletOrBuilder(
          int index) {
        if (waveletBuilder_ == null) {
          return wavelet_.get(index);  } else {
          return waveletBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public java.util.List<? extends org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder> 
           getWaveletOrBuilderList() {
        if (waveletBuilder_ != null) {
          return waveletBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wavelet_);
        }
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder addWaveletBuilder() {
        return getWaveletFieldBuilder().addBuilder(
            org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.getDefaultInstance());
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder addWaveletBuilder(
          int index) {
        return getWaveletFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.getDefaultInstance());
      }
      /**
       * <code>repeated .diff.FetchDiffResponse.WaveletDiff wavelet = 2;</code>
       */
      public java.util.List<org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder> 
           getWaveletBuilderList() {
        return getWaveletFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder> 
          getWaveletFieldBuilder() {
        if (waveletBuilder_ == null) {
          waveletBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiff.Builder, org.waveprotocol.wave.diff.Diff.FetchDiffResponse.WaveletDiffOrBuilder>(
                  wavelet_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          wavelet_ = null;
        }
        return waveletBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:diff.FetchDiffResponse)
    }

    static {
      defaultInstance = new FetchDiffResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:diff.FetchDiffResponse)
  }

  public interface WaveletDiffSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveletId = 1;
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    boolean hasWaveletId();
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // repeated string participant = 2;
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    java.util.List<java.lang.String>
    getParticipantList();
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    int getParticipantCount();
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    java.lang.String getParticipant(int index);
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    com.google.protobuf.ByteString
        getParticipantBytes(int index);

    // repeated string addedParticipant = 21;
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    java.util.List<java.lang.String>
    getAddedParticipantList();
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    int getAddedParticipantCount();
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    java.lang.String getAddedParticipant(int index);
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    com.google.protobuf.ByteString
        getAddedParticipantBytes(int index);

    // repeated string removedParticipant = 22;
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    java.util.List<java.lang.String>
    getRemovedParticipantList();
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    int getRemovedParticipantCount();
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    java.lang.String getRemovedParticipant(int index);
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    com.google.protobuf.ByteString
        getRemovedParticipantBytes(int index);

    // repeated .diff.DocumentDiffSnapshot document = 3;
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    java.util.List<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot> 
        getDocumentList();
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot getDocument(int index);
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    int getDocumentCount();
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder> 
        getDocumentOrBuilderList();
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder getDocumentOrBuilder(
        int index);

    // required .federation.ProtocolHashedVersion version = 4;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder();

    // required int64 lastModifiedTime = 5;
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    boolean hasLastModifiedTime();
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    long getLastModifiedTime();

    // required string creator = 6;
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    boolean hasCreator();
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    java.lang.String getCreator();
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    // required int64 creationTime = 7;
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    boolean hasCreationTime();
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    long getCreationTime();
  }
  /**
   * Protobuf type {@code diff.WaveletDiffSnapshot}
   *
   * <pre>
   * A wavelet and associated metadata. 
   * </pre>
   */
  public static final class WaveletDiffSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements WaveletDiffSnapshotOrBuilder {
    // Use WaveletDiffSnapshot.newBuilder() to construct.
    private WaveletDiffSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletDiffSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletDiffSnapshot defaultInstance;
    public static WaveletDiffSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletDiffSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletDiffSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                participant_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              participant_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                document_ = new java.util.ArrayList<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot>();
                mutable_bitField0_ |= 0x00000010;
              }
              document_.add(input.readMessage(org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              lastModifiedTime_ = input.readInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              creator_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              creationTime_ = input.readInt64();
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                addedParticipant_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              addedParticipant_.add(input.readBytes());
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                removedParticipant_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              removedParticipant_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          participant_ = new com.google.protobuf.UnmodifiableLazyStringList(participant_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          document_ = java.util.Collections.unmodifiableList(document_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          addedParticipant_ = new com.google.protobuf.UnmodifiableLazyStringList(addedParticipant_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          removedParticipant_ = new com.google.protobuf.UnmodifiableLazyStringList(removedParticipant_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_WaveletDiffSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_WaveletDiffSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.class, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletDiffSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<WaveletDiffSnapshot>() {
      public WaveletDiffSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletDiffSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletDiffSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveletId = 1;
    public static final int WAVELETID_FIELD_NUMBER = 1;
    private java.lang.Object waveletId_;
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string participant = 2;
    public static final int PARTICIPANT_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList participant_;
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getParticipantList() {
      return participant_;
    }
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public int getParticipantCount() {
      return participant_.size();
    }
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public java.lang.String getParticipant(int index) {
      return participant_.get(index);
    }
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParticipantBytes(int index) {
      return participant_.getByteString(index);
    }

    // repeated string addedParticipant = 21;
    public static final int ADDEDPARTICIPANT_FIELD_NUMBER = 21;
    private com.google.protobuf.LazyStringList addedParticipant_;
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    public java.util.List<java.lang.String>
        getAddedParticipantList() {
      return addedParticipant_;
    }
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    public int getAddedParticipantCount() {
      return addedParticipant_.size();
    }
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    public java.lang.String getAddedParticipant(int index) {
      return addedParticipant_.get(index);
    }
    /**
     * <code>repeated string addedParticipant = 21;</code>
     *
     * <pre>
     * Added participants of this wavelet;
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAddedParticipantBytes(int index) {
      return addedParticipant_.getByteString(index);
    }

    // repeated string removedParticipant = 22;
    public static final int REMOVEDPARTICIPANT_FIELD_NUMBER = 22;
    private com.google.protobuf.LazyStringList removedParticipant_;
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    public java.util.List<java.lang.String>
        getRemovedParticipantList() {
      return removedParticipant_;
    }
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    public int getRemovedParticipantCount() {
      return removedParticipant_.size();
    }
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    public java.lang.String getRemovedParticipant(int index) {
      return removedParticipant_.get(index);
    }
    /**
     * <code>repeated string removedParticipant = 22;</code>
     *
     * <pre>
     * Removed participants of this wavelet;
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRemovedParticipantBytes(int index) {
      return removedParticipant_.getByteString(index);
    }

    // repeated .diff.DocumentDiffSnapshot document = 3;
    public static final int DOCUMENT_FIELD_NUMBER = 3;
    private java.util.List<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot> document_;
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public java.util.List<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot> getDocumentList() {
      return document_;
    }
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder> 
        getDocumentOrBuilderList() {
      return document_;
    }
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public int getDocumentCount() {
      return document_.size();
    }
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot getDocument(int index) {
      return document_.get(index);
    }
    /**
     * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder getDocumentOrBuilder(
        int index) {
      return document_.get(index);
    }

    // required .federation.ProtocolHashedVersion version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
      return version_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
      return version_;
    }

    // required int64 lastModifiedTime = 5;
    public static final int LASTMODIFIEDTIME_FIELD_NUMBER = 5;
    private long lastModifiedTime_;
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    public boolean hasLastModifiedTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    public long getLastModifiedTime() {
      return lastModifiedTime_;
    }

    // required string creator = 6;
    public static final int CREATOR_FIELD_NUMBER = 6;
    private java.lang.Object creator_;
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    public boolean hasCreator() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          creator_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 creationTime = 7;
    public static final int CREATIONTIME_FIELD_NUMBER = 7;
    private long creationTime_;
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    public boolean hasCreationTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    public long getCreationTime() {
      return creationTime_;
    }

    private void initFields() {
      waveletId_ = "";
      participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      addedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      removedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      document_ = java.util.Collections.emptyList();
      version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      lastModifiedTime_ = 0L;
      creator_ = "";
      creationTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreator()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreationTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDocumentCount(); i++) {
        if (!getDocument(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletIdBytes());
      }
      for (int i = 0; i < participant_.size(); i++) {
        output.writeBytes(2, participant_.getByteString(i));
      }
      for (int i = 0; i < document_.size(); i++) {
        output.writeMessage(3, document_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(7, creationTime_);
      }
      for (int i = 0; i < addedParticipant_.size(); i++) {
        output.writeBytes(21, addedParticipant_.getByteString(i));
      }
      for (int i = 0; i < removedParticipant_.size(); i++) {
        output.writeBytes(22, removedParticipant_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < participant_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(participant_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getParticipantList().size();
      }
      for (int i = 0; i < document_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, document_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, creationTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < addedParticipant_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(addedParticipant_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getAddedParticipantList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removedParticipant_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(removedParticipant_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getRemovedParticipantList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code diff.WaveletDiffSnapshot}
     *
     * <pre>
     * A wavelet and associated metadata. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_WaveletDiffSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_WaveletDiffSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.class, org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDocumentFieldBuilder();
          getVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        addedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        removedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (documentBuilder_ == null) {
          document_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          documentBuilder_.clear();
        }
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        lastModifiedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        creator_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        creationTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_WaveletDiffSnapshot_descriptor;
      }

      public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot build() {
        org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot buildPartial() {
        org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot result = new org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletId_ = waveletId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          participant_ = new com.google.protobuf.UnmodifiableLazyStringList(
              participant_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.participant_ = participant_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          addedParticipant_ = new com.google.protobuf.UnmodifiableLazyStringList(
              addedParticipant_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.addedParticipant_ = addedParticipant_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          removedParticipant_ = new com.google.protobuf.UnmodifiableLazyStringList(
              removedParticipant_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.removedParticipant_ = removedParticipant_;
        if (documentBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            document_ = java.util.Collections.unmodifiableList(document_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.document_ = document_;
        } else {
          result.document_ = documentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000002;
        }
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastModifiedTime_ = lastModifiedTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.creator_ = creator_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.creationTime_ = creationTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot) {
          return mergeFrom((org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot other) {
        if (other == org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000001;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (!other.participant_.isEmpty()) {
          if (participant_.isEmpty()) {
            participant_ = other.participant_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParticipantIsMutable();
            participant_.addAll(other.participant_);
          }
          onChanged();
        }
        if (!other.addedParticipant_.isEmpty()) {
          if (addedParticipant_.isEmpty()) {
            addedParticipant_ = other.addedParticipant_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAddedParticipantIsMutable();
            addedParticipant_.addAll(other.addedParticipant_);
          }
          onChanged();
        }
        if (!other.removedParticipant_.isEmpty()) {
          if (removedParticipant_.isEmpty()) {
            removedParticipant_ = other.removedParticipant_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRemovedParticipantIsMutable();
            removedParticipant_.addAll(other.removedParticipant_);
          }
          onChanged();
        }
        if (documentBuilder_ == null) {
          if (!other.document_.isEmpty()) {
            if (document_.isEmpty()) {
              document_ = other.document_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDocumentIsMutable();
              document_.addAll(other.document_);
            }
            onChanged();
          }
        } else {
          if (!other.document_.isEmpty()) {
            if (documentBuilder_.isEmpty()) {
              documentBuilder_.dispose();
              documentBuilder_ = null;
              document_ = other.document_;
              bitField0_ = (bitField0_ & ~0x00000010);
              documentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDocumentFieldBuilder() : null;
            } else {
              documentBuilder_.addAllMessages(other.document_);
            }
          }
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        if (other.hasCreator()) {
          bitField0_ |= 0x00000080;
          creator_ = other.creator_;
          onChanged();
        }
        if (other.hasCreationTime()) {
          setCreationTime(other.getCreationTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasLastModifiedTime()) {
          
          return false;
        }
        if (!hasCreator()) {
          
          return false;
        }
        if (!hasCreationTime()) {
          
          return false;
        }
        for (int i = 0; i < getDocumentCount(); i++) {
          if (!getDocument(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.diff.Diff.WaveletDiffSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveletId = 1;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // repeated string participant = 2;
      private com.google.protobuf.LazyStringList participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureParticipantIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          participant_ = new com.google.protobuf.LazyStringArrayList(participant_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getParticipantList() {
        return java.util.Collections.unmodifiableList(participant_);
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public int getParticipantCount() {
        return participant_.size();
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public java.lang.String getParticipant(int index) {
        return participant_.get(index);
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParticipantBytes(int index) {
        return participant_.getByteString(index);
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder setParticipant(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIsMutable();
        participant_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder addParticipant(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIsMutable();
        participant_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder addAllParticipant(
          java.lang.Iterable<java.lang.String> values) {
        ensureParticipantIsMutable();
        super.addAll(values, participant_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder clearParticipant() {
        participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder addParticipantBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIsMutable();
        participant_.add(value);
        onChanged();
        return this;
      }

      // repeated string addedParticipant = 21;
      private com.google.protobuf.LazyStringList addedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAddedParticipantIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          addedParticipant_ = new com.google.protobuf.LazyStringArrayList(addedParticipant_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public java.util.List<java.lang.String>
          getAddedParticipantList() {
        return java.util.Collections.unmodifiableList(addedParticipant_);
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public int getAddedParticipantCount() {
        return addedParticipant_.size();
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public java.lang.String getAddedParticipant(int index) {
        return addedParticipant_.get(index);
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAddedParticipantBytes(int index) {
        return addedParticipant_.getByteString(index);
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public Builder setAddedParticipant(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddedParticipantIsMutable();
        addedParticipant_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public Builder addAddedParticipant(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddedParticipantIsMutable();
        addedParticipant_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public Builder addAllAddedParticipant(
          java.lang.Iterable<java.lang.String> values) {
        ensureAddedParticipantIsMutable();
        super.addAll(values, addedParticipant_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public Builder clearAddedParticipant() {
        addedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedParticipant = 21;</code>
       *
       * <pre>
       * Added participants of this wavelet;
       * </pre>
       */
      public Builder addAddedParticipantBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddedParticipantIsMutable();
        addedParticipant_.add(value);
        onChanged();
        return this;
      }

      // repeated string removedParticipant = 22;
      private com.google.protobuf.LazyStringList removedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRemovedParticipantIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          removedParticipant_ = new com.google.protobuf.LazyStringArrayList(removedParticipant_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public java.util.List<java.lang.String>
          getRemovedParticipantList() {
        return java.util.Collections.unmodifiableList(removedParticipant_);
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public int getRemovedParticipantCount() {
        return removedParticipant_.size();
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public java.lang.String getRemovedParticipant(int index) {
        return removedParticipant_.get(index);
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRemovedParticipantBytes(int index) {
        return removedParticipant_.getByteString(index);
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public Builder setRemovedParticipant(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedParticipantIsMutable();
        removedParticipant_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public Builder addRemovedParticipant(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedParticipantIsMutable();
        removedParticipant_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public Builder addAllRemovedParticipant(
          java.lang.Iterable<java.lang.String> values) {
        ensureRemovedParticipantIsMutable();
        super.addAll(values, removedParticipant_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public Builder clearRemovedParticipant() {
        removedParticipant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedParticipant = 22;</code>
       *
       * <pre>
       * Removed participants of this wavelet;
       * </pre>
       */
      public Builder addRemovedParticipantBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedParticipantIsMutable();
        removedParticipant_.add(value);
        onChanged();
        return this;
      }

      // repeated .diff.DocumentDiffSnapshot document = 3;
      private java.util.List<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot> document_ =
        java.util.Collections.emptyList();
      private void ensureDocumentIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          document_ = new java.util.ArrayList<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot>(document_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder> documentBuilder_;

      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot> getDocumentList() {
        if (documentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(document_);
        } else {
          return documentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public int getDocumentCount() {
        if (documentBuilder_ == null) {
          return document_.size();
        } else {
          return documentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot getDocument(int index) {
        if (documentBuilder_ == null) {
          return document_.get(index);
        } else {
          return documentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder setDocument(
          int index, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.set(index, value);
          onChanged();
        } else {
          documentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder setDocument(
          int index, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.set(index, builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.add(value);
          onChanged();
        } else {
          documentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          int index, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.add(index, value);
          onChanged();
        } else {
          documentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.add(builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          int index, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.add(index, builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addAllDocument(
          java.lang.Iterable<? extends org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot> values) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          super.addAll(values, document_);
          onChanged();
        } else {
          documentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder clearDocument() {
        if (documentBuilder_ == null) {
          document_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          documentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder removeDocument(int index) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.remove(index);
          onChanged();
        } else {
          documentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder getDocumentBuilder(
          int index) {
        return getDocumentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder getDocumentOrBuilder(
          int index) {
        if (documentBuilder_ == null) {
          return document_.get(index);  } else {
          return documentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder> 
           getDocumentOrBuilderList() {
        if (documentBuilder_ != null) {
          return documentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(document_);
        }
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder addDocumentBuilder() {
        return getDocumentFieldBuilder().addBuilder(
            org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder addDocumentBuilder(
          int index) {
        return getDocumentFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .diff.DocumentDiffSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder> 
           getDocumentBuilderList() {
        return getDocumentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder> 
          getDocumentFieldBuilder() {
        if (documentBuilder_ == null) {
          documentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder>(
                  document_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        return documentBuilder_;
      }

      // required .federation.ProtocolHashedVersion version = 4;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> versionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
        if (versionBuilder_ == null) {
          return version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder setVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder mergeVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              version_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            version_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getVersionBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // required int64 lastModifiedTime = 5;
      private long lastModifiedTime_ ;
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public boolean hasLastModifiedTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public long getLastModifiedTime() {
        return lastModifiedTime_;
      }
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public Builder setLastModifiedTime(long value) {
        bitField0_ |= 0x00000040;
        lastModifiedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public Builder clearLastModifiedTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lastModifiedTime_ = 0L;
        onChanged();
        return this;
      }

      // required string creator = 6;
      private java.lang.Object creator_ = "";
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public boolean hasCreator() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        creator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public Builder clearCreator() {
        bitField0_ = (bitField0_ & ~0x00000080);
        creator_ = getDefaultInstance().getCreator();
        onChanged();
        return this;
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        creator_ = value;
        onChanged();
        return this;
      }

      // required int64 creationTime = 7;
      private long creationTime_ ;
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public boolean hasCreationTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public long getCreationTime() {
        return creationTime_;
      }
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public Builder setCreationTime(long value) {
        bitField0_ |= 0x00000100;
        creationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public Builder clearCreationTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        creationTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:diff.WaveletDiffSnapshot)
    }

    static {
      defaultInstance = new WaveletDiffSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:diff.WaveletDiffSnapshot)
  }

  public interface DocumentDiffSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string documentId = 1;
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    boolean hasDocumentId();
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    java.lang.String getDocumentId();
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDocumentIdBytes();

    // optional .federation.ProtocolDocumentOperation state = 2;
    /**
     * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the last-read document state.
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the last-read document state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getState();
    /**
     * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the last-read document state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getStateOrBuilder();

    // optional .federation.ProtocolDocumentOperation diff = 21;
    /**
     * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
     *
     * <pre>
     * Operation that transforms the last-read document state to the current state.
     * </pre>
     */
    boolean hasDiff();
    /**
     * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
     *
     * <pre>
     * Operation that transforms the last-read document state to the current state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDiff();
    /**
     * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
     *
     * <pre>
     * Operation that transforms the last-read document state to the current state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDiffOrBuilder();

    // required string author = 3;
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    boolean hasAuthor();
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    java.lang.String getAuthor();
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getAuthorBytes();

    // repeated string contributor = 4;
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    java.util.List<java.lang.String>
    getContributorList();
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    int getContributorCount();
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    java.lang.String getContributor(int index);
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getContributorBytes(int index);

    // repeated string addedContributor = 22;
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    java.util.List<java.lang.String>
    getAddedContributorList();
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    int getAddedContributorCount();
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    java.lang.String getAddedContributor(int index);
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getAddedContributorBytes(int index);

    // repeated string removedContributor = 23;
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    java.util.List<java.lang.String>
    getRemovedContributorList();
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    int getRemovedContributorCount();
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    java.lang.String getRemovedContributor(int index);
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRemovedContributorBytes(int index);

    // required int64 lastModifiedVersion = 5;
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    boolean hasLastModifiedVersion();
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    long getLastModifiedVersion();

    // required int64 lastModifiedTime = 6;
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    boolean hasLastModifiedTime();
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    long getLastModifiedTime();
  }
  /**
   * Protobuf type {@code diff.DocumentDiffSnapshot}
   *
   * <pre>
   * A document and associated metadata. 
   * </pre>
   */
  public static final class DocumentDiffSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements DocumentDiffSnapshotOrBuilder {
    // Use DocumentDiffSnapshot.newBuilder() to construct.
    private DocumentDiffSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DocumentDiffSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DocumentDiffSnapshot defaultInstance;
    public static DocumentDiffSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public DocumentDiffSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DocumentDiffSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              documentId_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000008;
              author_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                contributor_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              contributor_.add(input.readBytes());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              lastModifiedVersion_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lastModifiedTime_ = input.readInt64();
              break;
            }
            case 170: {
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = diff_.toBuilder();
              }
              diff_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(diff_);
                diff_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                addedContributor_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              addedContributor_.add(input.readBytes());
              break;
            }
            case 186: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                removedContributor_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              removedContributor_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          contributor_ = new com.google.protobuf.UnmodifiableLazyStringList(contributor_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          addedContributor_ = new com.google.protobuf.UnmodifiableLazyStringList(addedContributor_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          removedContributor_ = new com.google.protobuf.UnmodifiableLazyStringList(removedContributor_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_DocumentDiffSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.diff.Diff.internal_static_diff_DocumentDiffSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.class, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<DocumentDiffSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<DocumentDiffSnapshot>() {
      public DocumentDiffSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentDiffSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DocumentDiffSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string documentId = 1;
    public static final int DOCUMENTID_FIELD_NUMBER = 1;
    private java.lang.Object documentId_;
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    public boolean hasDocumentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    public java.lang.String getDocumentId() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          documentId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDocumentIdBytes() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        documentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .federation.ProtocolDocumentOperation state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation state_;
    /**
     * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the last-read document state.
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the last-read document state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getState() {
      return state_;
    }
    /**
     * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the last-read document state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getStateOrBuilder() {
      return state_;
    }

    // optional .federation.ProtocolDocumentOperation diff = 21;
    public static final int DIFF_FIELD_NUMBER = 21;
    private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation diff_;
    /**
     * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
     *
     * <pre>
     * Operation that transforms the last-read document state to the current state.
     * </pre>
     */
    public boolean hasDiff() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
     *
     * <pre>
     * Operation that transforms the last-read document state to the current state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDiff() {
      return diff_;
    }
    /**
     * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
     *
     * <pre>
     * Operation that transforms the last-read document state to the current state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDiffOrBuilder() {
      return diff_;
    }

    // required string author = 3;
    public static final int AUTHOR_FIELD_NUMBER = 3;
    private java.lang.Object author_;
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    public boolean hasAuthor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    public java.lang.String getAuthor() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          author_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAuthorBytes() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        author_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string contributor = 4;
    public static final int CONTRIBUTOR_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList contributor_;
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getContributorList() {
      return contributor_;
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public int getContributorCount() {
      return contributor_.size();
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public java.lang.String getContributor(int index) {
      return contributor_.get(index);
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContributorBytes(int index) {
      return contributor_.getByteString(index);
    }

    // repeated string addedContributor = 22;
    public static final int ADDEDCONTRIBUTOR_FIELD_NUMBER = 22;
    private com.google.protobuf.LazyStringList addedContributor_;
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getAddedContributorList() {
      return addedContributor_;
    }
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    public int getAddedContributorCount() {
      return addedContributor_.size();
    }
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    public java.lang.String getAddedContributor(int index) {
      return addedContributor_.get(index);
    }
    /**
     * <code>repeated string addedContributor = 22;</code>
     *
     * <pre>
     * Added participants who have submitted operations to the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAddedContributorBytes(int index) {
      return addedContributor_.getByteString(index);
    }

    // repeated string removedContributor = 23;
    public static final int REMOVEDCONTRIBUTOR_FIELD_NUMBER = 23;
    private com.google.protobuf.LazyStringList removedContributor_;
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getRemovedContributorList() {
      return removedContributor_;
    }
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    public int getRemovedContributorCount() {
      return removedContributor_.size();
    }
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    public java.lang.String getRemovedContributor(int index) {
      return removedContributor_.get(index);
    }
    /**
     * <code>repeated string removedContributor = 23;</code>
     *
     * <pre>
     * Removed participants who have submitted operations to the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRemovedContributorBytes(int index) {
      return removedContributor_.getByteString(index);
    }

    // required int64 lastModifiedVersion = 5;
    public static final int LASTMODIFIEDVERSION_FIELD_NUMBER = 5;
    private long lastModifiedVersion_;
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    public boolean hasLastModifiedVersion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    public long getLastModifiedVersion() {
      return lastModifiedVersion_;
    }

    // required int64 lastModifiedTime = 6;
    public static final int LASTMODIFIEDTIME_FIELD_NUMBER = 6;
    private long lastModifiedTime_;
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    public boolean hasLastModifiedTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    public long getLastModifiedTime() {
      return lastModifiedTime_;
    }

    private void initFields() {
      documentId_ = "";
      state_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      diff_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      author_ = "";
      contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      addedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      removedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      lastModifiedVersion_ = 0L;
      lastModifiedTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDocumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAuthor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasState()) {
        if (!getState().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDiff()) {
        if (!getDiff().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDocumentIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, state_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(3, getAuthorBytes());
      }
      for (int i = 0; i < contributor_.size(); i++) {
        output.writeBytes(4, contributor_.getByteString(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, lastModifiedVersion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(21, diff_);
      }
      for (int i = 0; i < addedContributor_.size(); i++) {
        output.writeBytes(22, addedContributor_.getByteString(i));
      }
      for (int i = 0; i < removedContributor_.size(); i++) {
        output.writeBytes(23, removedContributor_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDocumentIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, state_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAuthorBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < contributor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(contributor_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getContributorList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastModifiedVersion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, diff_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < addedContributor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(addedContributor_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getAddedContributorList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removedContributor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(removedContributor_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getRemovedContributorList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code diff.DocumentDiffSnapshot}
     *
     * <pre>
     * A document and associated metadata. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_DocumentDiffSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_DocumentDiffSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.class, org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStateFieldBuilder();
          getDiffFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        documentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stateBuilder_ == null) {
          state_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (diffBuilder_ == null) {
          diff_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
        } else {
          diffBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        author_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        addedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        removedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        lastModifiedVersion_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        lastModifiedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.diff.Diff.internal_static_diff_DocumentDiffSnapshot_descriptor;
      }

      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot build() {
        org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot buildPartial() {
        org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot result = new org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.documentId_ = documentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (diffBuilder_ == null) {
          result.diff_ = diff_;
        } else {
          result.diff_ = diffBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.author_ = author_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          contributor_ = new com.google.protobuf.UnmodifiableLazyStringList(
              contributor_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.contributor_ = contributor_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          addedContributor_ = new com.google.protobuf.UnmodifiableLazyStringList(
              addedContributor_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.addedContributor_ = addedContributor_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          removedContributor_ = new com.google.protobuf.UnmodifiableLazyStringList(
              removedContributor_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.removedContributor_ = removedContributor_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastModifiedVersion_ = lastModifiedVersion_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lastModifiedTime_ = lastModifiedTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot) {
          return mergeFrom((org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot other) {
        if (other == org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot.getDefaultInstance()) return this;
        if (other.hasDocumentId()) {
          bitField0_ |= 0x00000001;
          documentId_ = other.documentId_;
          onChanged();
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasDiff()) {
          mergeDiff(other.getDiff());
        }
        if (other.hasAuthor()) {
          bitField0_ |= 0x00000008;
          author_ = other.author_;
          onChanged();
        }
        if (!other.contributor_.isEmpty()) {
          if (contributor_.isEmpty()) {
            contributor_ = other.contributor_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureContributorIsMutable();
            contributor_.addAll(other.contributor_);
          }
          onChanged();
        }
        if (!other.addedContributor_.isEmpty()) {
          if (addedContributor_.isEmpty()) {
            addedContributor_ = other.addedContributor_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureAddedContributorIsMutable();
            addedContributor_.addAll(other.addedContributor_);
          }
          onChanged();
        }
        if (!other.removedContributor_.isEmpty()) {
          if (removedContributor_.isEmpty()) {
            removedContributor_ = other.removedContributor_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRemovedContributorIsMutable();
            removedContributor_.addAll(other.removedContributor_);
          }
          onChanged();
        }
        if (other.hasLastModifiedVersion()) {
          setLastModifiedVersion(other.getLastModifiedVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDocumentId()) {
          
          return false;
        }
        if (!hasAuthor()) {
          
          return false;
        }
        if (!hasLastModifiedVersion()) {
          
          return false;
        }
        if (!hasLastModifiedTime()) {
          
          return false;
        }
        if (hasState()) {
          if (!getState().isInitialized()) {
            
            return false;
          }
        }
        if (hasDiff()) {
          if (!getDiff().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.diff.Diff.DocumentDiffSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string documentId = 1;
      private java.lang.Object documentId_ = "";
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public boolean hasDocumentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public java.lang.String getDocumentId() {
        java.lang.Object ref = documentId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          documentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDocumentIdBytes() {
        java.lang.Object ref = documentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          documentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public Builder setDocumentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public Builder clearDocumentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        documentId_ = getDefaultInstance().getDocumentId();
        onChanged();
        return this;
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public Builder setDocumentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }

      // optional .federation.ProtocolDocumentOperation state = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation state_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> stateBuilder_;
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getState() {
        if (stateBuilder_ == null) {
          return state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public Builder setState(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public Builder setState(
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public Builder mergeState(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              state_ != org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance()) {
            state_ =
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_;
        }
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation state = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the last-read document state.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder>(
                  state_,
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      // optional .federation.ProtocolDocumentOperation diff = 21;
      private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation diff_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> diffBuilder_;
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public boolean hasDiff() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDiff() {
        if (diffBuilder_ == null) {
          return diff_;
        } else {
          return diffBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public Builder setDiff(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (diffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          diff_ = value;
          onChanged();
        } else {
          diffBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public Builder setDiff(
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder builderForValue) {
        if (diffBuilder_ == null) {
          diff_ = builderForValue.build();
          onChanged();
        } else {
          diffBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public Builder mergeDiff(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (diffBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              diff_ != org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance()) {
            diff_ =
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.newBuilder(diff_).mergeFrom(value).buildPartial();
          } else {
            diff_ = value;
          }
          onChanged();
        } else {
          diffBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public Builder clearDiff() {
        if (diffBuilder_ == null) {
          diff_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
          onChanged();
        } else {
          diffBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder getDiffBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDiffFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDiffOrBuilder() {
        if (diffBuilder_ != null) {
          return diffBuilder_.getMessageOrBuilder();
        } else {
          return diff_;
        }
      }
      /**
       * <code>optional .federation.ProtocolDocumentOperation diff = 21;</code>
       *
       * <pre>
       * Operation that transforms the last-read document state to the current state.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> 
          getDiffFieldBuilder() {
        if (diffBuilder_ == null) {
          diffBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder>(
                  diff_,
                  getParentForChildren(),
                  isClean());
          diff_ = null;
        }
        return diffBuilder_;
      }

      // required string author = 3;
      private java.lang.Object author_ = "";
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public boolean hasAuthor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public java.lang.String getAuthor() {
        java.lang.Object ref = author_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          author_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAuthorBytes() {
        java.lang.Object ref = author_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          author_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public Builder setAuthor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        author_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public Builder clearAuthor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        author_ = getDefaultInstance().getAuthor();
        onChanged();
        return this;
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public Builder setAuthorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        author_ = value;
        onChanged();
        return this;
      }

      // repeated string contributor = 4;
      private com.google.protobuf.LazyStringList contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureContributorIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          contributor_ = new com.google.protobuf.LazyStringArrayList(contributor_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getContributorList() {
        return java.util.Collections.unmodifiableList(contributor_);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public int getContributorCount() {
        return contributor_.size();
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public java.lang.String getContributor(int index) {
        return contributor_.get(index);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContributorBytes(int index) {
        return contributor_.getByteString(index);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder setContributor(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addContributor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addAllContributor(
          java.lang.Iterable<java.lang.String> values) {
        ensureContributorIsMutable();
        super.addAll(values, contributor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder clearContributor() {
        contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addContributorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.add(value);
        onChanged();
        return this;
      }

      // repeated string addedContributor = 22;
      private com.google.protobuf.LazyStringList addedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAddedContributorIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          addedContributor_ = new com.google.protobuf.LazyStringArrayList(addedContributor_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getAddedContributorList() {
        return java.util.Collections.unmodifiableList(addedContributor_);
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public int getAddedContributorCount() {
        return addedContributor_.size();
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public java.lang.String getAddedContributor(int index) {
        return addedContributor_.get(index);
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAddedContributorBytes(int index) {
        return addedContributor_.getByteString(index);
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public Builder setAddedContributor(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddedContributorIsMutable();
        addedContributor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addAddedContributor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddedContributorIsMutable();
        addedContributor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addAllAddedContributor(
          java.lang.Iterable<java.lang.String> values) {
        ensureAddedContributorIsMutable();
        super.addAll(values, addedContributor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public Builder clearAddedContributor() {
        addedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string addedContributor = 22;</code>
       *
       * <pre>
       * Added participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addAddedContributorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddedContributorIsMutable();
        addedContributor_.add(value);
        onChanged();
        return this;
      }

      // repeated string removedContributor = 23;
      private com.google.protobuf.LazyStringList removedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRemovedContributorIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          removedContributor_ = new com.google.protobuf.LazyStringArrayList(removedContributor_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getRemovedContributorList() {
        return java.util.Collections.unmodifiableList(removedContributor_);
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public int getRemovedContributorCount() {
        return removedContributor_.size();
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public java.lang.String getRemovedContributor(int index) {
        return removedContributor_.get(index);
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRemovedContributorBytes(int index) {
        return removedContributor_.getByteString(index);
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public Builder setRemovedContributor(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedContributorIsMutable();
        removedContributor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addRemovedContributor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedContributorIsMutable();
        removedContributor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addAllRemovedContributor(
          java.lang.Iterable<java.lang.String> values) {
        ensureRemovedContributorIsMutable();
        super.addAll(values, removedContributor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public Builder clearRemovedContributor() {
        removedContributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removedContributor = 23;</code>
       *
       * <pre>
       * Removed participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addRemovedContributorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedContributorIsMutable();
        removedContributor_.add(value);
        onChanged();
        return this;
      }

      // required int64 lastModifiedVersion = 5;
      private long lastModifiedVersion_ ;
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public boolean hasLastModifiedVersion() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public long getLastModifiedVersion() {
        return lastModifiedVersion_;
      }
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public Builder setLastModifiedVersion(long value) {
        bitField0_ |= 0x00000080;
        lastModifiedVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public Builder clearLastModifiedVersion() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lastModifiedVersion_ = 0L;
        onChanged();
        return this;
      }

      // required int64 lastModifiedTime = 6;
      private long lastModifiedTime_ ;
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public boolean hasLastModifiedTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public long getLastModifiedTime() {
        return lastModifiedTime_;
      }
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public Builder setLastModifiedTime(long value) {
        bitField0_ |= 0x00000100;
        lastModifiedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public Builder clearLastModifiedTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lastModifiedTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:diff.DocumentDiffSnapshot)
    }

    static {
      defaultInstance = new DocumentDiffSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:diff.DocumentDiffSnapshot)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_diff_FetchDiffRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_diff_FetchDiffRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_diff_FetchDiffResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_diff_FetchDiffResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_diff_FetchDiffResponse_WaveletDiff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_diff_FetchDiffResponse_WaveletDiff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_diff_WaveletDiffSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_diff_WaveletDiffSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_diff_DocumentDiffSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_diff_DocumentDiffSnapshot_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%org/waveprotocol/wave/diff/diff.proto\022" +
      "\004diff\032)org/waveprotocol/box/server/rpc/r" +
      "pc.proto\032;org/waveprotocol/wave/concurre" +
      "ncycontrol/clientserver.proto\0326org/wavep" +
      "rotocol/wave/federation/federation.proto" +
      "devel\032*org/waveprotocol/protobuf/extensi" +
      "ons.proto\"\\\n\020FetchDiffRequest\022\016\n\006waveId\030" +
      "\001 \002(\t\0228\n\014knownWavelet\030\002 \003(\0132\".concurrenc" +
      "ycontrol.WaveletVersion\"\314\001\n\021FetchDiffRes" +
      "ponse\0222\n\006status\030\001 \002(\0132\".concurrencycontr",
      "ol.ResponseStatus\0224\n\007wavelet\030\002 \003(\0132#.dif" +
      "f.FetchDiffResponse.WaveletDiff\032M\n\013Wavel" +
      "etDiff\022\021\n\twaveletId\030\001 \002(\t\022+\n\010snapshot\030\002 " +
      "\001(\0132\031.diff.WaveletDiffSnapshot\"\242\002\n\023Wavel" +
      "etDiffSnapshot\022\021\n\twaveletId\030\001 \002(\t\022\023\n\013par" +
      "ticipant\030\002 \003(\t\022\030\n\020addedParticipant\030\025 \003(\t" +
      "\022\032\n\022removedParticipant\030\026 \003(\t\022,\n\010document" +
      "\030\003 \003(\0132\032.diff.DocumentDiffSnapshot\0222\n\007ve" +
      "rsion\030\004 \002(\0132!.federation.ProtocolHashedV" +
      "ersion\022\036\n\020lastModifiedTime\030\005 \002(\003B\004\200\265\030\001\022\017",
      "\n\007creator\030\006 \002(\t\022\032\n\014creationTime\030\007 \002(\003B\004\200" +
      "\265\030\001\"\263\002\n\024DocumentDiffSnapshot\022\022\n\ndocument" +
      "Id\030\001 \002(\t\0224\n\005state\030\002 \001(\0132%.federation.Pro" +
      "tocolDocumentOperation\0223\n\004diff\030\025 \001(\0132%.f" +
      "ederation.ProtocolDocumentOperation\022\016\n\006a" +
      "uthor\030\003 \002(\t\022\023\n\013contributor\030\004 \003(\t\022\030\n\020adde" +
      "dContributor\030\026 \003(\t\022\032\n\022removedContributor" +
      "\030\027 \003(\t\022!\n\023lastModifiedVersion\030\005 \002(\003B\004\200\265\030" +
      "\001\022\036\n\020lastModifiedTime\030\006 \002(\003B\004\200\265\030\0012L\n\020Fet" +
      "chDiffService\0228\n\005Fetch\022\026.diff.FetchDiffR",
      "equest\032\027.diff.FetchDiffResponseB\"\n\032org.w" +
      "aveprotocol.wave.diffB\004Diff"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_diff_FetchDiffRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_diff_FetchDiffRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_diff_FetchDiffRequest_descriptor,
              new java.lang.String[] { "WaveId", "KnownWavelet", });
          internal_static_diff_FetchDiffResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_diff_FetchDiffResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_diff_FetchDiffResponse_descriptor,
              new java.lang.String[] { "Status", "Wavelet", });
          internal_static_diff_FetchDiffResponse_WaveletDiff_descriptor =
            internal_static_diff_FetchDiffResponse_descriptor.getNestedTypes().get(0);
          internal_static_diff_FetchDiffResponse_WaveletDiff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_diff_FetchDiffResponse_WaveletDiff_descriptor,
              new java.lang.String[] { "WaveletId", "Snapshot", });
          internal_static_diff_WaveletDiffSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_diff_WaveletDiffSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_diff_WaveletDiffSnapshot_descriptor,
              new java.lang.String[] { "WaveletId", "Participant", "AddedParticipant", "RemovedParticipant", "Document", "Version", "LastModifiedTime", "Creator", "CreationTime", });
          internal_static_diff_DocumentDiffSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_diff_DocumentDiffSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_diff_DocumentDiffSnapshot_descriptor,
              new java.lang.String[] { "DocumentId", "State", "Diff", "Author", "Contributor", "AddedContributor", "RemovedContributor", "LastModifiedVersion", "LastModifiedTime", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(org.waveprotocol.protobuf.Extensions.int52);
          registry.add(org.waveprotocol.protobuf.Extensions.int52);
          registry.add(org.waveprotocol.protobuf.Extensions.int52);
          registry.add(org.waveprotocol.protobuf.Extensions.int52);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.waveprotocol.box.server.rpc.Rpc.getDescriptor(),
          org.waveprotocol.wave.concurrencycontrol.ClientServer.getDescriptor(),
          org.waveprotocol.wave.federation.Proto.getDescriptor(),
          org.waveprotocol.protobuf.Extensions.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
