<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.

  GXP template for the user authentication (login) page.
  Generate "ant gen_gxp".
  Author: gentle@google.com (Joseph Gentle)
-->

<gxp:template name='org.waveprotocol.box.server.gxp.AuthenticationPage'
  xmlns='http://www.w3.org/1999/xhtml'
  xmlns:expr='http://google.com/2001/gxp/expressions'
  xmlns:call='http://google.com/2001/gxp/call'
  xmlns:gxp='http://google.com/2001/gxp'>

  <gxp:param name='domain' type='String' />
  <gxp:param name='message' type='String' />
  <gxp:param name='responseType' type='String' />
  <gxp:param name='disableLoginPage' type='Boolean' />
  <gxp:param name='analyticsAccount' type='String'/>

  <html dir="ltr">
  <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <link type="text/css" rel="stylesheet" href="/static/auth.css" />
  <link rel="shortcut icon" href="/static/favicon.ico" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:400,900italic,900,700italic,700,500,500italic,400italic,300italic,300,100italic,100"/>
  <title>Wave in a Box login</title>
  <call:AnalyticsFragment expr:account='analyticsAccount'/>
  </head>
  <body onload="init()">
      <div id="header">
      <img src="/static/logo-big.png"  alt='Wave in a Box logo' />
          <span class="bubble"><b>Welcome to Wave in a Box </b> @<gxp:eval
            expr='domain' /> </span>
             <br />
           <a id="signinbutton" href="#wiab_loginform">Sign in</a>
       </div>
             <br />  <br />
       <a href="/static/wiab_screenshot.jpg" target="_blank" title="Click to enlarge">
       <img src="/static/wiab_screenshot.jpg" alt="WIAB client."/></a>
            <div class="margin">
            <br />
                <span style="font-size: larger">
                Apache Wave lets you communicate and collaborate in real time
                </span>
                <p>
                    <b>Wave is equal parts conversation and document.</b>
                     People can communicate and work together with richly formatted text,
                     gadgets, robots and more. 
                </p>
                <p>
                    <b>Wave is shared.</b> Any participant can reply anywhere in the message,
                    edit the content and add participants at any point in the process.
                </p>
                <p>
                    <b>Wave is live.</b> With live transmission as you type, participants on a wave can have faster
                    conversations, see edits and interact with extensions in real-time. 
                </p>
                <br />
                <ul>
                <li>
                    Apache Wave is a rich, distributed, real-time collaboration platform,
                    which allows users to work together in new and exciting ways.
                </li>
                <li>
                    <a href="http://incubator.apache.org/wave/" target="_blank">
                       "Wave in a Box" (WIAB)
                    </a>
                    project is a stand alone wave server and rich web client that can
                    serve as an Apache Wave reference implementation.
                </li>
                <li>
                    This project lets developers and
                    enterprise users run wave servers and host waves on their own hardware.
                </li>
          </ul>
       </div>
       <gxp:if cond='disableLoginPage == false'>
       <form id="wiab_loginform" action="" method="post">
              <h2>Sign in</h2>
              Username:<br />
              
              <input type="text" name="address" id="address"
                size="22" value="" class='wiab le val' /><br />
                
                @<gxp:eval expr='domain' /><br />
                
                <input type="password" name="password"
                id="password" size="22" class="wiab le val" /><br />
                
                <input type="submit"
                class="wiab le button" name="signIn" id="signIn"
                value="Sign in" /><br />
                
                Don't have a Wave in a Box @<gxp:eval expr='domain' />
                account? <a
                style="color: #0066cc; margin-left: 15px;"
                href="/auth/register">Register a new account</a> 
            </form>
            </gxp:if>
          <gxp:if cond='disableLoginPage == true'>
                HTTP Authentication disabled by Administrator. Install and use your certificate instead.
          </gxp:if>
      
      
      
          <span class="bubble"
            style='font-family: arial; text-align: left; font-weight: bold; padding-right: 10px;'
            dir="ltr"></span>
  <br />
  <br />
  <script type="text/javascript">
    var RESPONSE_STATUS_NONE = "NONE";
    var RESPONSE_STATUS_FAILED = "FAILED";
    var RESPONSE_STATUS_SUCCESS = "SUCCESS";
    
    var message = <gxp:eval expr='message'/>;
    var responseType = <gxp:eval expr='responseType'/>;
    
    function init() {
        setFocus();
        handleResponse(responseType, message);
    }
    
    function setFocus() {
        document.getElementById("address").focus();
    }
    
    function handleResponse(responseType, message) {
        var messageLbl = document.getElementById("messageLbl");
        if (responseType == RESPONSE_STATUS_NONE) {
            messageLbl.style.display = "none";
        } else if (responseType == RESPONSE_STATUS_FAILED) {
            messageLbl.style.display = "inline";
            messageLbl.style.color = "red";
            messageLbl.innerHTML = message;
        }
    }
  </script>
  </body>
  </html>
</gxp:template>
