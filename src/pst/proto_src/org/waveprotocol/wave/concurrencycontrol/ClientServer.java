// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/waveprotocol/wave/concurrencycontrol/clientserver.proto

package org.waveprotocol.wave.concurrencycontrol;

public final class ClientServer {
  private ClientServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FetchWaveViewRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveId = 1;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    boolean hasWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    java.lang.String getWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveIdBytes();

    // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> 
        getKnownWaveletList();
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index);
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    int getKnownWaveletCount();
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
        getKnownWaveletOrBuilderList();
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code concurrencycontrol.FetchWaveViewRequest}
   */
  public static final class FetchWaveViewRequest extends
      com.google.protobuf.GeneratedMessage
      implements FetchWaveViewRequestOrBuilder {
    // Use FetchWaveViewRequest.newBuilder() to construct.
    private FetchWaveViewRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FetchWaveViewRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FetchWaveViewRequest defaultInstance;
    public static FetchWaveViewRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FetchWaveViewRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FetchWaveViewRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>();
                mutable_bitField0_ |= 0x00000002;
              }
              knownWavelet_.add(input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          knownWavelet_ = java.util.Collections.unmodifiableList(knownWavelet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FetchWaveViewRequest> PARSER =
        new com.google.protobuf.AbstractParser<FetchWaveViewRequest>() {
      public FetchWaveViewRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FetchWaveViewRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FetchWaveViewRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private java.lang.Object waveId_;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    public boolean hasWaveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    public java.lang.String getWaveId() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to open, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveIdBytes() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
    public static final int KNOWNWAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> knownWavelet_;
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> getKnownWaveletList() {
      return knownWavelet_;
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
        getKnownWaveletOrBuilderList() {
      return knownWavelet_;
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public int getKnownWaveletCount() {
      return knownWavelet_.size();
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index) {
      return knownWavelet_.get(index);
    }
    /**
     * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
     *
     * <pre>
     * Wavelet versions the client already knows.
     * At most one version per wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
        int index) {
      return knownWavelet_.get(index);
    }

    private void initFields() {
      waveId_ = "";
      knownWavelet_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getKnownWaveletCount(); i++) {
        if (!getKnownWavelet(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveIdBytes());
      }
      for (int i = 0; i < knownWavelet_.size(); i++) {
        output.writeMessage(2, knownWavelet_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveIdBytes());
      }
      for (int i = 0; i < knownWavelet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, knownWavelet_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.FetchWaveViewRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getKnownWaveletFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (knownWaveletBuilder_ == null) {
          knownWavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          knownWaveletBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveId_ = waveId_;
        if (knownWaveletBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            knownWavelet_ = java.util.Collections.unmodifiableList(knownWavelet_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.knownWavelet_ = knownWavelet_;
        } else {
          result.knownWavelet_ = knownWaveletBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          bitField0_ |= 0x00000001;
          waveId_ = other.waveId_;
          onChanged();
        }
        if (knownWaveletBuilder_ == null) {
          if (!other.knownWavelet_.isEmpty()) {
            if (knownWavelet_.isEmpty()) {
              knownWavelet_ = other.knownWavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureKnownWaveletIsMutable();
              knownWavelet_.addAll(other.knownWavelet_);
            }
            onChanged();
          }
        } else {
          if (!other.knownWavelet_.isEmpty()) {
            if (knownWaveletBuilder_.isEmpty()) {
              knownWaveletBuilder_.dispose();
              knownWaveletBuilder_ = null;
              knownWavelet_ = other.knownWavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
              knownWaveletBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKnownWaveletFieldBuilder() : null;
            } else {
              knownWaveletBuilder_.addAllMessages(other.knownWavelet_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveId()) {
          
          return false;
        }
        for (int i = 0; i < getKnownWaveletCount(); i++) {
          if (!getKnownWavelet(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveId = 1;
      private java.lang.Object waveId_ = "";
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public boolean hasWaveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public java.lang.String getWaveId() {
        java.lang.Object ref = waveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveIdBytes() {
        java.lang.Object ref = waveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public Builder setWaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public Builder clearWaveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveId_ = getDefaultInstance().getWaveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to open, URI path format.
       * </pre>
       */
      public Builder setWaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }

      // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
      private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> knownWavelet_ =
        java.util.Collections.emptyList();
      private void ensureKnownWaveletIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>(knownWavelet_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> knownWaveletBuilder_;

      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> getKnownWaveletList() {
        if (knownWaveletBuilder_ == null) {
          return java.util.Collections.unmodifiableList(knownWavelet_);
        } else {
          return knownWaveletBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public int getKnownWaveletCount() {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.size();
        } else {
          return knownWaveletBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index) {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.get(index);
        } else {
          return knownWaveletBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder setKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.set(index, value);
          onChanged();
        } else {
          knownWaveletBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder setKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.set(index, builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(value);
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (knownWaveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(index, value);
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addKnownWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.add(index, builderForValue.build());
          onChanged();
        } else {
          knownWaveletBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder addAllKnownWavelet(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> values) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          super.addAll(values, knownWavelet_);
          onChanged();
        } else {
          knownWaveletBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder clearKnownWavelet() {
        if (knownWaveletBuilder_ == null) {
          knownWavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          knownWaveletBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public Builder removeKnownWavelet(int index) {
        if (knownWaveletBuilder_ == null) {
          ensureKnownWaveletIsMutable();
          knownWavelet_.remove(index);
          onChanged();
        } else {
          knownWaveletBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder getKnownWaveletBuilder(
          int index) {
        return getKnownWaveletFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder getKnownWaveletOrBuilder(
          int index) {
        if (knownWaveletBuilder_ == null) {
          return knownWavelet_.get(index);  } else {
          return knownWaveletBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
           getKnownWaveletOrBuilderList() {
        if (knownWaveletBuilder_ != null) {
          return knownWaveletBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(knownWavelet_);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder addKnownWaveletBuilder() {
        return getKnownWaveletFieldBuilder().addBuilder(
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder addKnownWaveletBuilder(
          int index) {
        return getKnownWaveletFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;</code>
       *
       * <pre>
       * Wavelet versions the client already knows.
       * At most one version per wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder> 
           getKnownWaveletBuilderList() {
        return getKnownWaveletFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder> 
          getKnownWaveletFieldBuilder() {
        if (knownWaveletBuilder_ == null) {
          knownWaveletBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder>(
                  knownWavelet_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          knownWavelet_ = null;
        }
        return knownWaveletBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.FetchWaveViewRequest)
    }

    static {
      defaultInstance = new FetchWaveViewRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.FetchWaveViewRequest)
  }

  public interface FetchWaveViewResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .concurrencycontrol.ResponseStatus status = 1;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder();

    // repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> 
        getWaveletList();
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getWavelet(int index);
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    int getWaveletCount();
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder> 
        getWaveletOrBuilderList();
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder getWaveletOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code concurrencycontrol.FetchWaveViewResponse}
   */
  public static final class FetchWaveViewResponse extends
      com.google.protobuf.GeneratedMessage
      implements FetchWaveViewResponseOrBuilder {
    // Use FetchWaveViewResponse.newBuilder() to construct.
    private FetchWaveViewResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FetchWaveViewResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FetchWaveViewResponse defaultInstance;
    public static FetchWaveViewResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FetchWaveViewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FetchWaveViewResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet>();
                mutable_bitField0_ |= 0x00000002;
              }
              wavelet_.add(input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          wavelet_ = java.util.Collections.unmodifiableList(wavelet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FetchWaveViewResponse> PARSER =
        new com.google.protobuf.AbstractParser<FetchWaveViewResponse>() {
      public FetchWaveViewResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FetchWaveViewResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FetchWaveViewResponse> getParserForType() {
      return PARSER;
    }

    public interface WaveletOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string waveletId = 1;
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      boolean hasWaveletId();
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      java.lang.String getWaveletId();
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      com.google.protobuf.ByteString
          getWaveletIdBytes();

      // optional .concurrencycontrol.WaveletSnapshot snapshot = 2;
      /**
       * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      boolean hasSnapshot();
      /**
       * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getSnapshot();
      /**
       * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder getSnapshotOrBuilder();
    }
    /**
     * Protobuf type {@code concurrencycontrol.FetchWaveViewResponse.Wavelet}
     */
    public static final class Wavelet extends
        com.google.protobuf.GeneratedMessage
        implements WaveletOrBuilder {
      // Use Wavelet.newBuilder() to construct.
      private Wavelet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Wavelet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Wavelet defaultInstance;
      public static Wavelet getDefaultInstance() {
        return defaultInstance;
      }

      public Wavelet getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Wavelet(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                waveletId_ = input.readBytes();
                break;
              }
              case 18: {
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = snapshot_.toBuilder();
                }
                snapshot_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(snapshot_);
                  snapshot_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder.class);
      }

      public static com.google.protobuf.Parser<Wavelet> PARSER =
          new com.google.protobuf.AbstractParser<Wavelet>() {
        public Wavelet parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Wavelet(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Wavelet> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string waveletId = 1;
      public static final int WAVELETID_FIELD_NUMBER = 1;
      private java.lang.Object waveletId_;
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            waveletId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * The wavelet in view, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .concurrencycontrol.WaveletSnapshot snapshot = 2;
      public static final int SNAPSHOT_FIELD_NUMBER = 2;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot snapshot_;
      /**
       * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      public boolean hasSnapshot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getSnapshot() {
        return snapshot_;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
       *
       * <pre>
       * Snapshot of the wavelet; omitted if the client already knew it.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder getSnapshotOrBuilder() {
        return snapshot_;
      }

      private void initFields() {
        waveletId_ = "";
        snapshot_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasWaveletId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasSnapshot()) {
          if (!getSnapshot().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getWaveletIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, snapshot_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getWaveletIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, snapshot_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code concurrencycontrol.FetchWaveViewResponse.Wavelet}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder.class);
        }

        // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSnapshotFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          waveletId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (snapshotBuilder_ == null) {
            snapshot_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
          } else {
            snapshotBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor;
        }

        public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getDefaultInstanceForType() {
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDefaultInstance();
        }

        public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet build() {
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet buildPartial() {
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.waveletId_ = waveletId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (snapshotBuilder_ == null) {
            result.snapshot_ = snapshot_;
          } else {
            result.snapshot_ = snapshotBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet) {
            return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet other) {
          if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDefaultInstance()) return this;
          if (other.hasWaveletId()) {
            bitField0_ |= 0x00000001;
            waveletId_ = other.waveletId_;
            onChanged();
          }
          if (other.hasSnapshot()) {
            mergeSnapshot(other.getSnapshot());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasWaveletId()) {
            
            return false;
          }
          if (hasSnapshot()) {
            if (!getSnapshot().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string waveletId = 1;
        private java.lang.Object waveletId_ = "";
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public boolean hasWaveletId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public java.lang.String getWaveletId() {
          java.lang.Object ref = waveletId_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            waveletId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getWaveletIdBytes() {
          java.lang.Object ref = waveletId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            waveletId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public Builder setWaveletId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          waveletId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public Builder clearWaveletId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          waveletId_ = getDefaultInstance().getWaveletId();
          onChanged();
          return this;
        }
        /**
         * <code>required string waveletId = 1;</code>
         *
         * <pre>
         * The wavelet in view, URI path format.
         * </pre>
         */
        public Builder setWaveletIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          waveletId_ = value;
          onChanged();
          return this;
        }

        // optional .concurrencycontrol.WaveletSnapshot snapshot = 2;
        private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot snapshot_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder> snapshotBuilder_;
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public boolean hasSnapshot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getSnapshot() {
          if (snapshotBuilder_ == null) {
            return snapshot_;
          } else {
            return snapshotBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder setSnapshot(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot value) {
          if (snapshotBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            snapshot_ = value;
            onChanged();
          } else {
            snapshotBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder setSnapshot(
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder builderForValue) {
          if (snapshotBuilder_ == null) {
            snapshot_ = builderForValue.build();
            onChanged();
          } else {
            snapshotBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder mergeSnapshot(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot value) {
          if (snapshotBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                snapshot_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance()) {
              snapshot_ =
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.newBuilder(snapshot_).mergeFrom(value).buildPartial();
            } else {
              snapshot_ = value;
            }
            onChanged();
          } else {
            snapshotBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public Builder clearSnapshot() {
          if (snapshotBuilder_ == null) {
            snapshot_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
            onChanged();
          } else {
            snapshotBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder getSnapshotBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getSnapshotFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder getSnapshotOrBuilder() {
          if (snapshotBuilder_ != null) {
            return snapshotBuilder_.getMessageOrBuilder();
          } else {
            return snapshot_;
          }
        }
        /**
         * <code>optional .concurrencycontrol.WaveletSnapshot snapshot = 2;</code>
         *
         * <pre>
         * Snapshot of the wavelet; omitted if the client already knew it.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder> 
            getSnapshotFieldBuilder() {
          if (snapshotBuilder_ == null) {
            snapshotBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder>(
                    snapshot_,
                    getParentForChildren(),
                    isClean());
            snapshot_ = null;
          }
          return snapshotBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:concurrencycontrol.FetchWaveViewResponse.Wavelet)
      }

      static {
        defaultInstance = new Wavelet(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:concurrencycontrol.FetchWaveViewResponse.Wavelet)
    }

    private int bitField0_;
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
      return status_;
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
      return status_;
    }

    // repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;
    public static final int WAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> wavelet_;
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> getWaveletList() {
      return wavelet_;
    }
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder> 
        getWaveletOrBuilderList() {
      return wavelet_;
    }
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    public int getWaveletCount() {
      return wavelet_.size();
    }
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getWavelet(int index) {
      return wavelet_.get(index);
    }
    /**
     * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder getWaveletOrBuilder(
        int index) {
      return wavelet_.get(index);
    }

    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      wavelet_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStatus().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getWaveletCount(); i++) {
        if (!getWavelet(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, status_);
      }
      for (int i = 0; i < wavelet_.size(); i++) {
        output.writeMessage(2, wavelet_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, status_);
      }
      for (int i = 0; i < wavelet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, wavelet_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.FetchWaveViewResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
          getWaveletFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (waveletBuilder_ == null) {
          wavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          waveletBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        if (waveletBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            wavelet_ = java.util.Collections.unmodifiableList(wavelet_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.wavelet_ = wavelet_;
        } else {
          result.wavelet_ = waveletBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (waveletBuilder_ == null) {
          if (!other.wavelet_.isEmpty()) {
            if (wavelet_.isEmpty()) {
              wavelet_ = other.wavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWaveletIsMutable();
              wavelet_.addAll(other.wavelet_);
            }
            onChanged();
          }
        } else {
          if (!other.wavelet_.isEmpty()) {
            if (waveletBuilder_.isEmpty()) {
              waveletBuilder_.dispose();
              waveletBuilder_ = null;
              wavelet_ = other.wavelet_;
              bitField0_ = (bitField0_ & ~0x00000002);
              waveletBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWaveletFieldBuilder() : null;
            } else {
              waveletBuilder_.addAllMessages(other.wavelet_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!getStatus().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getWaveletCount(); i++) {
          if (!getWavelet(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .concurrencycontrol.ResponseStatus status = 1;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> statusBuilder_;
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
            status_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_;
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder>(
                  status_,
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;
      private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> wavelet_ =
        java.util.Collections.emptyList();
      private void ensureWaveletIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet>(wavelet_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder> waveletBuilder_;

      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> getWaveletList() {
        if (waveletBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wavelet_);
        } else {
          return waveletBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public int getWaveletCount() {
        if (waveletBuilder_ == null) {
          return wavelet_.size();
        } else {
          return waveletBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getWavelet(int index) {
        if (waveletBuilder_ == null) {
          return wavelet_.get(index);
        } else {
          return waveletBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder setWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.set(index, value);
          onChanged();
        } else {
          waveletBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder setWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.set(index, builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder addWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.add(value);
          onChanged();
        } else {
          waveletBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder addWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet value) {
        if (waveletBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveletIsMutable();
          wavelet_.add(index, value);
          onChanged();
        } else {
          waveletBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder addWavelet(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.add(builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder addWavelet(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder builderForValue) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.add(index, builderForValue.build());
          onChanged();
        } else {
          waveletBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder addAllWavelet(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> values) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          super.addAll(values, wavelet_);
          onChanged();
        } else {
          waveletBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder clearWavelet() {
        if (waveletBuilder_ == null) {
          wavelet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          waveletBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public Builder removeWavelet(int index) {
        if (waveletBuilder_ == null) {
          ensureWaveletIsMutable();
          wavelet_.remove(index);
          onChanged();
        } else {
          waveletBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder getWaveletBuilder(
          int index) {
        return getWaveletFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder getWaveletOrBuilder(
          int index) {
        if (waveletBuilder_ == null) {
          return wavelet_.get(index);  } else {
          return waveletBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder> 
           getWaveletOrBuilderList() {
        if (waveletBuilder_ != null) {
          return waveletBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wavelet_);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder addWaveletBuilder() {
        return getWaveletFieldBuilder().addBuilder(
            org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder addWaveletBuilder(
          int index) {
        return getWaveletFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;</code>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder> 
           getWaveletBuilderList() {
        return getWaveletFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder> 
          getWaveletFieldBuilder() {
        if (waveletBuilder_ == null) {
          waveletBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.WaveletOrBuilder>(
                  wavelet_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          wavelet_ = null;
        }
        return waveletBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.FetchWaveViewResponse)
    }

    static {
      defaultInstance = new FetchWaveViewResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.FetchWaveViewResponse)
  }

  public interface WaveletVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveletId = 1;
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Known wavelet, URI path format.
     * </pre>
     */
    boolean hasWaveletId();
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Known wavelet, URI path format.
     * </pre>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Known wavelet, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // required .federation.ProtocolHashedVersion version = 2;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 2;</code>
     *
     * <pre>
     * Known hashed version of the wavelet.
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 2;</code>
     *
     * <pre>
     * Known hashed version of the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 2;</code>
     *
     * <pre>
     * Known hashed version of the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder();
  }
  /**
   * Protobuf type {@code concurrencycontrol.WaveletVersion}
   *
   * <pre>
   * A wavelet with a known hashed version of that wavelet. 
   * </pre>
   */
  public static final class WaveletVersion extends
      com.google.protobuf.GeneratedMessage
      implements WaveletVersionOrBuilder {
    // Use WaveletVersion.newBuilder() to construct.
    private WaveletVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletVersion defaultInstance;
    public static WaveletVersion getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletId_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletVersion> PARSER =
        new com.google.protobuf.AbstractParser<WaveletVersion>() {
      public WaveletVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveletId = 1;
    public static final int WAVELETID_FIELD_NUMBER = 1;
    private java.lang.Object waveletId_;
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Known wavelet, URI path format.
     * </pre>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Known wavelet, URI path format.
     * </pre>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Known wavelet, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolHashedVersion version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 2;</code>
     *
     * <pre>
     * Known hashed version of the wavelet.
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 2;</code>
     *
     * <pre>
     * Known hashed version of the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
      return version_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 2;</code>
     *
     * <pre>
     * Known hashed version of the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
      return version_;
    }

    private void initFields() {
      waveletId_ = "";
      version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, version_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.WaveletVersion}
     *
     * <pre>
     * A wavelet with a known hashed version of that wavelet. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletId_ = waveletId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000001;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!getVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveletId = 1;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Known wavelet, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Known wavelet, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Known wavelet, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Known wavelet, URI path format.
       * </pre>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Known wavelet, URI path format.
       * </pre>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Known wavelet, URI path format.
       * </pre>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolHashedVersion version = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> versionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
        if (versionBuilder_ == null) {
          return version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public Builder setVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public Builder mergeVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              version_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            version_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getVersionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 2;</code>
       *
       * <pre>
       * Known hashed version of the wavelet.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletVersion)
    }

    static {
      defaultInstance = new WaveletVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletVersion)
  }

  public interface WaveletSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveletId = 1;
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    boolean hasWaveletId();
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // repeated string participant = 2;
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    java.util.List<java.lang.String>
    getParticipantList();
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    int getParticipantCount();
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    java.lang.String getParticipant(int index);
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    com.google.protobuf.ByteString
        getParticipantBytes(int index);

    // repeated .concurrencycontrol.DocumentSnapshot document = 3;
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> 
        getDocumentList();
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDocument(int index);
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    int getDocumentCount();
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder> 
        getDocumentOrBuilderList();
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder getDocumentOrBuilder(
        int index);

    // required .federation.ProtocolHashedVersion version = 4;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder();

    // required int64 lastModifiedTime = 5;
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    boolean hasLastModifiedTime();
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    long getLastModifiedTime();

    // required string creator = 6;
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    boolean hasCreator();
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    java.lang.String getCreator();
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    // required int64 creationTime = 7;
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    boolean hasCreationTime();
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    long getCreationTime();
  }
  /**
   * Protobuf type {@code concurrencycontrol.WaveletSnapshot}
   *
   * <pre>
   * A wavelet and associated metadata. 
   * </pre>
   */
  public static final class WaveletSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements WaveletSnapshotOrBuilder {
    // Use WaveletSnapshot.newBuilder() to construct.
    private WaveletSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletSnapshot defaultInstance;
    public static WaveletSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveletId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                participant_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              participant_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                document_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot>();
                mutable_bitField0_ |= 0x00000004;
              }
              document_.add(input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              lastModifiedTime_ = input.readInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              creator_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              creationTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          participant_ = new com.google.protobuf.UnmodifiableLazyStringList(participant_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          document_ = java.util.Collections.unmodifiableList(document_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<WaveletSnapshot>() {
      public WaveletSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveletId = 1;
    public static final int WAVELETID_FIELD_NUMBER = 1;
    private java.lang.Object waveletId_;
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveletId = 1;</code>
     *
     * <pre>
     * Wavelet's id, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string participant = 2;
    public static final int PARTICIPANT_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList participant_;
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getParticipantList() {
      return participant_;
    }
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public int getParticipantCount() {
      return participant_.size();
    }
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public java.lang.String getParticipant(int index) {
      return participant_.get(index);
    }
    /**
     * <code>repeated string participant = 2;</code>
     *
     * <pre>
     * Participants of this wavelet.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParticipantBytes(int index) {
      return participant_.getByteString(index);
    }

    // repeated .concurrencycontrol.DocumentSnapshot document = 3;
    public static final int DOCUMENT_FIELD_NUMBER = 3;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> document_;
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> getDocumentList() {
      return document_;
    }
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder> 
        getDocumentOrBuilderList() {
      return document_;
    }
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public int getDocumentCount() {
      return document_.size();
    }
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDocument(int index) {
      return document_.get(index);
    }
    /**
     * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
     *
     * <pre>
     * Snapshots of all the documents in the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder getDocumentOrBuilder(
        int index) {
      return document_.get(index);
    }

    // required .federation.ProtocolHashedVersion version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_;
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
      return version_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion version = 4;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Current version and modification timestamp of the wavelet.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
      return version_;
    }

    // required int64 lastModifiedTime = 5;
    public static final int LASTMODIFIEDTIME_FIELD_NUMBER = 5;
    private long lastModifiedTime_;
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    public boolean hasLastModifiedTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 lastModifiedTime = 5;</code>
     */
    public long getLastModifiedTime() {
      return lastModifiedTime_;
    }

    // required string creator = 6;
    public static final int CREATOR_FIELD_NUMBER = 6;
    private java.lang.Object creator_;
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    public boolean hasCreator() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          creator_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string creator = 6;</code>
     *
     * <pre>
     * Participant and time of creation for the wavelet.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 creationTime = 7;
    public static final int CREATIONTIME_FIELD_NUMBER = 7;
    private long creationTime_;
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    public boolean hasCreationTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 creationTime = 7;</code>
     */
    public long getCreationTime() {
      return creationTime_;
    }

    private void initFields() {
      waveletId_ = "";
      participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      document_ = java.util.Collections.emptyList();
      version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      lastModifiedTime_ = 0L;
      creator_ = "";
      creationTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreator()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreationTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDocumentCount(); i++) {
        if (!getDocument(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveletIdBytes());
      }
      for (int i = 0; i < participant_.size(); i++) {
        output.writeBytes(2, participant_.getByteString(i));
      }
      for (int i = 0; i < document_.size(); i++) {
        output.writeMessage(3, document_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(7, creationTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveletIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < participant_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(participant_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getParticipantList().size();
      }
      for (int i = 0; i < document_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, document_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastModifiedTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, creationTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.WaveletSnapshot}
     *
     * <pre>
     * A wavelet and associated metadata. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDocumentFieldBuilder();
          getVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (documentBuilder_ == null) {
          document_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          documentBuilder_.clear();
        }
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        lastModifiedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        creator_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        creationTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveletId_ = waveletId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          participant_ = new com.google.protobuf.UnmodifiableLazyStringList(
              participant_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.participant_ = participant_;
        if (documentBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            document_ = java.util.Collections.unmodifiableList(document_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.document_ = document_;
        } else {
          result.document_ = documentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastModifiedTime_ = lastModifiedTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.creator_ = creator_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.creationTime_ = creationTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000001;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (!other.participant_.isEmpty()) {
          if (participant_.isEmpty()) {
            participant_ = other.participant_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParticipantIsMutable();
            participant_.addAll(other.participant_);
          }
          onChanged();
        }
        if (documentBuilder_ == null) {
          if (!other.document_.isEmpty()) {
            if (document_.isEmpty()) {
              document_ = other.document_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDocumentIsMutable();
              document_.addAll(other.document_);
            }
            onChanged();
          }
        } else {
          if (!other.document_.isEmpty()) {
            if (documentBuilder_.isEmpty()) {
              documentBuilder_.dispose();
              documentBuilder_ = null;
              document_ = other.document_;
              bitField0_ = (bitField0_ & ~0x00000004);
              documentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDocumentFieldBuilder() : null;
            } else {
              documentBuilder_.addAllMessages(other.document_);
            }
          }
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        if (other.hasCreator()) {
          bitField0_ |= 0x00000020;
          creator_ = other.creator_;
          onChanged();
        }
        if (other.hasCreationTime()) {
          setCreationTime(other.getCreationTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasLastModifiedTime()) {
          
          return false;
        }
        if (!hasCreator()) {
          
          return false;
        }
        if (!hasCreationTime()) {
          
          return false;
        }
        for (int i = 0; i < getDocumentCount(); i++) {
          if (!getDocument(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveletId = 1;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 1;</code>
       *
       * <pre>
       * Wavelet's id, URI path format.
       * </pre>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // repeated string participant = 2;
      private com.google.protobuf.LazyStringList participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureParticipantIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          participant_ = new com.google.protobuf.LazyStringArrayList(participant_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getParticipantList() {
        return java.util.Collections.unmodifiableList(participant_);
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public int getParticipantCount() {
        return participant_.size();
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public java.lang.String getParticipant(int index) {
        return participant_.get(index);
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParticipantBytes(int index) {
        return participant_.getByteString(index);
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder setParticipant(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIsMutable();
        participant_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder addParticipant(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIsMutable();
        participant_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder addAllParticipant(
          java.lang.Iterable<java.lang.String> values) {
        ensureParticipantIsMutable();
        super.addAll(values, participant_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder clearParticipant() {
        participant_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string participant = 2;</code>
       *
       * <pre>
       * Participants of this wavelet.
       * </pre>
       */
      public Builder addParticipantBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantIsMutable();
        participant_.add(value);
        onChanged();
        return this;
      }

      // repeated .concurrencycontrol.DocumentSnapshot document = 3;
      private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> document_ =
        java.util.Collections.emptyList();
      private void ensureDocumentIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          document_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot>(document_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder> documentBuilder_;

      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> getDocumentList() {
        if (documentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(document_);
        } else {
          return documentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public int getDocumentCount() {
        if (documentBuilder_ == null) {
          return document_.size();
        } else {
          return documentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDocument(int index) {
        if (documentBuilder_ == null) {
          return document_.get(index);
        } else {
          return documentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder setDocument(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.set(index, value);
          onChanged();
        } else {
          documentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder setDocument(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.set(index, builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.add(value);
          onChanged();
        } else {
          documentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot value) {
        if (documentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentIsMutable();
          document_.add(index, value);
          onChanged();
        } else {
          documentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.add(builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addDocument(
          int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder builderForValue) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.add(index, builderForValue.build());
          onChanged();
        } else {
          documentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder addAllDocument(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> values) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          super.addAll(values, document_);
          onChanged();
        } else {
          documentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder clearDocument() {
        if (documentBuilder_ == null) {
          document_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          documentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public Builder removeDocument(int index) {
        if (documentBuilder_ == null) {
          ensureDocumentIsMutable();
          document_.remove(index);
          onChanged();
        } else {
          documentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder getDocumentBuilder(
          int index) {
        return getDocumentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder getDocumentOrBuilder(
          int index) {
        if (documentBuilder_ == null) {
          return document_.get(index);  } else {
          return documentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder> 
           getDocumentOrBuilderList() {
        if (documentBuilder_ != null) {
          return documentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(document_);
        }
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder addDocumentBuilder() {
        return getDocumentFieldBuilder().addBuilder(
            org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder addDocumentBuilder(
          int index) {
        return getDocumentFieldBuilder().addBuilder(
            index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDefaultInstance());
      }
      /**
       * <code>repeated .concurrencycontrol.DocumentSnapshot document = 3;</code>
       *
       * <pre>
       * Snapshots of all the documents in the wavelet.
       * </pre>
       */
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder> 
           getDocumentBuilderList() {
        return getDocumentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder> 
          getDocumentFieldBuilder() {
        if (documentBuilder_ == null) {
          documentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder>(
                  document_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        return documentBuilder_;
      }

      // required .federation.ProtocolHashedVersion version = 4;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> versionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
        if (versionBuilder_ == null) {
          return version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder setVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder mergeVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              version_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            version_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getVersionBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion version = 4;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Current version and modification timestamp of the wavelet.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // required int64 lastModifiedTime = 5;
      private long lastModifiedTime_ ;
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public boolean hasLastModifiedTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public long getLastModifiedTime() {
        return lastModifiedTime_;
      }
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public Builder setLastModifiedTime(long value) {
        bitField0_ |= 0x00000010;
        lastModifiedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastModifiedTime = 5;</code>
       */
      public Builder clearLastModifiedTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastModifiedTime_ = 0L;
        onChanged();
        return this;
      }

      // required string creator = 6;
      private java.lang.Object creator_ = "";
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public boolean hasCreator() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        creator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public Builder clearCreator() {
        bitField0_ = (bitField0_ & ~0x00000020);
        creator_ = getDefaultInstance().getCreator();
        onChanged();
        return this;
      }
      /**
       * <code>required string creator = 6;</code>
       *
       * <pre>
       * Participant and time of creation for the wavelet.
       * </pre>
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        creator_ = value;
        onChanged();
        return this;
      }

      // required int64 creationTime = 7;
      private long creationTime_ ;
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public boolean hasCreationTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public long getCreationTime() {
        return creationTime_;
      }
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public Builder setCreationTime(long value) {
        bitField0_ |= 0x00000040;
        creationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 creationTime = 7;</code>
       */
      public Builder clearCreationTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        creationTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletSnapshot)
    }

    static {
      defaultInstance = new WaveletSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletSnapshot)
  }

  public interface DocumentSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string documentId = 1;
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    boolean hasDocumentId();
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    java.lang.String getDocumentId();
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDocumentIdBytes();

    // required .federation.ProtocolDocumentOperation documentOperation = 2;
    /**
     * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the document state.
     * </pre>
     */
    boolean hasDocumentOperation();
    /**
     * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the document state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation();
    /**
     * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the document state.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDocumentOperationOrBuilder();

    // required string author = 3;
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    boolean hasAuthor();
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    java.lang.String getAuthor();
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getAuthorBytes();

    // repeated string contributor = 4;
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    java.util.List<java.lang.String>
    getContributorList();
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    int getContributorCount();
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    java.lang.String getContributor(int index);
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    com.google.protobuf.ByteString
        getContributorBytes(int index);

    // required int64 lastModifiedVersion = 5;
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    boolean hasLastModifiedVersion();
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    long getLastModifiedVersion();

    // required int64 lastModifiedTime = 6;
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    boolean hasLastModifiedTime();
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    long getLastModifiedTime();
  }
  /**
   * Protobuf type {@code concurrencycontrol.DocumentSnapshot}
   *
   * <pre>
   * A document and associated metadata. 
   * </pre>
   */
  public static final class DocumentSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements DocumentSnapshotOrBuilder {
    // Use DocumentSnapshot.newBuilder() to construct.
    private DocumentSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DocumentSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DocumentSnapshot defaultInstance;
    public static DocumentSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public DocumentSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DocumentSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              documentId_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = documentOperation_.toBuilder();
              }
              documentOperation_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(documentOperation_);
                documentOperation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              author_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                contributor_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              contributor_.add(input.readBytes());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              lastModifiedVersion_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              lastModifiedTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          contributor_ = new com.google.protobuf.UnmodifiableLazyStringList(contributor_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<DocumentSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<DocumentSnapshot>() {
      public DocumentSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DocumentSnapshot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string documentId = 1;
    public static final int DOCUMENTID_FIELD_NUMBER = 1;
    private java.lang.Object documentId_;
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    public boolean hasDocumentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    public java.lang.String getDocumentId() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          documentId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string documentId = 1;</code>
     *
     * <pre>
     * Id of the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDocumentIdBytes() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        documentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolDocumentOperation documentOperation = 2;
    public static final int DOCUMENTOPERATION_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation documentOperation_;
    /**
     * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the document state.
     * </pre>
     */
    public boolean hasDocumentOperation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the document state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation() {
      return documentOperation_;
    }
    /**
     * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
     *
     * <pre>
     * Operation that transforms an empty document the document state.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDocumentOperationOrBuilder() {
      return documentOperation_;
    }

    // required string author = 3;
    public static final int AUTHOR_FIELD_NUMBER = 3;
    private java.lang.Object author_;
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    public boolean hasAuthor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    public java.lang.String getAuthor() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          author_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string author = 3;</code>
     *
     * <pre>
     *&#47;/ Metadata ////
     * Participant who submitted the first operation to the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAuthorBytes() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        author_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string contributor = 4;
    public static final int CONTRIBUTOR_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList contributor_;
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getContributorList() {
      return contributor_;
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public int getContributorCount() {
      return contributor_.size();
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public java.lang.String getContributor(int index) {
      return contributor_.get(index);
    }
    /**
     * <code>repeated string contributor = 4;</code>
     *
     * <pre>
     * All participants who have submitted operations to the document.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContributorBytes(int index) {
      return contributor_.getByteString(index);
    }

    // required int64 lastModifiedVersion = 5;
    public static final int LASTMODIFIEDVERSION_FIELD_NUMBER = 5;
    private long lastModifiedVersion_;
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    public boolean hasLastModifiedVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 lastModifiedVersion = 5;</code>
     *
     * <pre>
     * Wavelet version and timestamp when the document was last modified.
     * </pre>
     */
    public long getLastModifiedVersion() {
      return lastModifiedVersion_;
    }

    // required int64 lastModifiedTime = 6;
    public static final int LASTMODIFIEDTIME_FIELD_NUMBER = 6;
    private long lastModifiedTime_;
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    public boolean hasLastModifiedTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 lastModifiedTime = 6;</code>
     */
    public long getLastModifiedTime() {
      return lastModifiedTime_;
    }

    private void initFields() {
      documentId_ = "";
      documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      author_ = "";
      contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      lastModifiedVersion_ = 0L;
      lastModifiedTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDocumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDocumentOperation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAuthor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastModifiedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDocumentOperation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDocumentIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, documentOperation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAuthorBytes());
      }
      for (int i = 0; i < contributor_.size(); i++) {
        output.writeBytes(4, contributor_.getByteString(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, lastModifiedVersion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, lastModifiedTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDocumentIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, documentOperation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAuthorBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < contributor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(contributor_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getContributorList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastModifiedVersion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, lastModifiedTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.DocumentSnapshot}
     *
     * <pre>
     * A document and associated metadata. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDocumentOperationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        documentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (documentOperationBuilder_ == null) {
          documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
        } else {
          documentOperationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        author_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        lastModifiedVersion_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        lastModifiedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.documentId_ = documentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (documentOperationBuilder_ == null) {
          result.documentOperation_ = documentOperation_;
        } else {
          result.documentOperation_ = documentOperationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.author_ = author_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          contributor_ = new com.google.protobuf.UnmodifiableLazyStringList(
              contributor_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.contributor_ = contributor_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastModifiedVersion_ = lastModifiedVersion_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastModifiedTime_ = lastModifiedTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDefaultInstance()) return this;
        if (other.hasDocumentId()) {
          bitField0_ |= 0x00000001;
          documentId_ = other.documentId_;
          onChanged();
        }
        if (other.hasDocumentOperation()) {
          mergeDocumentOperation(other.getDocumentOperation());
        }
        if (other.hasAuthor()) {
          bitField0_ |= 0x00000004;
          author_ = other.author_;
          onChanged();
        }
        if (!other.contributor_.isEmpty()) {
          if (contributor_.isEmpty()) {
            contributor_ = other.contributor_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureContributorIsMutable();
            contributor_.addAll(other.contributor_);
          }
          onChanged();
        }
        if (other.hasLastModifiedVersion()) {
          setLastModifiedVersion(other.getLastModifiedVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDocumentId()) {
          
          return false;
        }
        if (!hasDocumentOperation()) {
          
          return false;
        }
        if (!hasAuthor()) {
          
          return false;
        }
        if (!hasLastModifiedVersion()) {
          
          return false;
        }
        if (!hasLastModifiedTime()) {
          
          return false;
        }
        if (!getDocumentOperation().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string documentId = 1;
      private java.lang.Object documentId_ = "";
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public boolean hasDocumentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public java.lang.String getDocumentId() {
        java.lang.Object ref = documentId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          documentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDocumentIdBytes() {
        java.lang.Object ref = documentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          documentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public Builder setDocumentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public Builder clearDocumentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        documentId_ = getDefaultInstance().getDocumentId();
        onChanged();
        return this;
      }
      /**
       * <code>required string documentId = 1;</code>
       *
       * <pre>
       * Id of the document.
       * </pre>
       */
      public Builder setDocumentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolDocumentOperation documentOperation = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> documentOperationBuilder_;
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public boolean hasDocumentOperation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation() {
        if (documentOperationBuilder_ == null) {
          return documentOperation_;
        } else {
          return documentOperationBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public Builder setDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (documentOperationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          documentOperation_ = value;
          onChanged();
        } else {
          documentOperationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public Builder setDocumentOperation(
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder builderForValue) {
        if (documentOperationBuilder_ == null) {
          documentOperation_ = builderForValue.build();
          onChanged();
        } else {
          documentOperationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public Builder mergeDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (documentOperationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              documentOperation_ != org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance()) {
            documentOperation_ =
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.newBuilder(documentOperation_).mergeFrom(value).buildPartial();
          } else {
            documentOperation_ = value;
          }
          onChanged();
        } else {
          documentOperationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public Builder clearDocumentOperation() {
        if (documentOperationBuilder_ == null) {
          documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
          onChanged();
        } else {
          documentOperationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder getDocumentOperationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDocumentOperationFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder getDocumentOperationOrBuilder() {
        if (documentOperationBuilder_ != null) {
          return documentOperationBuilder_.getMessageOrBuilder();
        } else {
          return documentOperation_;
        }
      }
      /**
       * <code>required .federation.ProtocolDocumentOperation documentOperation = 2;</code>
       *
       * <pre>
       * Operation that transforms an empty document the document state.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder> 
          getDocumentOperationFieldBuilder() {
        if (documentOperationBuilder_ == null) {
          documentOperationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder, org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperationOrBuilder>(
                  documentOperation_,
                  getParentForChildren(),
                  isClean());
          documentOperation_ = null;
        }
        return documentOperationBuilder_;
      }

      // required string author = 3;
      private java.lang.Object author_ = "";
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public boolean hasAuthor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public java.lang.String getAuthor() {
        java.lang.Object ref = author_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          author_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAuthorBytes() {
        java.lang.Object ref = author_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          author_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public Builder setAuthor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        author_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public Builder clearAuthor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        author_ = getDefaultInstance().getAuthor();
        onChanged();
        return this;
      }
      /**
       * <code>required string author = 3;</code>
       *
       * <pre>
       *&#47;/ Metadata ////
       * Participant who submitted the first operation to the document.
       * </pre>
       */
      public Builder setAuthorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        author_ = value;
        onChanged();
        return this;
      }

      // repeated string contributor = 4;
      private com.google.protobuf.LazyStringList contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureContributorIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          contributor_ = new com.google.protobuf.LazyStringArrayList(contributor_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getContributorList() {
        return java.util.Collections.unmodifiableList(contributor_);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public int getContributorCount() {
        return contributor_.size();
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public java.lang.String getContributor(int index) {
        return contributor_.get(index);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContributorBytes(int index) {
        return contributor_.getByteString(index);
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder setContributor(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addContributor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addAllContributor(
          java.lang.Iterable<java.lang.String> values) {
        ensureContributorIsMutable();
        super.addAll(values, contributor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder clearContributor() {
        contributor_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string contributor = 4;</code>
       *
       * <pre>
       * All participants who have submitted operations to the document.
       * </pre>
       */
      public Builder addContributorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureContributorIsMutable();
        contributor_.add(value);
        onChanged();
        return this;
      }

      // required int64 lastModifiedVersion = 5;
      private long lastModifiedVersion_ ;
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public boolean hasLastModifiedVersion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public long getLastModifiedVersion() {
        return lastModifiedVersion_;
      }
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public Builder setLastModifiedVersion(long value) {
        bitField0_ |= 0x00000010;
        lastModifiedVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastModifiedVersion = 5;</code>
       *
       * <pre>
       * Wavelet version and timestamp when the document was last modified.
       * </pre>
       */
      public Builder clearLastModifiedVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastModifiedVersion_ = 0L;
        onChanged();
        return this;
      }

      // required int64 lastModifiedTime = 6;
      private long lastModifiedTime_ ;
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public boolean hasLastModifiedTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public long getLastModifiedTime() {
        return lastModifiedTime_;
      }
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public Builder setLastModifiedTime(long value) {
        bitField0_ |= 0x00000020;
        lastModifiedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastModifiedTime = 6;</code>
       */
      public Builder clearLastModifiedTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lastModifiedTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.DocumentSnapshot)
    }

    static {
      defaultInstance = new DocumentSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.DocumentSnapshot)
  }

  public interface OpenWaveletChannelRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveId = 1;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave id, URI path format.
     * </pre>
     */
    boolean hasWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave id, URI path format.
     * </pre>
     */
    java.lang.String getWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave id, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveIdBytes();

    // required string waveletId = 2;
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet id, URI path format.
     * </pre>
     */
    boolean hasWaveletId();
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet id, URI path format.
     * </pre>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet id, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // required .federation.ProtocolHashedVersion beginVersion = 3;
    /**
     * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
     *
     * <pre>
     * Application version of first delta to return.
     * </pre>
     */
    boolean hasBeginVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
     *
     * <pre>
     * Application version of first delta to return.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getBeginVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
     *
     * <pre>
     * Application version of first delta to return.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getBeginVersionOrBuilder();
  }
  /**
   * Protobuf type {@code concurrencycontrol.OpenWaveletChannelRequest}
   */
  public static final class OpenWaveletChannelRequest extends
      com.google.protobuf.GeneratedMessage
      implements OpenWaveletChannelRequestOrBuilder {
    // Use OpenWaveletChannelRequest.newBuilder() to construct.
    private OpenWaveletChannelRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenWaveletChannelRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenWaveletChannelRequest defaultInstance;
    public static OpenWaveletChannelRequest getDefaultInstance() {
      return defaultInstance;
    }

    public OpenWaveletChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenWaveletChannelRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              waveletId_ = input.readBytes();
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = beginVersion_.toBuilder();
              }
              beginVersion_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(beginVersion_);
                beginVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenWaveletChannelRequest> PARSER =
        new com.google.protobuf.AbstractParser<OpenWaveletChannelRequest>() {
      public OpenWaveletChannelRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenWaveletChannelRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenWaveletChannelRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private java.lang.Object waveId_;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave id, URI path format.
     * </pre>
     */
    public boolean hasWaveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave id, URI path format.
     * </pre>
     */
    public java.lang.String getWaveId() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave id, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveIdBytes() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string waveletId = 2;
    public static final int WAVELETID_FIELD_NUMBER = 2;
    private java.lang.Object waveletId_;
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet id, URI path format.
     * </pre>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet id, URI path format.
     * </pre>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet id, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolHashedVersion beginVersion = 3;
    public static final int BEGINVERSION_FIELD_NUMBER = 3;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion beginVersion_;
    /**
     * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
     *
     * <pre>
     * Application version of first delta to return.
     * </pre>
     */
    public boolean hasBeginVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
     *
     * <pre>
     * Application version of first delta to return.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getBeginVersion() {
      return beginVersion_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
     *
     * <pre>
     * Application version of first delta to return.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getBeginVersionOrBuilder() {
      return beginVersion_;
    }

    private void initFields() {
      waveId_ = "";
      waveletId_ = "";
      beginVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBeginVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBeginVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, beginVersion_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, beginVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.OpenWaveletChannelRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBeginVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (beginVersionBuilder_ == null) {
          beginVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          beginVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveId_ = waveId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.waveletId_ = waveletId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (beginVersionBuilder_ == null) {
          result.beginVersion_ = beginVersion_;
        } else {
          result.beginVersion_ = beginVersionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          bitField0_ |= 0x00000001;
          waveId_ = other.waveId_;
          onChanged();
        }
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000002;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (other.hasBeginVersion()) {
          mergeBeginVersion(other.getBeginVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveId()) {
          
          return false;
        }
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasBeginVersion()) {
          
          return false;
        }
        if (!getBeginVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveId = 1;
      private java.lang.Object waveId_ = "";
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave id, URI path format.
       * </pre>
       */
      public boolean hasWaveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave id, URI path format.
       * </pre>
       */
      public java.lang.String getWaveId() {
        java.lang.Object ref = waveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave id, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveIdBytes() {
        java.lang.Object ref = waveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave id, URI path format.
       * </pre>
       */
      public Builder setWaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave id, URI path format.
       * </pre>
       */
      public Builder clearWaveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveId_ = getDefaultInstance().getWaveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave id, URI path format.
       * </pre>
       */
      public Builder setWaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }

      // required string waveletId = 2;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet id, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet id, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet id, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet id, URI path format.
       * </pre>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet id, URI path format.
       * </pre>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet id, URI path format.
       * </pre>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolHashedVersion beginVersion = 3;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion beginVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> beginVersionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public boolean hasBeginVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getBeginVersion() {
        if (beginVersionBuilder_ == null) {
          return beginVersion_;
        } else {
          return beginVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public Builder setBeginVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (beginVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          beginVersion_ = value;
          onChanged();
        } else {
          beginVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public Builder setBeginVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (beginVersionBuilder_ == null) {
          beginVersion_ = builderForValue.build();
          onChanged();
        } else {
          beginVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public Builder mergeBeginVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (beginVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              beginVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            beginVersion_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(beginVersion_).mergeFrom(value).buildPartial();
          } else {
            beginVersion_ = value;
          }
          onChanged();
        } else {
          beginVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public Builder clearBeginVersion() {
        if (beginVersionBuilder_ == null) {
          beginVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          beginVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getBeginVersionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getBeginVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getBeginVersionOrBuilder() {
        if (beginVersionBuilder_ != null) {
          return beginVersionBuilder_.getMessageOrBuilder();
        } else {
          return beginVersion_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion beginVersion = 3;</code>
       *
       * <pre>
       * Application version of first delta to return.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getBeginVersionFieldBuilder() {
        if (beginVersionBuilder_ == null) {
          beginVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  beginVersion_,
                  getParentForChildren(),
                  isClean());
          beginVersion_ = null;
        }
        return beginVersionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.OpenWaveletChannelRequest)
    }

    static {
      defaultInstance = new OpenWaveletChannelRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.OpenWaveletChannelRequest)
  }

  public interface OpenWaveletChannelStreamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string channelId = 1;
    /**
     * <code>optional string channelId = 1;</code>
     *
     * <pre>
     * Identifies the channel, provided only in the first message.
     * </pre>
     */
    boolean hasChannelId();
    /**
     * <code>optional string channelId = 1;</code>
     *
     * <pre>
     * Identifies the channel, provided only in the first message.
     * </pre>
     */
    java.lang.String getChannelId();
    /**
     * <code>optional string channelId = 1;</code>
     *
     * <pre>
     * Identifies the channel, provided only in the first message.
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();

    // optional .concurrencycontrol.WaveletUpdate delta = 2;
    /**
     * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
     *
     * <pre>
     * Second and subsequent messages contain either or both a delta
     * and commitVersion.
     * </pre>
     */
    boolean hasDelta();
    /**
     * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
     *
     * <pre>
     * Second and subsequent messages contain either or both a delta
     * and commitVersion.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDelta();
    /**
     * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
     *
     * <pre>
     * Second and subsequent messages contain either or both a delta
     * and commitVersion.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder getDeltaOrBuilder();

    // optional .federation.ProtocolHashedVersion commitVersion = 3;
    /**
     * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
     */
    boolean hasCommitVersion();
    /**
     * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitVersion();
    /**
     * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getCommitVersionOrBuilder();

    // optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;
    /**
     * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
     *
     * <pre>
     * Last message contains only a terminator.
     * </pre>
     */
    boolean hasTerminator();
    /**
     * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
     *
     * <pre>
     * Last message contains only a terminator.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getTerminator();
    /**
     * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
     *
     * <pre>
     * Last message contains only a terminator.
     * </pre>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder getTerminatorOrBuilder();
  }
  /**
   * Protobuf type {@code concurrencycontrol.OpenWaveletChannelStream}
   *
   * <pre>
   ** Repeated message for a wavelet channel. 
   * </pre>
   */
  public static final class OpenWaveletChannelStream extends
      com.google.protobuf.GeneratedMessage
      implements OpenWaveletChannelStreamOrBuilder {
    // Use OpenWaveletChannelStream.newBuilder() to construct.
    private OpenWaveletChannelStream(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenWaveletChannelStream(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenWaveletChannelStream defaultInstance;
    public static OpenWaveletChannelStream getDefaultInstance() {
      return defaultInstance;
    }

    public OpenWaveletChannelStream getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenWaveletChannelStream(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              channelId_ = input.readBytes();
              break;
            }
            case 18: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = delta_.toBuilder();
              }
              delta_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(delta_);
                delta_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = commitVersion_.toBuilder();
              }
              commitVersion_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(commitVersion_);
                commitVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = terminator_.toBuilder();
              }
              terminator_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(terminator_);
                terminator_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenWaveletChannelStream> PARSER =
        new com.google.protobuf.AbstractParser<OpenWaveletChannelStream>() {
      public OpenWaveletChannelStream parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenWaveletChannelStream(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenWaveletChannelStream> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string channelId = 1;
    public static final int CHANNELID_FIELD_NUMBER = 1;
    private java.lang.Object channelId_;
    /**
     * <code>optional string channelId = 1;</code>
     *
     * <pre>
     * Identifies the channel, provided only in the first message.
     * </pre>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string channelId = 1;</code>
     *
     * <pre>
     * Identifies the channel, provided only in the first message.
     * </pre>
     */
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channelId = 1;</code>
     *
     * <pre>
     * Identifies the channel, provided only in the first message.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .concurrencycontrol.WaveletUpdate delta = 2;
    public static final int DELTA_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate delta_;
    /**
     * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
     *
     * <pre>
     * Second and subsequent messages contain either or both a delta
     * and commitVersion.
     * </pre>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
     *
     * <pre>
     * Second and subsequent messages contain either or both a delta
     * and commitVersion.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDelta() {
      return delta_;
    }
    /**
     * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
     *
     * <pre>
     * Second and subsequent messages contain either or both a delta
     * and commitVersion.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder getDeltaOrBuilder() {
      return delta_;
    }

    // optional .federation.ProtocolHashedVersion commitVersion = 3;
    public static final int COMMITVERSION_FIELD_NUMBER = 3;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion commitVersion_;
    /**
     * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
     */
    public boolean hasCommitVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitVersion() {
      return commitVersion_;
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getCommitVersionOrBuilder() {
      return commitVersion_;
    }

    // optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;
    public static final int TERMINATOR_FIELD_NUMBER = 4;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator terminator_;
    /**
     * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
     *
     * <pre>
     * Last message contains only a terminator.
     * </pre>
     */
    public boolean hasTerminator() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
     *
     * <pre>
     * Last message contains only a terminator.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getTerminator() {
      return terminator_;
    }
    /**
     * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
     *
     * <pre>
     * Last message contains only a terminator.
     * </pre>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder getTerminatorOrBuilder() {
      return terminator_;
    }

    private void initFields() {
      channelId_ = "";
      delta_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
      commitVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      terminator_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasDelta()) {
        if (!getDelta().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCommitVersion()) {
        if (!getCommitVersion().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTerminator()) {
        if (!getTerminator().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChannelIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, delta_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, commitVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, terminator_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChannelIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, delta_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, commitVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, terminator_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.OpenWaveletChannelStream}
     *
     * <pre>
     ** Repeated message for a wavelet channel. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStreamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeltaFieldBuilder();
          getCommitVersionFieldBuilder();
          getTerminatorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        channelId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (commitVersionBuilder_ == null) {
          commitVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          commitVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (terminatorBuilder_ == null) {
          terminator_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
        } else {
          terminatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.channelId_ = channelId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (deltaBuilder_ == null) {
          result.delta_ = delta_;
        } else {
          result.delta_ = deltaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (commitVersionBuilder_ == null) {
          result.commitVersion_ = commitVersion_;
        } else {
          result.commitVersion_ = commitVersionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (terminatorBuilder_ == null) {
          result.terminator_ = terminator_;
        } else {
          result.terminator_ = terminatorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          bitField0_ |= 0x00000001;
          channelId_ = other.channelId_;
          onChanged();
        }
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasCommitVersion()) {
          mergeCommitVersion(other.getCommitVersion());
        }
        if (other.hasTerminator()) {
          mergeTerminator(other.getTerminator());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasDelta()) {
          if (!getDelta().isInitialized()) {
            
            return false;
          }
        }
        if (hasCommitVersion()) {
          if (!getCommitVersion().isInitialized()) {
            
            return false;
          }
        }
        if (hasTerminator()) {
          if (!getTerminator().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string channelId = 1;
      private java.lang.Object channelId_ = "";
      /**
       * <code>optional string channelId = 1;</code>
       *
       * <pre>
       * Identifies the channel, provided only in the first message.
       * </pre>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string channelId = 1;</code>
       *
       * <pre>
       * Identifies the channel, provided only in the first message.
       * </pre>
       */
      public java.lang.String getChannelId() {
        java.lang.Object ref = channelId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channelId = 1;</code>
       *
       * <pre>
       * Identifies the channel, provided only in the first message.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        java.lang.Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channelId = 1;</code>
       *
       * <pre>
       * Identifies the channel, provided only in the first message.
       * </pre>
       */
      public Builder setChannelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelId = 1;</code>
       *
       * <pre>
       * Identifies the channel, provided only in the first message.
       * </pre>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = getDefaultInstance().getChannelId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelId = 1;</code>
       *
       * <pre>
       * Identifies the channel, provided only in the first message.
       * </pre>
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }

      // optional .concurrencycontrol.WaveletUpdate delta = 2;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate delta_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder> deltaBuilder_;
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDelta() {
        if (deltaBuilder_ == null) {
          return delta_;
        } else {
          return deltaBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public Builder setDelta(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate value) {
        if (deltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          delta_ = value;
          onChanged();
        } else {
          deltaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public Builder setDelta(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder builderForValue) {
        if (deltaBuilder_ == null) {
          delta_ = builderForValue.build();
          onChanged();
        } else {
          deltaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public Builder mergeDelta(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate value) {
        if (deltaBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              delta_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance()) {
            delta_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.newBuilder(delta_).mergeFrom(value).buildPartial();
          } else {
            delta_ = value;
          }
          onChanged();
        } else {
          deltaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public Builder clearDelta() {
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
          onChanged();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder getDeltaBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDeltaFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder getDeltaOrBuilder() {
        if (deltaBuilder_ != null) {
          return deltaBuilder_.getMessageOrBuilder();
        } else {
          return delta_;
        }
      }
      /**
       * <code>optional .concurrencycontrol.WaveletUpdate delta = 2;</code>
       *
       * <pre>
       * Second and subsequent messages contain either or both a delta
       * and commitVersion.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder> 
          getDeltaFieldBuilder() {
        if (deltaBuilder_ == null) {
          deltaBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder>(
                  delta_,
                  getParentForChildren(),
                  isClean());
          delta_ = null;
        }
        return deltaBuilder_;
      }

      // optional .federation.ProtocolHashedVersion commitVersion = 3;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion commitVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> commitVersionBuilder_;
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public boolean hasCommitVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitVersion() {
        if (commitVersionBuilder_ == null) {
          return commitVersion_;
        } else {
          return commitVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public Builder setCommitVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (commitVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          commitVersion_ = value;
          onChanged();
        } else {
          commitVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public Builder setCommitVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (commitVersionBuilder_ == null) {
          commitVersion_ = builderForValue.build();
          onChanged();
        } else {
          commitVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public Builder mergeCommitVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (commitVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              commitVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            commitVersion_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(commitVersion_).mergeFrom(value).buildPartial();
          } else {
            commitVersion_ = value;
          }
          onChanged();
        } else {
          commitVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public Builder clearCommitVersion() {
        if (commitVersionBuilder_ == null) {
          commitVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          commitVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getCommitVersionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCommitVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getCommitVersionOrBuilder() {
        if (commitVersionBuilder_ != null) {
          return commitVersionBuilder_.getMessageOrBuilder();
        } else {
          return commitVersion_;
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion commitVersion = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getCommitVersionFieldBuilder() {
        if (commitVersionBuilder_ == null) {
          commitVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  commitVersion_,
                  getParentForChildren(),
                  isClean());
          commitVersion_ = null;
        }
        return commitVersionBuilder_;
      }

      // optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator terminator_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder> terminatorBuilder_;
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public boolean hasTerminator() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getTerminator() {
        if (terminatorBuilder_ == null) {
          return terminator_;
        } else {
          return terminatorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public Builder setTerminator(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator value) {
        if (terminatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          terminator_ = value;
          onChanged();
        } else {
          terminatorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public Builder setTerminator(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder builderForValue) {
        if (terminatorBuilder_ == null) {
          terminator_ = builderForValue.build();
          onChanged();
        } else {
          terminatorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public Builder mergeTerminator(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator value) {
        if (terminatorBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              terminator_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance()) {
            terminator_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.newBuilder(terminator_).mergeFrom(value).buildPartial();
          } else {
            terminator_ = value;
          }
          onChanged();
        } else {
          terminatorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public Builder clearTerminator() {
        if (terminatorBuilder_ == null) {
          terminator_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
          onChanged();
        } else {
          terminatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder getTerminatorBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTerminatorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder getTerminatorOrBuilder() {
        if (terminatorBuilder_ != null) {
          return terminatorBuilder_.getMessageOrBuilder();
        } else {
          return terminator_;
        }
      }
      /**
       * <code>optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;</code>
       *
       * <pre>
       * Last message contains only a terminator.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder> 
          getTerminatorFieldBuilder() {
        if (terminatorBuilder_ == null) {
          terminatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder>(
                  terminator_,
                  getParentForChildren(),
                  isClean());
          terminator_ = null;
        }
        return terminatorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.OpenWaveletChannelStream)
    }

    static {
      defaultInstance = new OpenWaveletChannelStream(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.OpenWaveletChannelStream)
  }

  public interface CloseWaveletChannelRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string channelId = 1;
    /**
     * <code>required string channelId = 1;</code>
     *
     * <pre>
     * Channel to close.
     * </pre>
     */
    boolean hasChannelId();
    /**
     * <code>required string channelId = 1;</code>
     *
     * <pre>
     * Channel to close.
     * </pre>
     */
    java.lang.String getChannelId();
    /**
     * <code>required string channelId = 1;</code>
     *
     * <pre>
     * Channel to close.
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();
  }
  /**
   * Protobuf type {@code concurrencycontrol.CloseWaveletChannelRequest}
   */
  public static final class CloseWaveletChannelRequest extends
      com.google.protobuf.GeneratedMessage
      implements CloseWaveletChannelRequestOrBuilder {
    // Use CloseWaveletChannelRequest.newBuilder() to construct.
    private CloseWaveletChannelRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CloseWaveletChannelRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CloseWaveletChannelRequest defaultInstance;
    public static CloseWaveletChannelRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CloseWaveletChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CloseWaveletChannelRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              channelId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CloseWaveletChannelRequest> PARSER =
        new com.google.protobuf.AbstractParser<CloseWaveletChannelRequest>() {
      public CloseWaveletChannelRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloseWaveletChannelRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CloseWaveletChannelRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string channelId = 1;
    public static final int CHANNELID_FIELD_NUMBER = 1;
    private java.lang.Object channelId_;
    /**
     * <code>required string channelId = 1;</code>
     *
     * <pre>
     * Channel to close.
     * </pre>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string channelId = 1;</code>
     *
     * <pre>
     * Channel to close.
     * </pre>
     */
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string channelId = 1;</code>
     *
     * <pre>
     * Channel to close.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      channelId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChannelId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChannelIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChannelIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.CloseWaveletChannelRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        channelId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.channelId_ = channelId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          bitField0_ |= 0x00000001;
          channelId_ = other.channelId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChannelId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string channelId = 1;
      private java.lang.Object channelId_ = "";
      /**
       * <code>required string channelId = 1;</code>
       *
       * <pre>
       * Channel to close.
       * </pre>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string channelId = 1;</code>
       *
       * <pre>
       * Channel to close.
       * </pre>
       */
      public java.lang.String getChannelId() {
        java.lang.Object ref = channelId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string channelId = 1;</code>
       *
       * <pre>
       * Channel to close.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        java.lang.Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string channelId = 1;</code>
       *
       * <pre>
       * Channel to close.
       * </pre>
       */
      public Builder setChannelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string channelId = 1;</code>
       *
       * <pre>
       * Channel to close.
       * </pre>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = getDefaultInstance().getChannelId();
        onChanged();
        return this;
      }
      /**
       * <code>required string channelId = 1;</code>
       *
       * <pre>
       * Channel to close.
       * </pre>
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.CloseWaveletChannelRequest)
    }

    static {
      defaultInstance = new CloseWaveletChannelRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.CloseWaveletChannelRequest)
  }

  public interface WaveletUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .federation.ProtocolWaveletDelta delta = 1;
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
     *
     * <pre>
     * Transformed delta.
     * </pre>
     */
    boolean hasDelta();
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
     *
     * <pre>
     * Transformed delta.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta();
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
     *
     * <pre>
     * Transformed delta.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder();

    // required .federation.ProtocolHashedVersion resultingVersion = 2;
    /**
     * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    boolean hasResultingVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion();
    /**
     * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getResultingVersionOrBuilder();

    // required int64 applicationTimpstamp = 3;
    /**
     * <code>required int64 applicationTimpstamp = 3;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    boolean hasApplicationTimpstamp();
    /**
     * <code>required int64 applicationTimpstamp = 3;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    long getApplicationTimpstamp();
  }
  /**
   * Protobuf type {@code concurrencycontrol.WaveletUpdate}
   *
   * <pre>
   ** A delta applied to a wavelet. 
   * </pre>
   */
  public static final class WaveletUpdate extends
      com.google.protobuf.GeneratedMessage
      implements WaveletUpdateOrBuilder {
    // Use WaveletUpdate.newBuilder() to construct.
    private WaveletUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletUpdate defaultInstance;
    public static WaveletUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = delta_.toBuilder();
              }
              delta_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(delta_);
                delta_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = resultingVersion_.toBuilder();
              }
              resultingVersion_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resultingVersion_);
                resultingVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              applicationTimpstamp_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletUpdate> PARSER =
        new com.google.protobuf.AbstractParser<WaveletUpdate>() {
      public WaveletUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletUpdate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .federation.ProtocolWaveletDelta delta = 1;
    public static final int DELTA_FIELD_NUMBER = 1;
    private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_;
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
     *
     * <pre>
     * Transformed delta.
     * </pre>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
     *
     * <pre>
     * Transformed delta.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
      return delta_;
    }
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
     *
     * <pre>
     * Transformed delta.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder() {
      return delta_;
    }

    // required .federation.ProtocolHashedVersion resultingVersion = 2;
    public static final int RESULTINGVERSION_FIELD_NUMBER = 2;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion resultingVersion_;
    /**
     * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    public boolean hasResultingVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() {
      return resultingVersion_;
    }
    /**
     * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getResultingVersionOrBuilder() {
      return resultingVersion_;
    }

    // required int64 applicationTimpstamp = 3;
    public static final int APPLICATIONTIMPSTAMP_FIELD_NUMBER = 3;
    private long applicationTimpstamp_;
    /**
     * <code>required int64 applicationTimpstamp = 3;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    public boolean hasApplicationTimpstamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 applicationTimpstamp = 3;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    public long getApplicationTimpstamp() {
      return applicationTimpstamp_;
    }

    private void initFields() {
      delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      applicationTimpstamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDelta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResultingVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasApplicationTimpstamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDelta().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getResultingVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, delta_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, resultingVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, applicationTimpstamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, delta_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, resultingVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, applicationTimpstamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.WaveletUpdate}
     *
     * <pre>
     ** A delta applied to a wavelet. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeltaFieldBuilder();
          getResultingVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (resultingVersionBuilder_ == null) {
          resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          resultingVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        applicationTimpstamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (deltaBuilder_ == null) {
          result.delta_ = delta_;
        } else {
          result.delta_ = deltaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (resultingVersionBuilder_ == null) {
          result.resultingVersion_ = resultingVersion_;
        } else {
          result.resultingVersion_ = resultingVersionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.applicationTimpstamp_ = applicationTimpstamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance()) return this;
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasResultingVersion()) {
          mergeResultingVersion(other.getResultingVersion());
        }
        if (other.hasApplicationTimpstamp()) {
          setApplicationTimpstamp(other.getApplicationTimpstamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDelta()) {
          
          return false;
        }
        if (!hasResultingVersion()) {
          
          return false;
        }
        if (!hasApplicationTimpstamp()) {
          
          return false;
        }
        if (!getDelta().isInitialized()) {
          
          return false;
        }
        if (!getResultingVersion().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .federation.ProtocolWaveletDelta delta = 1;
      private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> deltaBuilder_;
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
        if (deltaBuilder_ == null) {
          return delta_;
        } else {
          return deltaBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (deltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          delta_ = value;
          onChanged();
        } else {
          deltaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public Builder setDelta(
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (deltaBuilder_ == null) {
          delta_ = builderForValue.build();
          onChanged();
        } else {
          deltaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public Builder mergeDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (deltaBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              delta_ != org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance()) {
            delta_ =
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder(delta_).mergeFrom(value).buildPartial();
          } else {
            delta_ = value;
          }
          onChanged();
        } else {
          deltaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public Builder clearDelta() {
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
          onChanged();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder getDeltaBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDeltaFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder() {
        if (deltaBuilder_ != null) {
          return deltaBuilder_.getMessageOrBuilder();
        } else {
          return delta_;
        }
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 1;</code>
       *
       * <pre>
       * Transformed delta.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
          getDeltaFieldBuilder() {
        if (deltaBuilder_ == null) {
          deltaBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder>(
                  delta_,
                  getParentForChildren(),
                  isClean());
          delta_ = null;
        }
        return deltaBuilder_;
      }

      // required .federation.ProtocolHashedVersion resultingVersion = 2;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> resultingVersionBuilder_;
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public boolean hasResultingVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() {
        if (resultingVersionBuilder_ == null) {
          return resultingVersion_;
        } else {
          return resultingVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder setResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (resultingVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resultingVersion_ = value;
          onChanged();
        } else {
          resultingVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder setResultingVersion(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (resultingVersionBuilder_ == null) {
          resultingVersion_ = builderForValue.build();
          onChanged();
        } else {
          resultingVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder mergeResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (resultingVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              resultingVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            resultingVersion_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(resultingVersion_).mergeFrom(value).buildPartial();
          } else {
            resultingVersion_ = value;
          }
          onChanged();
        } else {
          resultingVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder clearResultingVersion() {
        if (resultingVersionBuilder_ == null) {
          resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          resultingVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getResultingVersionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getResultingVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getResultingVersionOrBuilder() {
        if (resultingVersionBuilder_ != null) {
          return resultingVersionBuilder_.getMessageOrBuilder();
        } else {
          return resultingVersion_;
        }
      }
      /**
       * <code>required .federation.ProtocolHashedVersion resultingVersion = 2;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getResultingVersionFieldBuilder() {
        if (resultingVersionBuilder_ == null) {
          resultingVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  resultingVersion_,
                  getParentForChildren(),
                  isClean());
          resultingVersion_ = null;
        }
        return resultingVersionBuilder_;
      }

      // required int64 applicationTimpstamp = 3;
      private long applicationTimpstamp_ ;
      /**
       * <code>required int64 applicationTimpstamp = 3;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public boolean hasApplicationTimpstamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 applicationTimpstamp = 3;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public long getApplicationTimpstamp() {
        return applicationTimpstamp_;
      }
      /**
       * <code>required int64 applicationTimpstamp = 3;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public Builder setApplicationTimpstamp(long value) {
        bitField0_ |= 0x00000004;
        applicationTimpstamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 applicationTimpstamp = 3;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public Builder clearApplicationTimpstamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        applicationTimpstamp_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletUpdate)
    }

    static {
      defaultInstance = new WaveletUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletUpdate)
  }

  public interface WaveletChannelTerminatorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .concurrencycontrol.ResponseStatus status = 1;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder();
  }
  /**
   * Protobuf type {@code concurrencycontrol.WaveletChannelTerminator}
   *
   * <pre>
   ** Terminates a wavelet stream. 
   * </pre>
   */
  public static final class WaveletChannelTerminator extends
      com.google.protobuf.GeneratedMessage
      implements WaveletChannelTerminatorOrBuilder {
    // Use WaveletChannelTerminator.newBuilder() to construct.
    private WaveletChannelTerminator(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WaveletChannelTerminator(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WaveletChannelTerminator defaultInstance;
    public static WaveletChannelTerminator getDefaultInstance() {
      return defaultInstance;
    }

    public WaveletChannelTerminator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WaveletChannelTerminator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder.class);
    }

    public static com.google.protobuf.Parser<WaveletChannelTerminator> PARSER =
        new com.google.protobuf.AbstractParser<WaveletChannelTerminator>() {
      public WaveletChannelTerminator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WaveletChannelTerminator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WaveletChannelTerminator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
      return status_;
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
      return status_;
    }

    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStatus().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, status_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.WaveletChannelTerminator}
     *
     * <pre>
     ** Terminates a wavelet stream. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!getStatus().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .concurrencycontrol.ResponseStatus status = 1;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> statusBuilder_;
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
            status_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_;
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder>(
                  status_,
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletChannelTerminator)
    }

    static {
      defaultInstance = new WaveletChannelTerminator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletChannelTerminator)
  }

  public interface SubmitDeltaRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string waveId = 1;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to submit to, URI path format.
     * </pre>
     */
    boolean hasWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to submit to, URI path format.
     * </pre>
     */
    java.lang.String getWaveId();
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to submit to, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveIdBytes();

    // required string waveletId = 2;
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet to submit to, URI path format.
     * </pre>
     */
    boolean hasWaveletId();
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet to submit to, URI path format.
     * </pre>
     */
    java.lang.String getWaveletId();
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet to submit to, URI path format.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWaveletIdBytes();

    // required .federation.ProtocolWaveletDelta delta = 3;
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
     *
     * <pre>
     * Delta to submit.
     * </pre>
     */
    boolean hasDelta();
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
     *
     * <pre>
     * Delta to submit.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta();
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
     *
     * <pre>
     * Delta to submit.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder();

    // required string channelId = 4;
    /**
     * <code>required string channelId = 4;</code>
     *
     * <pre>
     * Wavelet channel associated with submission.
     * </pre>
     */
    boolean hasChannelId();
    /**
     * <code>required string channelId = 4;</code>
     *
     * <pre>
     * Wavelet channel associated with submission.
     * </pre>
     */
    java.lang.String getChannelId();
    /**
     * <code>required string channelId = 4;</code>
     *
     * <pre>
     * Wavelet channel associated with submission.
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();
  }
  /**
   * Protobuf type {@code concurrencycontrol.SubmitDeltaRequest}
   */
  public static final class SubmitDeltaRequest extends
      com.google.protobuf.GeneratedMessage
      implements SubmitDeltaRequestOrBuilder {
    // Use SubmitDeltaRequest.newBuilder() to construct.
    private SubmitDeltaRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SubmitDeltaRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SubmitDeltaRequest defaultInstance;
    public static SubmitDeltaRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SubmitDeltaRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SubmitDeltaRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              waveId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              waveletId_ = input.readBytes();
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = delta_.toBuilder();
              }
              delta_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(delta_);
                delta_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              channelId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SubmitDeltaRequest> PARSER =
        new com.google.protobuf.AbstractParser<SubmitDeltaRequest>() {
      public SubmitDeltaRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubmitDeltaRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SubmitDeltaRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private java.lang.Object waveId_;
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to submit to, URI path format.
     * </pre>
     */
    public boolean hasWaveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to submit to, URI path format.
     * </pre>
     */
    public java.lang.String getWaveId() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveId = 1;</code>
     *
     * <pre>
     * Wave to submit to, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveIdBytes() {
      java.lang.Object ref = waveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string waveletId = 2;
    public static final int WAVELETID_FIELD_NUMBER = 2;
    private java.lang.Object waveletId_;
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet to submit to, URI path format.
     * </pre>
     */
    public boolean hasWaveletId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet to submit to, URI path format.
     * </pre>
     */
    public java.lang.String getWaveletId() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          waveletId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string waveletId = 2;</code>
     *
     * <pre>
     * Wavelet to submit to, URI path format.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWaveletIdBytes() {
      java.lang.Object ref = waveletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waveletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .federation.ProtocolWaveletDelta delta = 3;
    public static final int DELTA_FIELD_NUMBER = 3;
    private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_;
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
     *
     * <pre>
     * Delta to submit.
     * </pre>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
     *
     * <pre>
     * Delta to submit.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
      return delta_;
    }
    /**
     * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
     *
     * <pre>
     * Delta to submit.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder() {
      return delta_;
    }

    // required string channelId = 4;
    public static final int CHANNELID_FIELD_NUMBER = 4;
    private java.lang.Object channelId_;
    /**
     * <code>required string channelId = 4;</code>
     *
     * <pre>
     * Wavelet channel associated with submission.
     * </pre>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string channelId = 4;</code>
     *
     * <pre>
     * Wavelet channel associated with submission.
     * </pre>
     */
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string channelId = 4;</code>
     *
     * <pre>
     * Wavelet channel associated with submission.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      waveId_ = "";
      waveletId_ = "";
      delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      channelId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWaveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWaveletId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDelta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChannelId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDelta().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWaveIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, delta_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getChannelIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWaveIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getWaveletIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, delta_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getChannelIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.SubmitDeltaRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeltaFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        waveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        waveletId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        channelId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.waveId_ = waveId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.waveletId_ = waveletId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (deltaBuilder_ == null) {
          result.delta_ = delta_;
        } else {
          result.delta_ = deltaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channelId_ = channelId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          bitField0_ |= 0x00000001;
          waveId_ = other.waveId_;
          onChanged();
        }
        if (other.hasWaveletId()) {
          bitField0_ |= 0x00000002;
          waveletId_ = other.waveletId_;
          onChanged();
        }
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasChannelId()) {
          bitField0_ |= 0x00000008;
          channelId_ = other.channelId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWaveId()) {
          
          return false;
        }
        if (!hasWaveletId()) {
          
          return false;
        }
        if (!hasDelta()) {
          
          return false;
        }
        if (!hasChannelId()) {
          
          return false;
        }
        if (!getDelta().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string waveId = 1;
      private java.lang.Object waveId_ = "";
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to submit to, URI path format.
       * </pre>
       */
      public boolean hasWaveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to submit to, URI path format.
       * </pre>
       */
      public java.lang.String getWaveId() {
        java.lang.Object ref = waveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to submit to, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveIdBytes() {
        java.lang.Object ref = waveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to submit to, URI path format.
       * </pre>
       */
      public Builder setWaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to submit to, URI path format.
       * </pre>
       */
      public Builder clearWaveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        waveId_ = getDefaultInstance().getWaveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveId = 1;</code>
       *
       * <pre>
       * Wave to submit to, URI path format.
       * </pre>
       */
      public Builder setWaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        waveId_ = value;
        onChanged();
        return this;
      }

      // required string waveletId = 2;
      private java.lang.Object waveletId_ = "";
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet to submit to, URI path format.
       * </pre>
       */
      public boolean hasWaveletId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet to submit to, URI path format.
       * </pre>
       */
      public java.lang.String getWaveletId() {
        java.lang.Object ref = waveletId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          waveletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet to submit to, URI path format.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWaveletIdBytes() {
        java.lang.Object ref = waveletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          waveletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet to submit to, URI path format.
       * </pre>
       */
      public Builder setWaveletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        waveletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet to submit to, URI path format.
       * </pre>
       */
      public Builder clearWaveletId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        waveletId_ = getDefaultInstance().getWaveletId();
        onChanged();
        return this;
      }
      /**
       * <code>required string waveletId = 2;</code>
       *
       * <pre>
       * Wavelet to submit to, URI path format.
       * </pre>
       */
      public Builder setWaveletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        waveletId_ = value;
        onChanged();
        return this;
      }

      // required .federation.ProtocolWaveletDelta delta = 3;
      private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> deltaBuilder_;
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
        if (deltaBuilder_ == null) {
          return delta_;
        } else {
          return deltaBuilder_.getMessage();
        }
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (deltaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          delta_ = value;
          onChanged();
        } else {
          deltaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public Builder setDelta(
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (deltaBuilder_ == null) {
          delta_ = builderForValue.build();
          onChanged();
        } else {
          deltaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public Builder mergeDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (deltaBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              delta_ != org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance()) {
            delta_ =
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder(delta_).mergeFrom(value).buildPartial();
          } else {
            delta_ = value;
          }
          onChanged();
        } else {
          deltaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public Builder clearDelta() {
        if (deltaBuilder_ == null) {
          delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
          onChanged();
        } else {
          deltaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder getDeltaBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDeltaFieldBuilder().getBuilder();
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder getDeltaOrBuilder() {
        if (deltaBuilder_ != null) {
          return deltaBuilder_.getMessageOrBuilder();
        } else {
          return delta_;
        }
      }
      /**
       * <code>required .federation.ProtocolWaveletDelta delta = 3;</code>
       *
       * <pre>
       * Delta to submit.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder> 
          getDeltaFieldBuilder() {
        if (deltaBuilder_ == null) {
          deltaBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDeltaOrBuilder>(
                  delta_,
                  getParentForChildren(),
                  isClean());
          delta_ = null;
        }
        return deltaBuilder_;
      }

      // required string channelId = 4;
      private java.lang.Object channelId_ = "";
      /**
       * <code>required string channelId = 4;</code>
       *
       * <pre>
       * Wavelet channel associated with submission.
       * </pre>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string channelId = 4;</code>
       *
       * <pre>
       * Wavelet channel associated with submission.
       * </pre>
       */
      public java.lang.String getChannelId() {
        java.lang.Object ref = channelId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string channelId = 4;</code>
       *
       * <pre>
       * Wavelet channel associated with submission.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        java.lang.Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string channelId = 4;</code>
       *
       * <pre>
       * Wavelet channel associated with submission.
       * </pre>
       */
      public Builder setChannelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string channelId = 4;</code>
       *
       * <pre>
       * Wavelet channel associated with submission.
       * </pre>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channelId_ = getDefaultInstance().getChannelId();
        onChanged();
        return this;
      }
      /**
       * <code>required string channelId = 4;</code>
       *
       * <pre>
       * Wavelet channel associated with submission.
       * </pre>
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channelId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.SubmitDeltaRequest)
    }

    static {
      defaultInstance = new SubmitDeltaRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.SubmitDeltaRequest)
  }

  public interface SubmitDeltaResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .concurrencycontrol.ResponseStatus status = 1;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder();

    // required int32 operationsApplied = 2;
    /**
     * <code>required int32 operationsApplied = 2;</code>
     *
     * <pre>
     * Number of ops applied from the delta.
     * </pre>
     */
    boolean hasOperationsApplied();
    /**
     * <code>required int32 operationsApplied = 2;</code>
     *
     * <pre>
     * Number of ops applied from the delta.
     * </pre>
     */
    int getOperationsApplied();

    // optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;
    /**
     * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    boolean hasHashedVersionAfterApplication();
    /**
     * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication();
    /**
     * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionAfterApplicationOrBuilder();

    // optional int64 timestampAfterApplication = 4;
    /**
     * <code>optional int64 timestampAfterApplication = 4;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    boolean hasTimestampAfterApplication();
    /**
     * <code>optional int64 timestampAfterApplication = 4;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    long getTimestampAfterApplication();
  }
  /**
   * Protobuf type {@code concurrencycontrol.SubmitDeltaResponse}
   */
  public static final class SubmitDeltaResponse extends
      com.google.protobuf.GeneratedMessage
      implements SubmitDeltaResponseOrBuilder {
    // Use SubmitDeltaResponse.newBuilder() to construct.
    private SubmitDeltaResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SubmitDeltaResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SubmitDeltaResponse defaultInstance;
    public static SubmitDeltaResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SubmitDeltaResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SubmitDeltaResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              operationsApplied_ = input.readInt32();
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = hashedVersionAfterApplication_.toBuilder();
              }
              hashedVersionAfterApplication_ = input.readMessage(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hashedVersionAfterApplication_);
                hashedVersionAfterApplication_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timestampAfterApplication_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<SubmitDeltaResponse> PARSER =
        new com.google.protobuf.AbstractParser<SubmitDeltaResponse>() {
      public SubmitDeltaResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubmitDeltaResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SubmitDeltaResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
      return status_;
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
      return status_;
    }

    // required int32 operationsApplied = 2;
    public static final int OPERATIONSAPPLIED_FIELD_NUMBER = 2;
    private int operationsApplied_;
    /**
     * <code>required int32 operationsApplied = 2;</code>
     *
     * <pre>
     * Number of ops applied from the delta.
     * </pre>
     */
    public boolean hasOperationsApplied() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 operationsApplied = 2;</code>
     *
     * <pre>
     * Number of ops applied from the delta.
     * </pre>
     */
    public int getOperationsApplied() {
      return operationsApplied_;
    }

    // optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;
    public static final int HASHEDVERSIONAFTERAPPLICATION_FIELD_NUMBER = 3;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersionAfterApplication_;
    /**
     * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    public boolean hasHashedVersionAfterApplication() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() {
      return hashedVersionAfterApplication_;
    }
    /**
     * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
     *
     * <pre>
     * Wavelet hashed version after the delta.
     * </pre>
     */
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionAfterApplicationOrBuilder() {
      return hashedVersionAfterApplication_;
    }

    // optional int64 timestampAfterApplication = 4;
    public static final int TIMESTAMPAFTERAPPLICATION_FIELD_NUMBER = 4;
    private long timestampAfterApplication_;
    /**
     * <code>optional int64 timestampAfterApplication = 4;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    public boolean hasTimestampAfterApplication() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 timestampAfterApplication = 4;</code>
     *
     * <pre>
     * Timestamp of delta application.
     * </pre>
     */
    public long getTimestampAfterApplication() {
      return timestampAfterApplication_;
    }

    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      operationsApplied_ = 0;
      hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      timestampAfterApplication_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperationsApplied()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStatus().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHashedVersionAfterApplication()) {
        if (!getHashedVersionAfterApplication().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, operationsApplied_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, hashedVersionAfterApplication_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, timestampAfterApplication_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, operationsApplied_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, hashedVersionAfterApplication_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, timestampAfterApplication_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.SubmitDeltaResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
          getHashedVersionAfterApplicationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        operationsApplied_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        } else {
          hashedVersionAfterApplicationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        timestampAfterApplication_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operationsApplied_ = operationsApplied_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (hashedVersionAfterApplicationBuilder_ == null) {
          result.hashedVersionAfterApplication_ = hashedVersionAfterApplication_;
        } else {
          result.hashedVersionAfterApplication_ = hashedVersionAfterApplicationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestampAfterApplication_ = timestampAfterApplication_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (other.hasOperationsApplied()) {
          setOperationsApplied(other.getOperationsApplied());
        }
        if (other.hasHashedVersionAfterApplication()) {
          mergeHashedVersionAfterApplication(other.getHashedVersionAfterApplication());
        }
        if (other.hasTimestampAfterApplication()) {
          setTimestampAfterApplication(other.getTimestampAfterApplication());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasOperationsApplied()) {
          
          return false;
        }
        if (!getStatus().isInitialized()) {
          
          return false;
        }
        if (hasHashedVersionAfterApplication()) {
          if (!getHashedVersionAfterApplication().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .concurrencycontrol.ResponseStatus status = 1;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> statusBuilder_;
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder setStatus(
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
            status_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_;
        }
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus status = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder>(
                  status_,
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // required int32 operationsApplied = 2;
      private int operationsApplied_ ;
      /**
       * <code>required int32 operationsApplied = 2;</code>
       *
       * <pre>
       * Number of ops applied from the delta.
       * </pre>
       */
      public boolean hasOperationsApplied() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 operationsApplied = 2;</code>
       *
       * <pre>
       * Number of ops applied from the delta.
       * </pre>
       */
      public int getOperationsApplied() {
        return operationsApplied_;
      }
      /**
       * <code>required int32 operationsApplied = 2;</code>
       *
       * <pre>
       * Number of ops applied from the delta.
       * </pre>
       */
      public Builder setOperationsApplied(int value) {
        bitField0_ |= 0x00000002;
        operationsApplied_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 operationsApplied = 2;</code>
       *
       * <pre>
       * Number of ops applied from the delta.
       * </pre>
       */
      public Builder clearOperationsApplied() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operationsApplied_ = 0;
        onChanged();
        return this;
      }

      // optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;
      private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> hashedVersionAfterApplicationBuilder_;
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public boolean hasHashedVersionAfterApplication() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          return hashedVersionAfterApplication_;
        } else {
          return hashedVersionAfterApplicationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hashedVersionAfterApplication_ = value;
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder setHashedVersionAfterApplication(
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplication_ = builderForValue.build();
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder mergeHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              hashedVersionAfterApplication_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
            hashedVersionAfterApplication_ =
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(hashedVersionAfterApplication_).mergeFrom(value).buildPartial();
          } else {
            hashedVersionAfterApplication_ = value;
          }
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public Builder clearHashedVersionAfterApplication() {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
          onChanged();
        } else {
          hashedVersionAfterApplicationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder getHashedVersionAfterApplicationBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHashedVersionAfterApplicationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder getHashedVersionAfterApplicationOrBuilder() {
        if (hashedVersionAfterApplicationBuilder_ != null) {
          return hashedVersionAfterApplicationBuilder_.getMessageOrBuilder();
        } else {
          return hashedVersionAfterApplication_;
        }
      }
      /**
       * <code>optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;</code>
       *
       * <pre>
       * Wavelet hashed version after the delta.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder> 
          getHashedVersionAfterApplicationFieldBuilder() {
        if (hashedVersionAfterApplicationBuilder_ == null) {
          hashedVersionAfterApplicationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder, org.waveprotocol.wave.federation.Proto.ProtocolHashedVersionOrBuilder>(
                  hashedVersionAfterApplication_,
                  getParentForChildren(),
                  isClean());
          hashedVersionAfterApplication_ = null;
        }
        return hashedVersionAfterApplicationBuilder_;
      }

      // optional int64 timestampAfterApplication = 4;
      private long timestampAfterApplication_ ;
      /**
       * <code>optional int64 timestampAfterApplication = 4;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public boolean hasTimestampAfterApplication() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 timestampAfterApplication = 4;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public long getTimestampAfterApplication() {
        return timestampAfterApplication_;
      }
      /**
       * <code>optional int64 timestampAfterApplication = 4;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public Builder setTimestampAfterApplication(long value) {
        bitField0_ |= 0x00000008;
        timestampAfterApplication_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestampAfterApplication = 4;</code>
       *
       * <pre>
       * Timestamp of delta application.
       * </pre>
       */
      public Builder clearTimestampAfterApplication() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestampAfterApplication_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.SubmitDeltaResponse)
    }

    static {
      defaultInstance = new SubmitDeltaResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.SubmitDeltaResponse)
  }

  public interface TransportAuthenticationRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string token = 1;
    /**
     * <code>required string token = 1;</code>
     *
     * <pre>
     * Authentication token.
     * </pre>
     */
    boolean hasToken();
    /**
     * <code>required string token = 1;</code>
     *
     * <pre>
     * Authentication token.
     * </pre>
     */
    java.lang.String getToken();
    /**
     * <code>required string token = 1;</code>
     *
     * <pre>
     * Authentication token.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTokenBytes();
  }
  /**
   * Protobuf type {@code concurrencycontrol.TransportAuthenticationRequest}
   */
  public static final class TransportAuthenticationRequest extends
      com.google.protobuf.GeneratedMessage
      implements TransportAuthenticationRequestOrBuilder {
    // Use TransportAuthenticationRequest.newBuilder() to construct.
    private TransportAuthenticationRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TransportAuthenticationRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TransportAuthenticationRequest defaultInstance;
    public static TransportAuthenticationRequest getDefaultInstance() {
      return defaultInstance;
    }

    public TransportAuthenticationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TransportAuthenticationRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              token_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<TransportAuthenticationRequest> PARSER =
        new com.google.protobuf.AbstractParser<TransportAuthenticationRequest>() {
      public TransportAuthenticationRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransportAuthenticationRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TransportAuthenticationRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.Object token_;
    /**
     * <code>required string token = 1;</code>
     *
     * <pre>
     * Authentication token.
     * </pre>
     */
    public boolean hasToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string token = 1;</code>
     *
     * <pre>
     * Authentication token.
     * </pre>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          token_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string token = 1;</code>
     *
     * <pre>
     * Authentication token.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      token_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasToken()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTokenBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTokenBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.TransportAuthenticationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          bitField0_ |= 0x00000001;
          token_ = other.token_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasToken()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string token = 1;
      private java.lang.Object token_ = "";
      /**
       * <code>required string token = 1;</code>
       *
       * <pre>
       * Authentication token.
       * </pre>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string token = 1;</code>
       *
       * <pre>
       * Authentication token.
       * </pre>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string token = 1;</code>
       *
       * <pre>
       * Authentication token.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string token = 1;</code>
       *
       * <pre>
       * Authentication token.
       * </pre>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string token = 1;</code>
       *
       * <pre>
       * Authentication token.
       * </pre>
       */
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>required string token = 1;</code>
       *
       * <pre>
       * Authentication token.
       * </pre>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.TransportAuthenticationRequest)
    }

    static {
      defaultInstance = new TransportAuthenticationRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.TransportAuthenticationRequest)
  }

  public interface EmptyResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code concurrencycontrol.EmptyResponse}
   *
   * <pre>
   *** An empty message for services which have no application-level result. **
   * </pre>
   */
  public static final class EmptyResponse extends
      com.google.protobuf.GeneratedMessage
      implements EmptyResponseOrBuilder {
    // Use EmptyResponse.newBuilder() to construct.
    private EmptyResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EmptyResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EmptyResponse defaultInstance;
    public static EmptyResponse getDefaultInstance() {
      return defaultInstance;
    }

    public EmptyResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EmptyResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<EmptyResponse> PARSER =
        new com.google.protobuf.AbstractParser<EmptyResponse>() {
      public EmptyResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EmptyResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EmptyResponse> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.EmptyResponse}
     *
     * <pre>
     *** An empty message for services which have no application-level result. **
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.EmptyResponse)
    }

    static {
      defaultInstance = new EmptyResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.EmptyResponse)
  }

  public interface ResponseStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;
    /**
     * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
     */
    org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode getStatus();

    // optional string failureReason = 2;
    /**
     * <code>optional string failureReason = 2;</code>
     *
     * <pre>
     * Reason must be provided if status != OK.
     * </pre>
     */
    boolean hasFailureReason();
    /**
     * <code>optional string failureReason = 2;</code>
     *
     * <pre>
     * Reason must be provided if status != OK.
     * </pre>
     */
    java.lang.String getFailureReason();
    /**
     * <code>optional string failureReason = 2;</code>
     *
     * <pre>
     * Reason must be provided if status != OK.
     * </pre>
     */
    com.google.protobuf.ByteString
        getFailureReasonBytes();
  }
  /**
   * Protobuf type {@code concurrencycontrol.ResponseStatus}
   *
   * <pre>
   *** Response status for all services **
   * </pre>
   */
  public static final class ResponseStatus extends
      com.google.protobuf.GeneratedMessage
      implements ResponseStatusOrBuilder {
    // Use ResponseStatus.newBuilder() to construct.
    private ResponseStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ResponseStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ResponseStatus defaultInstance;
    public static ResponseStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ResponseStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ResponseStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode value = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              failureReason_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ResponseStatus> PARSER =
        new com.google.protobuf.AbstractParser<ResponseStatus>() {
      public ResponseStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResponseStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseStatus> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code concurrencycontrol.ResponseStatus.ResponseCode}
     */
    public enum ResponseCode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OK = 0;</code>
       *
       * <pre>
       * All good.
       * </pre>
       */
      OK(0, 0),
      /**
       * <code>BAD_REQUEST = 1;</code>
       *
       * <pre>
       * Request was ill-formed.
       * </pre>
       */
      BAD_REQUEST(1, 1),
      /**
       * <code>INTERNAL_ERROR = 2;</code>
       *
       * <pre>
       * An unspecified internal error occurred.
       * </pre>
       */
      INTERNAL_ERROR(2, 2),
      /**
       * <code>NOT_AUTHORIZED = 3;</code>
       *
       * <pre>
       * The request was not authorized.
       * </pre>
       */
      NOT_AUTHORIZED(3, 3),
      /**
       * <code>VERSION_ERROR = 4;</code>
       *
       * <pre>
       * Hashed version didn't match a point in history.
       * </pre>
       */
      VERSION_ERROR(4, 4),
      /**
       * <code>INVALID_OPERATION = 5;</code>
       *
       * <pre>
       * A delta contained an invalid operation (before or after transformation).
       * </pre>
       */
      INVALID_OPERATION(5, 5),
      /**
       * <code>SCHEMA_VIOLATION = 6;</code>
       *
       * <pre>
       * An operation didn't preserve a document schema.
       * </pre>
       */
      SCHEMA_VIOLATION(6, 6),
      /**
       * <code>SIZE_LIMIT_EXCEEDED = 7;</code>
       *
       * <pre>
       * A delta is too big or the resulting document count or size is too large.
       * </pre>
       */
      SIZE_LIMIT_EXCEEDED(7, 7),
      /**
       * <code>POLICY_VIOLATION = 8;</code>
       *
       * <pre>
       * An operation was rejected by a server policy.
       * </pre>
       */
      POLICY_VIOLATION(8, 8),
      /**
       * <code>QUARANTINED = 9;</code>
       *
       * <pre>
       * An object is unavailable because it has been quarantined.
       * </pre>
       */
      QUARANTINED(9, 9),
      /**
       * <code>TOO_OLD = 10;</code>
       *
       * <pre>
       * A request was made against a version older than the server was willing
       * to satisfy. Transform and retry.
       * </pre>
       */
      TOO_OLD(10, 10),
      ;

      /**
       * <code>OK = 0;</code>
       *
       * <pre>
       * All good.
       * </pre>
       */
      public static final int OK_VALUE = 0;
      /**
       * <code>BAD_REQUEST = 1;</code>
       *
       * <pre>
       * Request was ill-formed.
       * </pre>
       */
      public static final int BAD_REQUEST_VALUE = 1;
      /**
       * <code>INTERNAL_ERROR = 2;</code>
       *
       * <pre>
       * An unspecified internal error occurred.
       * </pre>
       */
      public static final int INTERNAL_ERROR_VALUE = 2;
      /**
       * <code>NOT_AUTHORIZED = 3;</code>
       *
       * <pre>
       * The request was not authorized.
       * </pre>
       */
      public static final int NOT_AUTHORIZED_VALUE = 3;
      /**
       * <code>VERSION_ERROR = 4;</code>
       *
       * <pre>
       * Hashed version didn't match a point in history.
       * </pre>
       */
      public static final int VERSION_ERROR_VALUE = 4;
      /**
       * <code>INVALID_OPERATION = 5;</code>
       *
       * <pre>
       * A delta contained an invalid operation (before or after transformation).
       * </pre>
       */
      public static final int INVALID_OPERATION_VALUE = 5;
      /**
       * <code>SCHEMA_VIOLATION = 6;</code>
       *
       * <pre>
       * An operation didn't preserve a document schema.
       * </pre>
       */
      public static final int SCHEMA_VIOLATION_VALUE = 6;
      /**
       * <code>SIZE_LIMIT_EXCEEDED = 7;</code>
       *
       * <pre>
       * A delta is too big or the resulting document count or size is too large.
       * </pre>
       */
      public static final int SIZE_LIMIT_EXCEEDED_VALUE = 7;
      /**
       * <code>POLICY_VIOLATION = 8;</code>
       *
       * <pre>
       * An operation was rejected by a server policy.
       * </pre>
       */
      public static final int POLICY_VIOLATION_VALUE = 8;
      /**
       * <code>QUARANTINED = 9;</code>
       *
       * <pre>
       * An object is unavailable because it has been quarantined.
       * </pre>
       */
      public static final int QUARANTINED_VALUE = 9;
      /**
       * <code>TOO_OLD = 10;</code>
       *
       * <pre>
       * A request was made against a version older than the server was willing
       * to satisfy. Transform and retry.
       * </pre>
       */
      public static final int TOO_OLD_VALUE = 10;


      public final int getNumber() { return value; }

      public static ResponseCode valueOf(int value) {
        switch (value) {
          case 0: return OK;
          case 1: return BAD_REQUEST;
          case 2: return INTERNAL_ERROR;
          case 3: return NOT_AUTHORIZED;
          case 4: return VERSION_ERROR;
          case 5: return INVALID_OPERATION;
          case 6: return SCHEMA_VIOLATION;
          case 7: return SIZE_LIMIT_EXCEEDED;
          case 8: return POLICY_VIOLATION;
          case 9: return QUARANTINED;
          case 10: return TOO_OLD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResponseCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ResponseCode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseCode>() {
              public ResponseCode findValueByNumber(int number) {
                return ResponseCode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDescriptor().getEnumTypes().get(0);
      }

      private static final ResponseCode[] VALUES = values();

      public static ResponseCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ResponseCode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:concurrencycontrol.ResponseStatus.ResponseCode)
    }

    private int bitField0_;
    // required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode status_;
    /**
     * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
     */
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode getStatus() {
      return status_;
    }

    // optional string failureReason = 2;
    public static final int FAILUREREASON_FIELD_NUMBER = 2;
    private java.lang.Object failureReason_;
    /**
     * <code>optional string failureReason = 2;</code>
     *
     * <pre>
     * Reason must be provided if status != OK.
     * </pre>
     */
    public boolean hasFailureReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string failureReason = 2;</code>
     *
     * <pre>
     * Reason must be provided if status != OK.
     * </pre>
     */
    public java.lang.String getFailureReason() {
      java.lang.Object ref = failureReason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          failureReason_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string failureReason = 2;</code>
     *
     * <pre>
     * Reason must be provided if status != OK.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFailureReasonBytes() {
      java.lang.Object ref = failureReason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        failureReason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.OK;
      failureReason_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFailureReasonBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFailureReasonBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code concurrencycontrol.ResponseStatus}
     *
     * <pre>
     *** Response status for all services **
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.class, org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder.class);
      }

      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.OK;
        bitField0_ = (bitField0_ & ~0x00000001);
        failureReason_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_descriptor;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus build() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus buildPartial() {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.failureReason_ = failureReason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasFailureReason()) {
          bitField0_ |= 0x00000002;
          failureReason_ = other.failureReason_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.OK;
      /**
       * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
       */
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode getStatus() {
        return status_;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
       */
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.OK;
        onChanged();
        return this;
      }

      // optional string failureReason = 2;
      private java.lang.Object failureReason_ = "";
      /**
       * <code>optional string failureReason = 2;</code>
       *
       * <pre>
       * Reason must be provided if status != OK.
       * </pre>
       */
      public boolean hasFailureReason() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string failureReason = 2;</code>
       *
       * <pre>
       * Reason must be provided if status != OK.
       * </pre>
       */
      public java.lang.String getFailureReason() {
        java.lang.Object ref = failureReason_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          failureReason_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string failureReason = 2;</code>
       *
       * <pre>
       * Reason must be provided if status != OK.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFailureReasonBytes() {
        java.lang.Object ref = failureReason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          failureReason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string failureReason = 2;</code>
       *
       * <pre>
       * Reason must be provided if status != OK.
       * </pre>
       */
      public Builder setFailureReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        failureReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string failureReason = 2;</code>
       *
       * <pre>
       * Reason must be provided if status != OK.
       * </pre>
       */
      public Builder clearFailureReason() {
        bitField0_ = (bitField0_ & ~0x00000002);
        failureReason_ = getDefaultInstance().getFailureReason();
        onChanged();
        return this;
      }
      /**
       * <code>optional string failureReason = 2;</code>
       *
       * <pre>
       * Reason must be provided if status != OK.
       * </pre>
       */
      public Builder setFailureReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        failureReason_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:concurrencycontrol.ResponseStatus)
    }

    static {
      defaultInstance = new ResponseStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:concurrencycontrol.ResponseStatus)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_DocumentSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_EmptyResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_ResponseStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;org/waveprotocol/wave/concurrencycontr" +
      "ol/clientserver.proto\022\022concurrencycontro" +
      "l\032)org/waveprotocol/box/server/rpc/rpc.p" +
      "roto\0326org/waveprotocol/wave/federation/f" +
      "ederation.protodevel\"`\n\024FetchWaveViewReq" +
      "uest\022\016\n\006waveId\030\001 \002(\t\0228\n\014knownWavelet\030\002 \003" +
      "(\0132\".concurrencycontrol.WaveletVersion\"\344" +
      "\001\n\025FetchWaveViewResponse\0222\n\006status\030\001 \002(\013" +
      "2\".concurrencycontrol.ResponseStatus\022B\n\007" +
      "wavelet\030\002 \003(\01321.concurrencycontrol.Fetch",
      "WaveViewResponse.Wavelet\032S\n\007Wavelet\022\021\n\tw" +
      "aveletId\030\001 \002(\t\0225\n\010snapshot\030\002 \001(\0132#.concu" +
      "rrencycontrol.WaveletSnapshot\"W\n\016Wavelet" +
      "Version\022\021\n\twaveletId\030\001 \002(\t\0222\n\007version\030\002 " +
      "\002(\0132!.federation.ProtocolHashedVersion\"\346" +
      "\001\n\017WaveletSnapshot\022\021\n\twaveletId\030\001 \002(\t\022\023\n" +
      "\013participant\030\002 \003(\t\0226\n\010document\030\003 \003(\0132$.c" +
      "oncurrencycontrol.DocumentSnapshot\0222\n\007ve" +
      "rsion\030\004 \002(\0132!.federation.ProtocolHashedV" +
      "ersion\022\030\n\020lastModifiedTime\030\005 \002(\003\022\017\n\007crea",
      "tor\030\006 \002(\t\022\024\n\014creationTime\030\007 \002(\003\"\304\001\n\020Docu" +
      "mentSnapshot\022\022\n\ndocumentId\030\001 \002(\t\022@\n\021docu" +
      "mentOperation\030\002 \002(\0132%.federation.Protoco" +
      "lDocumentOperation\022\016\n\006author\030\003 \002(\t\022\023\n\013co" +
      "ntributor\030\004 \003(\t\022\033\n\023lastModifiedVersion\030\005" +
      " \002(\003\022\030\n\020lastModifiedTime\030\006 \002(\003\"w\n\031OpenWa" +
      "veletChannelRequest\022\016\n\006waveId\030\001 \002(\t\022\021\n\tw" +
      "aveletId\030\002 \002(\t\0227\n\014beginVersion\030\003 \002(\0132!.f" +
      "ederation.ProtocolHashedVersion\"\333\001\n\030Open" +
      "WaveletChannelStream\022\021\n\tchannelId\030\001 \001(\t\022",
      "0\n\005delta\030\002 \001(\0132!.concurrencycontrol.Wave" +
      "letUpdate\0228\n\rcommitVersion\030\003 \001(\0132!.feder" +
      "ation.ProtocolHashedVersion\022@\n\nterminato" +
      "r\030\004 \001(\0132,.concurrencycontrol.WaveletChan" +
      "nelTerminator\"/\n\032CloseWaveletChannelRequ" +
      "est\022\021\n\tchannelId\030\001 \002(\t\"\233\001\n\rWaveletUpdate" +
      "\022/\n\005delta\030\001 \002(\0132 .federation.ProtocolWav" +
      "eletDelta\022;\n\020resultingVersion\030\002 \002(\0132!.fe" +
      "deration.ProtocolHashedVersion\022\034\n\024applic" +
      "ationTimpstamp\030\003 \002(\003\"N\n\030WaveletChannelTe",
      "rminator\0222\n\006status\030\001 \002(\0132\".concurrencyco" +
      "ntrol.ResponseStatus\"{\n\022SubmitDeltaReque" +
      "st\022\016\n\006waveId\030\001 \002(\t\022\021\n\twaveletId\030\002 \002(\t\022/\n" +
      "\005delta\030\003 \002(\0132 .federation.ProtocolWavele" +
      "tDelta\022\021\n\tchannelId\030\004 \002(\t\"\321\001\n\023SubmitDelt" +
      "aResponse\0222\n\006status\030\001 \002(\0132\".concurrencyc" +
      "ontrol.ResponseStatus\022\031\n\021operationsAppli" +
      "ed\030\002 \002(\005\022H\n\035hashedVersionAfterApplicatio" +
      "n\030\003 \001(\0132!.federation.ProtocolHashedVersi" +
      "on\022!\n\031timestampAfterApplication\030\004 \001(\003\"/\n",
      "\036TransportAuthenticationRequest\022\r\n\005token" +
      "\030\001 \002(\t\"\017\n\rEmptyResponse\"\307\002\n\016ResponseStat" +
      "us\022?\n\006status\030\001 \002(\0162/.concurrencycontrol." +
      "ResponseStatus.ResponseCode\022\025\n\rfailureRe" +
      "ason\030\002 \001(\t\"\334\001\n\014ResponseCode\022\006\n\002OK\020\000\022\017\n\013B" +
      "AD_REQUEST\020\001\022\022\n\016INTERNAL_ERROR\020\002\022\022\n\016NOT_" +
      "AUTHORIZED\020\003\022\021\n\rVERSION_ERROR\020\004\022\025\n\021INVAL" +
      "ID_OPERATION\020\005\022\024\n\020SCHEMA_VIOLATION\020\006\022\027\n\023" +
      "SIZE_LIMIT_EXCEEDED\020\007\022\024\n\020POLICY_VIOLATIO" +
      "N\020\010\022\017\n\013QUARANTINED\020\t\022\013\n\007TOO_OLD\020\n2l\n\014Fet",
      "chService\022\\\n\005Fetch\022(.concurrencycontrol." +
      "FetchWaveViewRequest\032).concurrencycontro" +
      "l.FetchWaveViewResponse2\335\001\n\025WaveletChann" +
      "elService\022h\n\004Open\022-.concurrencycontrol.O" +
      "penWaveletChannelRequest\032,.concurrencyco" +
      "ntrol.OpenWaveletChannelStream\"\003\330>\001\022Z\n\005C" +
      "lose\022..concurrencycontrol.CloseWaveletCh" +
      "annelRequest\032!.concurrencycontrol.EmptyR" +
      "esponse2s\n\026DeltaSubmissionService\022Y\n\006Sub" +
      "mit\022&.concurrencycontrol.SubmitDeltaRequ",
      "est\032\'.concurrencycontrol.SubmitDeltaResp" +
      "onse2\207\001\n\036TransportAuthenticationService\022" +
      "e\n\014Authenticate\0222.concurrencycontrol.Tra" +
      "nsportAuthenticationRequest\032!.concurrenc" +
      "ycontrol.EmptyResponseB8\n(org.waveprotoc" +
      "ol.wave.concurrencycontrolB\014ClientServer"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor,
              new java.lang.String[] { "WaveId", "KnownWavelet", });
          internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor,
              new java.lang.String[] { "Status", "Wavelet", });
          internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor =
            internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor.getNestedTypes().get(0);
          internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor,
              new java.lang.String[] { "WaveletId", "Snapshot", });
          internal_static_concurrencycontrol_WaveletVersion_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletVersion_descriptor,
              new java.lang.String[] { "WaveletId", "Version", });
          internal_static_concurrencycontrol_WaveletSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletSnapshot_descriptor,
              new java.lang.String[] { "WaveletId", "Participant", "Document", "Version", "LastModifiedTime", "Creator", "CreationTime", });
          internal_static_concurrencycontrol_DocumentSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_DocumentSnapshot_descriptor,
              new java.lang.String[] { "DocumentId", "DocumentOperation", "Author", "Contributor", "LastModifiedVersion", "LastModifiedTime", });
          internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor,
              new java.lang.String[] { "WaveId", "WaveletId", "BeginVersion", });
          internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor,
              new java.lang.String[] { "ChannelId", "Delta", "CommitVersion", "Terminator", });
          internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor,
              new java.lang.String[] { "ChannelId", });
          internal_static_concurrencycontrol_WaveletUpdate_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletUpdate_descriptor,
              new java.lang.String[] { "Delta", "ResultingVersion", "ApplicationTimpstamp", });
          internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor,
              new java.lang.String[] { "Status", });
          internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor,
              new java.lang.String[] { "WaveId", "WaveletId", "Delta", "ChannelId", });
          internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor,
              new java.lang.String[] { "Status", "OperationsApplied", "HashedVersionAfterApplication", "TimestampAfterApplication", });
          internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor,
              new java.lang.String[] { "Token", });
          internal_static_concurrencycontrol_EmptyResponse_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_EmptyResponse_descriptor,
              new java.lang.String[] { });
          internal_static_concurrencycontrol_ResponseStatus_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_ResponseStatus_descriptor,
              new java.lang.String[] { "Status", "FailureReason", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(org.waveprotocol.box.server.rpc.Rpc.isStreamingRpc);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.waveprotocol.box.server.rpc.Rpc.getDescriptor(),
          org.waveprotocol.wave.federation.Proto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
