/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.waveprotocol.wave.client.common.util;

import org.waveprotocol.wave.model.util.CollectionUtils;
import org.waveprotocol.wave.model.util.StringMap;

// THIS CLASS IS GENERATED BY generateConstants.sh, DO NOT EDIT DIRECTLY //

/** QuirksConstants string names for debugging */
public final class QuirksConstantsStrings {
  public static final StringMap<Boolean> CONSTANTS = CollectionUtils.createStringMap();
  static {

    CONSTANTS.put("PROVIDES_MUTATION_EVENTS",QuirksConstants.PROVIDES_MUTATION_EVENTS);
    CONSTANTS.put("USUALLY_LEFT_NORMALISES",QuirksConstants.USUALLY_LEFT_NORMALISES);
    CONSTANTS.put("LIES_ABOUT_CARET_AT_LINK_END_BOUNDARY",QuirksConstants.LIES_ABOUT_CARET_AT_LINK_END_BOUNDARY);
    CONSTANTS.put("DOES_NOT_LEFT_NORMALISE_AT_LINK_END_BOUNDARY",QuirksConstants.DOES_NOT_LEFT_NORMALISE_AT_LINK_END_BOUNDARY);
    CONSTANTS.put("ALWAYS_GIVES_KEY_EVENT_BEFORE_CHANGING_DOM",QuirksConstants.ALWAYS_GIVES_KEY_EVENT_BEFORE_CHANGING_DOM);
    CONSTANTS.put("CAN_TELL_WHEN_FIRST_KEY_EVENT_IS_IME",QuirksConstants.CAN_TELL_WHEN_FIRST_KEY_EVENT_IS_IME);
    CONSTANTS.put("HAS_OLD_SCHOOL_CLIPBOARD_SHORTCUTS",QuirksConstants.HAS_OLD_SCHOOL_CLIPBOARD_SHORTCUTS);
    CONSTANTS.put("OK_SELECTION_ACROSS_TEXT_NODE_DATA_CHANGES",QuirksConstants.OK_SELECTION_ACROSS_TEXT_NODE_DATA_CHANGES);
    CONSTANTS.put("OK_SELECTION_ACROSS_NODE_REMOVALS",QuirksConstants.OK_SELECTION_ACROSS_NODE_REMOVALS);
    CONSTANTS.put("OK_SELECTION_ACROSS_TEXT_NODE_SPLITS",QuirksConstants.OK_SELECTION_ACROSS_TEXT_NODE_SPLITS);
    CONSTANTS.put("OK_SELECTION_ACROSS_MOVES",QuirksConstants.OK_SELECTION_ACROSS_MOVES);
    CONSTANTS.put("PRESERVES_SEMANTIC_SELECTION_ACROSS_INTRINSIC_TEXT_NODE_CHANGES",QuirksConstants.PRESERVES_SEMANTIC_SELECTION_ACROSS_INTRINSIC_TEXT_NODE_CHANGES);
    CONSTANTS.put("PRESERVES_SEMANTIC_SELECTION_ACROSS_MUTATIONS_OR_CLEARS_IT",QuirksConstants.PRESERVES_SEMANTIC_SELECTION_ACROSS_MUTATIONS_OR_CLEARS_IT);
    CONSTANTS.put("RANGED_SELECTION_AFFECTED_BY_INTERNAL_CHANGED",QuirksConstants.RANGED_SELECTION_AFFECTED_BY_INTERNAL_CHANGED);
    CONSTANTS.put("PRESERVES_IME_STATE_ACROSS_ADJACENT_CHANGES",QuirksConstants.PRESERVES_IME_STATE_ACROSS_ADJACENT_CHANGES);
    CONSTANTS.put("DOES_NOT_SUPPORT_JSO_PROTO_FIELD",QuirksConstants.DOES_NOT_SUPPORT_JSO_PROTO_FIELD);
    CONSTANTS.put("CANCEL_BUBBLING_CANCELS_IME_COMPOSITION_AND_CONTEXTMENU",QuirksConstants.CANCEL_BUBBLING_CANCELS_IME_COMPOSITION_AND_CONTEXTMENU);
    CONSTANTS.put("SUPPORTS_EVENT_GET_RANGE_METHODS",QuirksConstants.SUPPORTS_EVENT_GET_RANGE_METHODS);
    CONSTANTS.put("PREVENT_DEFAULT_STOPS_CONTEXTMENT",QuirksConstants.PREVENT_DEFAULT_STOPS_CONTEXTMENT);
    CONSTANTS.put("CONTEXTMENU_SETS_SELECTION",QuirksConstants.CONTEXTMENU_SETS_SELECTION);
    CONSTANTS.put("HAS_BASE_AND_EXTENT",QuirksConstants.HAS_BASE_AND_EXTENT);
    CONSTANTS.put("COMMAND_COMBO_DOESNT_GIVE_KEYPRESS",QuirksConstants.COMMAND_COMBO_DOESNT_GIVE_KEYPRESS);
    CONSTANTS.put("SUPPORTS_GET_ELEMENTS_BY_CLASSNAME",QuirksConstants.SUPPORTS_GET_ELEMENTS_BY_CLASSNAME);
    CONSTANTS.put("SUPPORTS_COMPOSITION_EVENTS",QuirksConstants.SUPPORTS_COMPOSITION_EVENTS);
    CONSTANTS.put("MODIFIES_DOM_AND_FIRES_TEXTINPUT_AFTER_COMPOSITION",QuirksConstants.MODIFIES_DOM_AND_FIRES_TEXTINPUT_AFTER_COMPOSITION);
    CONSTANTS.put("SUPPORTS_CARET_IN_EMPTY_SPAN",QuirksConstants.SUPPORTS_CARET_IN_EMPTY_SPAN);
    CONSTANTS.put("ADJUSTS_SCROLL_TOP_WHEN_FOCUSING",QuirksConstants.ADJUSTS_SCROLL_TOP_WHEN_FOCUSING);
    CONSTANTS.put("PLAINTEXT_PASTE_DOES_NOT_EMIT_PASTE_EVENT",QuirksConstants.PLAINTEXT_PASTE_DOES_NOT_EMIT_PASTE_EVENT);

  }
}

